//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Data.Entity.Infrastructure.MappingViews;

[assembly: DbMappingViewCacheTypeAttribute(
    typeof(Inventory360Entity.Inventory360Entities),
    typeof(Edm_EntityMappingGeneratedViews.ViewsForBaseEntitySets75478775c6c8e6c1e0fd1fb21f8fd6ef0ac45a6648940295737adb641eabd99f))]

namespace Edm_EntityMappingGeneratedViews
{
    using System;
    using System.CodeDom.Compiler;
    using System.Data.Entity.Core.Metadata.Edm;

    /// <summary>
    /// Implements a mapping view cache.
    /// </summary>
    [GeneratedCode("Entity Framework 6 Power Tools", "0.9.5.0")]
    internal sealed class ViewsForBaseEntitySets75478775c6c8e6c1e0fd1fb21f8fd6ef0ac45a6648940295737adb641eabd99f : DbMappingViewCache
    {
        /// <summary>
        /// Gets a hash value computed over the mapping closure.
        /// </summary>
        public override string MappingHashValue
        {
            get { return "75478775c6c8e6c1e0fd1fb21f8fd6ef0ac45a6648940295737adb641eabd99f"; }
        }

        /// <summary>
        /// Gets a view corresponding to the specified extent.
        /// </summary>
        /// <param name="extent">The extent.</param>
        /// <returns>The mapping view, or null if the extent is not associated with a mapping view.</returns>
        public override DbMappingView GetView(EntitySetBase extent)
        {
            if (extent == null)
            {
                throw new ArgumentNullException("extent");
            }

            var extentName = extent.EntityContainer.Name + "." + extent.Name;

            if (extentName == "BTS_OPSModelStoreContainer.Configuration_Code")
            {
                return GetView0();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Configuration_CurrencyRate")
            {
                return GetView1();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Configuration_EventWiseCharge")
            {
                return GetView2();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Configuration_Features")
            {
                return GetView3();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Configuration_GovtDutyRate_HSCode")
            {
                return GetView4();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Configuration_GovtDutyRate_Location")
            {
                return GetView5();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Configuration_OperationalEvent")
            {
                return GetView6();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Configuration_OperationalEventDetail")
            {
                return GetView7();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Configuration_OperationType")
            {
                return GetView8();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Configuration_PaymentMode")
            {
                return GetView9();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Configuration_Voucher")
            {
                return GetView10();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Configuration_VoucherDetail")
            {
                return GetView11();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Others_Documents")
            {
                return GetView12();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Others_Menu")
            {
                return GetView13();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Others_ReportDesignConfig")
            {
                return GetView14();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Security_Level")
            {
                return GetView15();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Security_Role")
            {
                return GetView16();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Security_RoleWiseMenuPermission")
            {
                return GetView17();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Security_User")
            {
                return GetView18();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Security_UserLocation")
            {
                return GetView19();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Security_UserWiseMenuPermission")
            {
                return GetView20();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Setup_Accounts")
            {
                return GetView21();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Setup_AccountsCashBankIdentification")
            {
                return GetView22();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Setup_AccountsControl")
            {
                return GetView23();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Setup_AccountsDetail_Location")
            {
                return GetView24();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Setup_AccountsGroup")
            {
                return GetView25();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Setup_AccountsSubGroup")
            {
                return GetView26();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Setup_AccountsSubsidiary")
            {
                return GetView27();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Setup_Bank")
            {
                return GetView28();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Setup_Brand")
            {
                return GetView29();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Setup_Capacity")
            {
                return GetView30();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Setup_Charge")
            {
                return GetView31();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Setup_Color")
            {
                return GetView32();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Setup_Company")
            {
                return GetView33();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Setup_ConvertionRatio")
            {
                return GetView34();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Setup_ConvertionRatioDetail")
            {
                return GetView35();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Setup_CostingControl")
            {
                return GetView36();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Setup_CostingGroup")
            {
                return GetView37();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Setup_CostingHead")
            {
                return GetView38();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Setup_Country")
            {
                return GetView39();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Setup_Customer")
            {
                return GetView40();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Setup_CustomerGroup")
            {
                return GetView41();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Setup_Designation")
            {
                return GetView42();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Setup_DocumentsGroup")
            {
                return GetView43();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Setup_DocumentsTitle")
            {
                return GetView44();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Setup_Employee")
            {
                return GetView45();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Setup_Features")
            {
                return GetView46();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Setup_GeoDistrict")
            {
                return GetView47();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Setup_GeoDivision")
            {
                return GetView48();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Setup_GeoPoliceStation")
            {
                return GetView49();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Setup_GeoRegion")
            {
                return GetView50();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Setup_GovtDuty")
            {
                return GetView51();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Setup_GovtDutyAdjustment")
            {
                return GetView52();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Setup_HSCode")
            {
                return GetView53();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Setup_Location")
            {
                return GetView54();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Setup_Measurement")
            {
                return GetView55();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Setup_Port")
            {
                return GetView56();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Setup_Price")
            {
                return GetView57();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Setup_PriceDetail")
            {
                return GetView58();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Setup_PriceType")
            {
                return GetView59();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Setup_Problem")
            {
                return GetView60();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Setup_Product")
            {
                return GetView61();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Setup_ProductCategory")
            {
                return GetView62();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Setup_ProductDimension")
            {
                return GetView63();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Setup_ProductGroup")
            {
                return GetView64();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Setup_ProductSubGroup")
            {
                return GetView65();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Setup_Profession")
            {
                return GetView66();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Setup_Project")
            {
                return GetView67();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Setup_RelatedProduct")
            {
                return GetView68();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Setup_Size")
            {
                return GetView69();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Setup_Style")
            {
                return GetView70();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Setup_SubFeatures")
            {
                return GetView71();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Setup_Supplier")
            {
                return GetView72();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Setup_SupplierGroup")
            {
                return GetView73();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Setup_TemplateHeader")
            {
                return GetView74();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Setup_TermsAndConditions")
            {
                return GetView75();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Setup_Transport")
            {
                return GetView76();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Setup_TransportType")
            {
                return GetView77();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Setup_UnitType")
            {
                return GetView78();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Stock_BadStock")
            {
                return GetView79();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Stock_BadStockSerial")
            {
                return GetView80();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Stock_CurrentStock")
            {
                return GetView81();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Stock_CurrentStockSerial")
            {
                return GetView82();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Stock_LIMStock")
            {
                return GetView83();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Stock_RMAStock")
            {
                return GetView84();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Stock_RMAStockSerial")
            {
                return GetView85();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Stock_TransitStock")
            {
                return GetView86();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Stock_TransitStockSerial")
            {
                return GetView87();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_ChequeInfo")
            {
                return GetView88();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_ChequeTreatment")
            {
                return GetView89();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_Collection")
            {
                return GetView90();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_Collection_GovtDutyAdjustment")
            {
                return GetView91();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_CollectionDetail")
            {
                return GetView92();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_CollectionMapping")
            {
                return GetView93();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_CollectionNos")
            {
                return GetView94();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_ComplainReceive")
            {
                return GetView95();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_ComplainReceive_Charge")
            {
                return GetView96();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_ComplainReceiveDetail")
            {
                return GetView97();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_ComplainReceiveDetail_Problem")
            {
                return GetView98();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_ComplainReceiveDetail_SpareProduct")
            {
                return GetView99();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_ComplainReceiveNos")
            {
                return GetView100();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_Convertion")
            {
                return GetView101();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_ConvertionDetail")
            {
                return GetView102();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_ConvertionDetailSerial")
            {
                return GetView103();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_ConvertionNos")
            {
                return GetView104();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_CustomerDelivery")
            {
                return GetView105();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_CustomerDelivery_Charge")
            {
                return GetView106();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_CustomerDeliveryDetail")
            {
                return GetView107();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_CustomerDeliveryDetail_Problem")
            {
                return GetView108();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_CustomerDeliveryDetail_SpareProduct")
            {
                return GetView109();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_CustomerDeliveryDetail_SpareSerial")
            {
                return GetView110();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_CustomerDeliveryNos")
            {
                return GetView111();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_DeliveryChallan")
            {
                return GetView112();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_DeliveryChallan_Charge")
            {
                return GetView113();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_DeliveryChallanDetail")
            {
                return GetView114();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_DeliveryChallanDetail_GovtDuty")
            {
                return GetView115();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_DeliveryChallanDetailSerial")
            {
                return GetView116();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_DeliveryChallanNos")
            {
                return GetView117();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_GoodsReceive")
            {
                return GetView118();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_GoodsReceiveDetail")
            {
                return GetView119();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_GoodsReceiveDetailSerial")
            {
                return GetView120();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_GoodsReceiveNos")
            {
                return GetView121();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_ImportCosting")
            {
                return GetView122();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_ImportCostingDetail")
            {
                return GetView123();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_ImportCostingNos")
            {
                return GetView124();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_ImportCostingProduct")
            {
                return GetView125();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_ImportDocuments")
            {
                return GetView126();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_ImportedStockIn")
            {
                return GetView127();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_ImportedStockInDetail")
            {
                return GetView128();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_ImportedStockInDetailSerial")
            {
                return GetView129();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_ImportedStockInNos")
            {
                return GetView130();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_ItemRequisition")
            {
                return GetView131();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_ItemRequisitionDetail")
            {
                return GetView132();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_ItemRequisitionNos")
            {
                return GetView133();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_LCOpening")
            {
                return GetView134();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_LCOpeningNos")
            {
                return GetView135();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_LIMStockIn")
            {
                return GetView136();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_LIMStockInDetail")
            {
                return GetView137();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_LIMStockInNos")
            {
                return GetView138();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_PartyAdjustment")
            {
                return GetView139();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_PartyAdjustmentDetail")
            {
                return GetView140();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_PartyAdjustmentNos")
            {
                return GetView141();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_Payment")
            {
                return GetView142();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_Payment_GovtDutyAdjustment")
            {
                return GetView143();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_PaymentDetail")
            {
                return GetView144();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_PaymentMapping")
            {
                return GetView145();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_PaymentNos")
            {
                return GetView146();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_PostedVoucher")
            {
                return GetView147();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_ProformaInvoice")
            {
                return GetView148();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_ProformaInvoiceDetail")
            {
                return GetView149();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_ProformaInvoiceNos")
            {
                return GetView150();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_PurchaseOrder")
            {
                return GetView151();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_PurchaseOrderDetail")
            {
                return GetView152();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_PurchaseOrderNos")
            {
                return GetView153();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_PurchaseReturn")
            {
                return GetView154();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_PurchaseReturnDetail")
            {
                return GetView155();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_PurchaseReturnDetailSerial")
            {
                return GetView156();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_PurchaseReturnNos")
            {
                return GetView157();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_ReceiveFinalize")
            {
                return GetView158();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_ReceiveFinalizeDetail")
            {
                return GetView159();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_ReceiveFinalizeDetailSerial")
            {
                return GetView160();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_ReceiveFinalizeNos")
            {
                return GetView161();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_ReplacementClaim")
            {
                return GetView162();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_ReplacementClaimDetail")
            {
                return GetView163();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_ReplacementClaimDetail_Problem")
            {
                return GetView164();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_ReplacementClaimNos")
            {
                return GetView165();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_ReplacementReceive")
            {
                return GetView166();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_ReplacementReceive_Charge")
            {
                return GetView167();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_ReplacementReceiveDetail")
            {
                return GetView168();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_ReplacementReceiveNos")
            {
                return GetView169();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_RequisitionFinalize")
            {
                return GetView170();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_RequisitionFinalizeDetail")
            {
                return GetView171();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_RequisitionFinalizeNos")
            {
                return GetView172();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_SalesInvoice")
            {
                return GetView173();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_SalesInvoice_Charge")
            {
                return GetView174();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_SalesInvoiceDetail")
            {
                return GetView175();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_SalesInvoiceDetail_GovtDuty")
            {
                return GetView176();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_SalesInvoiceDetailSerial")
            {
                return GetView177();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_SalesInvoiceNos")
            {
                return GetView178();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_SalesOrder")
            {
                return GetView179();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_SalesOrder_Charge")
            {
                return GetView180();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_SalesOrderDeliveryInfo")
            {
                return GetView181();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_SalesOrderDetail")
            {
                return GetView182();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_SalesOrderDetail_GovtDuty")
            {
                return GetView183();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_SalesOrderNos")
            {
                return GetView184();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_SalesQuotation")
            {
                return GetView185();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_SalesQuotation_Charge")
            {
                return GetView186();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_SalesQuotation_DeliveryInfo")
            {
                return GetView187();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_SalesQuotation_GovtDutyAdjustment")
            {
                return GetView188();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_SalesQuotation_Header")
            {
                return GetView189();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_SalesQuotation_SecurityAndBanking")
            {
                return GetView190();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_SalesQuotationDetail")
            {
                return GetView191();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_SalesQuotationDetail_GovtDuty")
            {
                return GetView192();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_SalesQuotationNos")
            {
                return GetView193();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_SalesReturn")
            {
                return GetView194();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_SalesReturnDetail")
            {
                return GetView195();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_SalesReturnDetailSerial")
            {
                return GetView196();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_SalesReturnNos")
            {
                return GetView197();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_StockAdjustment")
            {
                return GetView198();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_StockAdjustmentDetail")
            {
                return GetView199();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_StockAdjustmentDetailSerial")
            {
                return GetView200();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_StockAdjustmentNos")
            {
                return GetView201();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_TransferChallan")
            {
                return GetView202();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_TransferChallanDetail")
            {
                return GetView203();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_TransferChallanDetailSerial")
            {
                return GetView204();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_TransferChallanNos")
            {
                return GetView205();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_TransferOrder")
            {
                return GetView206();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_TransferOrderDetail")
            {
                return GetView207();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_TransferOrderNos")
            {
                return GetView208();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_TransferReceive")
            {
                return GetView209();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_TransferReceiveDetail")
            {
                return GetView210();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_TransferReceiveDetailSerial")
            {
                return GetView211();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_TransferReceiveNos")
            {
                return GetView212();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_TransferRequisitionFinalize")
            {
                return GetView213();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_TransferRequisitionFinalizeDetail")
            {
                return GetView214();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_TransferRequisitionFinalizeNos")
            {
                return GetView215();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_Voucher")
            {
                return GetView216();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_VoucherDetail")
            {
                return GetView217();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Task_VoucherNos")
            {
                return GetView218();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Temp_AccountsLedgerDetail")
            {
                return GetView219();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Temp_AccountsLedgerOrProvisionalLedger")
            {
                return GetView220();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Temp_ChequeInfo")
            {
                return GetView221();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Temp_Collection")
            {
                return GetView222();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Temp_CollectionDetail")
            {
                return GetView223();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Temp_CollectionMapping")
            {
                return GetView224();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Temp_CustomerSupplierOutstanding")
            {
                return GetView225();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Temp_PartyLedger")
            {
                return GetView226();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Temp_SalesInvoice")
            {
                return GetView227();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Temp_SalesInvoice_Charge")
            {
                return GetView228();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Temp_SalesInvoiceDetail")
            {
                return GetView229();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Temp_SalesInvoiceDetail_GovtDuty")
            {
                return GetView230();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Temp_SalesInvoiceDetailSerial")
            {
                return GetView231();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Temp_TrialBalance")
            {
                return GetView232();
            }

            if (extentName == "Inventory360Entities.Configuration_Code")
            {
                return GetView233();
            }

            if (extentName == "Inventory360Entities.Configuration_CurrencyRate")
            {
                return GetView234();
            }

            if (extentName == "Inventory360Entities.Configuration_EventWiseCharge")
            {
                return GetView235();
            }

            if (extentName == "Inventory360Entities.Configuration_Features")
            {
                return GetView236();
            }

            if (extentName == "Inventory360Entities.Configuration_GovtDutyRate_HSCode")
            {
                return GetView237();
            }

            if (extentName == "Inventory360Entities.Configuration_GovtDutyRate_Location")
            {
                return GetView238();
            }

            if (extentName == "Inventory360Entities.Configuration_OperationalEvent")
            {
                return GetView239();
            }

            if (extentName == "Inventory360Entities.Configuration_OperationalEventDetail")
            {
                return GetView240();
            }

            if (extentName == "Inventory360Entities.Configuration_OperationType")
            {
                return GetView241();
            }

            if (extentName == "Inventory360Entities.Configuration_PaymentMode")
            {
                return GetView242();
            }

            if (extentName == "Inventory360Entities.Configuration_Voucher")
            {
                return GetView243();
            }

            if (extentName == "Inventory360Entities.Configuration_VoucherDetail")
            {
                return GetView244();
            }

            if (extentName == "Inventory360Entities.Others_Documents")
            {
                return GetView245();
            }

            if (extentName == "Inventory360Entities.Others_Menu")
            {
                return GetView246();
            }

            if (extentName == "Inventory360Entities.Others_ReportDesignConfig")
            {
                return GetView247();
            }

            if (extentName == "Inventory360Entities.Security_Level")
            {
                return GetView248();
            }

            if (extentName == "Inventory360Entities.Security_Role")
            {
                return GetView249();
            }

            if (extentName == "Inventory360Entities.Security_RoleWiseMenuPermission")
            {
                return GetView250();
            }

            if (extentName == "Inventory360Entities.Security_User")
            {
                return GetView251();
            }

            if (extentName == "Inventory360Entities.Security_UserLocation")
            {
                return GetView252();
            }

            if (extentName == "Inventory360Entities.Security_UserWiseMenuPermission")
            {
                return GetView253();
            }

            if (extentName == "Inventory360Entities.Setup_Accounts")
            {
                return GetView254();
            }

            if (extentName == "Inventory360Entities.Setup_AccountsCashBankIdentification")
            {
                return GetView255();
            }

            if (extentName == "Inventory360Entities.Setup_AccountsControl")
            {
                return GetView256();
            }

            if (extentName == "Inventory360Entities.Setup_AccountsDetail_Location")
            {
                return GetView257();
            }

            if (extentName == "Inventory360Entities.Setup_AccountsGroup")
            {
                return GetView258();
            }

            if (extentName == "Inventory360Entities.Setup_AccountsSubGroup")
            {
                return GetView259();
            }

            if (extentName == "Inventory360Entities.Setup_AccountsSubsidiary")
            {
                return GetView260();
            }

            if (extentName == "Inventory360Entities.Setup_Bank")
            {
                return GetView261();
            }

            if (extentName == "Inventory360Entities.Setup_Brand")
            {
                return GetView262();
            }

            if (extentName == "Inventory360Entities.Setup_Capacity")
            {
                return GetView263();
            }

            if (extentName == "Inventory360Entities.Setup_Charge")
            {
                return GetView264();
            }

            if (extentName == "Inventory360Entities.Setup_Color")
            {
                return GetView265();
            }

            if (extentName == "Inventory360Entities.Setup_Company")
            {
                return GetView266();
            }

            if (extentName == "Inventory360Entities.Setup_ConvertionRatio")
            {
                return GetView267();
            }

            if (extentName == "Inventory360Entities.Setup_ConvertionRatioDetail")
            {
                return GetView268();
            }

            if (extentName == "Inventory360Entities.Setup_CostingControl")
            {
                return GetView269();
            }

            if (extentName == "Inventory360Entities.Setup_CostingGroup")
            {
                return GetView270();
            }

            if (extentName == "Inventory360Entities.Setup_CostingHead")
            {
                return GetView271();
            }

            if (extentName == "Inventory360Entities.Setup_Country")
            {
                return GetView272();
            }

            if (extentName == "Inventory360Entities.Setup_Customer")
            {
                return GetView273();
            }

            if (extentName == "Inventory360Entities.Setup_CustomerGroup")
            {
                return GetView274();
            }

            if (extentName == "Inventory360Entities.Setup_Designation")
            {
                return GetView275();
            }

            if (extentName == "Inventory360Entities.Setup_DocumentsGroup")
            {
                return GetView276();
            }

            if (extentName == "Inventory360Entities.Setup_DocumentsTitle")
            {
                return GetView277();
            }

            if (extentName == "Inventory360Entities.Setup_Employee")
            {
                return GetView278();
            }

            if (extentName == "Inventory360Entities.Setup_Features")
            {
                return GetView279();
            }

            if (extentName == "Inventory360Entities.Setup_GeoDistrict")
            {
                return GetView280();
            }

            if (extentName == "Inventory360Entities.Setup_GeoDivision")
            {
                return GetView281();
            }

            if (extentName == "Inventory360Entities.Setup_GeoPoliceStation")
            {
                return GetView282();
            }

            if (extentName == "Inventory360Entities.Setup_GeoRegion")
            {
                return GetView283();
            }

            if (extentName == "Inventory360Entities.Setup_GovtDuty")
            {
                return GetView284();
            }

            if (extentName == "Inventory360Entities.Setup_GovtDutyAdjustment")
            {
                return GetView285();
            }

            if (extentName == "Inventory360Entities.Setup_HSCode")
            {
                return GetView286();
            }

            if (extentName == "Inventory360Entities.Setup_Location")
            {
                return GetView287();
            }

            if (extentName == "Inventory360Entities.Setup_Measurement")
            {
                return GetView288();
            }

            if (extentName == "Inventory360Entities.Setup_Port")
            {
                return GetView289();
            }

            if (extentName == "Inventory360Entities.Setup_Price")
            {
                return GetView290();
            }

            if (extentName == "Inventory360Entities.Setup_PriceDetail")
            {
                return GetView291();
            }

            if (extentName == "Inventory360Entities.Setup_PriceType")
            {
                return GetView292();
            }

            if (extentName == "Inventory360Entities.Setup_Problem")
            {
                return GetView293();
            }

            if (extentName == "Inventory360Entities.Setup_Product")
            {
                return GetView294();
            }

            if (extentName == "Inventory360Entities.Setup_ProductCategory")
            {
                return GetView295();
            }

            if (extentName == "Inventory360Entities.Setup_ProductDimension")
            {
                return GetView296();
            }

            if (extentName == "Inventory360Entities.Setup_ProductGroup")
            {
                return GetView297();
            }

            if (extentName == "Inventory360Entities.Setup_ProductSubGroup")
            {
                return GetView298();
            }

            if (extentName == "Inventory360Entities.Setup_Profession")
            {
                return GetView299();
            }

            if (extentName == "Inventory360Entities.Setup_Project")
            {
                return GetView300();
            }

            if (extentName == "Inventory360Entities.Setup_RelatedProduct")
            {
                return GetView301();
            }

            if (extentName == "Inventory360Entities.Setup_Size")
            {
                return GetView302();
            }

            if (extentName == "Inventory360Entities.Setup_Style")
            {
                return GetView303();
            }

            if (extentName == "Inventory360Entities.Setup_SubFeatures")
            {
                return GetView304();
            }

            if (extentName == "Inventory360Entities.Setup_Supplier")
            {
                return GetView305();
            }

            if (extentName == "Inventory360Entities.Setup_SupplierGroup")
            {
                return GetView306();
            }

            if (extentName == "Inventory360Entities.Setup_TemplateHeader")
            {
                return GetView307();
            }

            if (extentName == "Inventory360Entities.Setup_TermsAndConditions")
            {
                return GetView308();
            }

            if (extentName == "Inventory360Entities.Setup_Transport")
            {
                return GetView309();
            }

            if (extentName == "Inventory360Entities.Setup_TransportType")
            {
                return GetView310();
            }

            if (extentName == "Inventory360Entities.Setup_UnitType")
            {
                return GetView311();
            }

            if (extentName == "Inventory360Entities.Stock_BadStock")
            {
                return GetView312();
            }

            if (extentName == "Inventory360Entities.Stock_BadStockSerial")
            {
                return GetView313();
            }

            if (extentName == "Inventory360Entities.Stock_CurrentStock")
            {
                return GetView314();
            }

            if (extentName == "Inventory360Entities.Stock_CurrentStockSerial")
            {
                return GetView315();
            }

            if (extentName == "Inventory360Entities.Stock_LIMStock")
            {
                return GetView316();
            }

            if (extentName == "Inventory360Entities.Stock_RMAStock")
            {
                return GetView317();
            }

            if (extentName == "Inventory360Entities.Stock_RMAStockSerial")
            {
                return GetView318();
            }

            if (extentName == "Inventory360Entities.Stock_TransitStock")
            {
                return GetView319();
            }

            if (extentName == "Inventory360Entities.Stock_TransitStockSerial")
            {
                return GetView320();
            }

            if (extentName == "Inventory360Entities.Task_ChequeInfo")
            {
                return GetView321();
            }

            if (extentName == "Inventory360Entities.Task_ChequeTreatment")
            {
                return GetView322();
            }

            if (extentName == "Inventory360Entities.Task_Collection")
            {
                return GetView323();
            }

            if (extentName == "Inventory360Entities.Task_Collection_GovtDutyAdjustment")
            {
                return GetView324();
            }

            if (extentName == "Inventory360Entities.Task_CollectionDetail")
            {
                return GetView325();
            }

            if (extentName == "Inventory360Entities.Task_CollectionMapping")
            {
                return GetView326();
            }

            if (extentName == "Inventory360Entities.Task_CollectionNos")
            {
                return GetView327();
            }

            if (extentName == "Inventory360Entities.Task_ComplainReceive")
            {
                return GetView328();
            }

            if (extentName == "Inventory360Entities.Task_ComplainReceive_Charge")
            {
                return GetView329();
            }

            if (extentName == "Inventory360Entities.Task_ComplainReceiveDetail")
            {
                return GetView330();
            }

            if (extentName == "Inventory360Entities.Task_ComplainReceiveDetail_Problem")
            {
                return GetView331();
            }

            if (extentName == "Inventory360Entities.Task_ComplainReceiveDetail_SpareProduct")
            {
                return GetView332();
            }

            if (extentName == "Inventory360Entities.Task_ComplainReceiveNos")
            {
                return GetView333();
            }

            if (extentName == "Inventory360Entities.Task_Convertion")
            {
                return GetView334();
            }

            if (extentName == "Inventory360Entities.Task_ConvertionDetail")
            {
                return GetView335();
            }

            if (extentName == "Inventory360Entities.Task_ConvertionDetailSerial")
            {
                return GetView336();
            }

            if (extentName == "Inventory360Entities.Task_ConvertionNos")
            {
                return GetView337();
            }

            if (extentName == "Inventory360Entities.Task_CustomerDelivery")
            {
                return GetView338();
            }

            if (extentName == "Inventory360Entities.Task_CustomerDelivery_Charge")
            {
                return GetView339();
            }

            if (extentName == "Inventory360Entities.Task_CustomerDeliveryDetail")
            {
                return GetView340();
            }

            if (extentName == "Inventory360Entities.Task_CustomerDeliveryDetail_Problem")
            {
                return GetView341();
            }

            if (extentName == "Inventory360Entities.Task_CustomerDeliveryDetail_SpareProduct")
            {
                return GetView342();
            }

            if (extentName == "Inventory360Entities.Task_CustomerDeliveryDetail_SpareSerial")
            {
                return GetView343();
            }

            if (extentName == "Inventory360Entities.Task_CustomerDeliveryNos")
            {
                return GetView344();
            }

            if (extentName == "Inventory360Entities.Task_DeliveryChallan")
            {
                return GetView345();
            }

            if (extentName == "Inventory360Entities.Task_DeliveryChallan_Charge")
            {
                return GetView346();
            }

            if (extentName == "Inventory360Entities.Task_DeliveryChallanDetail")
            {
                return GetView347();
            }

            if (extentName == "Inventory360Entities.Task_DeliveryChallanDetail_GovtDuty")
            {
                return GetView348();
            }

            if (extentName == "Inventory360Entities.Task_DeliveryChallanDetailSerial")
            {
                return GetView349();
            }

            if (extentName == "Inventory360Entities.Task_DeliveryChallanNos")
            {
                return GetView350();
            }

            if (extentName == "Inventory360Entities.Task_GoodsReceive")
            {
                return GetView351();
            }

            if (extentName == "Inventory360Entities.Task_GoodsReceiveDetail")
            {
                return GetView352();
            }

            if (extentName == "Inventory360Entities.Task_GoodsReceiveDetailSerial")
            {
                return GetView353();
            }

            if (extentName == "Inventory360Entities.Task_GoodsReceiveNos")
            {
                return GetView354();
            }

            if (extentName == "Inventory360Entities.Task_ImportCosting")
            {
                return GetView355();
            }

            if (extentName == "Inventory360Entities.Task_ImportCostingDetail")
            {
                return GetView356();
            }

            if (extentName == "Inventory360Entities.Task_ImportCostingNos")
            {
                return GetView357();
            }

            if (extentName == "Inventory360Entities.Task_ImportCostingProduct")
            {
                return GetView358();
            }

            if (extentName == "Inventory360Entities.Task_ImportDocuments")
            {
                return GetView359();
            }

            if (extentName == "Inventory360Entities.Task_ImportedStockIn")
            {
                return GetView360();
            }

            if (extentName == "Inventory360Entities.Task_ImportedStockInDetail")
            {
                return GetView361();
            }

            if (extentName == "Inventory360Entities.Task_ImportedStockInDetailSerial")
            {
                return GetView362();
            }

            if (extentName == "Inventory360Entities.Task_ImportedStockInNos")
            {
                return GetView363();
            }

            if (extentName == "Inventory360Entities.Task_ItemRequisition")
            {
                return GetView364();
            }

            if (extentName == "Inventory360Entities.Task_ItemRequisitionDetail")
            {
                return GetView365();
            }

            if (extentName == "Inventory360Entities.Task_ItemRequisitionNos")
            {
                return GetView366();
            }

            if (extentName == "Inventory360Entities.Task_LCOpening")
            {
                return GetView367();
            }

            if (extentName == "Inventory360Entities.Task_LCOpeningNos")
            {
                return GetView368();
            }

            if (extentName == "Inventory360Entities.Task_LIMStockIn")
            {
                return GetView369();
            }

            if (extentName == "Inventory360Entities.Task_LIMStockInDetail")
            {
                return GetView370();
            }

            if (extentName == "Inventory360Entities.Task_LIMStockInNos")
            {
                return GetView371();
            }

            if (extentName == "Inventory360Entities.Task_PartyAdjustment")
            {
                return GetView372();
            }

            if (extentName == "Inventory360Entities.Task_PartyAdjustmentDetail")
            {
                return GetView373();
            }

            if (extentName == "Inventory360Entities.Task_PartyAdjustmentNos")
            {
                return GetView374();
            }

            if (extentName == "Inventory360Entities.Task_Payment")
            {
                return GetView375();
            }

            if (extentName == "Inventory360Entities.Task_Payment_GovtDutyAdjustment")
            {
                return GetView376();
            }

            if (extentName == "Inventory360Entities.Task_PaymentDetail")
            {
                return GetView377();
            }

            if (extentName == "Inventory360Entities.Task_PaymentMapping")
            {
                return GetView378();
            }

            if (extentName == "Inventory360Entities.Task_PaymentNos")
            {
                return GetView379();
            }

            if (extentName == "Inventory360Entities.Task_PostedVoucher")
            {
                return GetView380();
            }

            if (extentName == "Inventory360Entities.Task_ProformaInvoice")
            {
                return GetView381();
            }

            if (extentName == "Inventory360Entities.Task_ProformaInvoiceDetail")
            {
                return GetView382();
            }

            if (extentName == "Inventory360Entities.Task_ProformaInvoiceNos")
            {
                return GetView383();
            }

            if (extentName == "Inventory360Entities.Task_PurchaseOrder")
            {
                return GetView384();
            }

            if (extentName == "Inventory360Entities.Task_PurchaseOrderDetail")
            {
                return GetView385();
            }

            if (extentName == "Inventory360Entities.Task_PurchaseOrderNos")
            {
                return GetView386();
            }

            if (extentName == "Inventory360Entities.Task_PurchaseReturn")
            {
                return GetView387();
            }

            if (extentName == "Inventory360Entities.Task_PurchaseReturnDetail")
            {
                return GetView388();
            }

            if (extentName == "Inventory360Entities.Task_PurchaseReturnDetailSerial")
            {
                return GetView389();
            }

            if (extentName == "Inventory360Entities.Task_PurchaseReturnNos")
            {
                return GetView390();
            }

            if (extentName == "Inventory360Entities.Task_ReceiveFinalize")
            {
                return GetView391();
            }

            if (extentName == "Inventory360Entities.Task_ReceiveFinalizeDetail")
            {
                return GetView392();
            }

            if (extentName == "Inventory360Entities.Task_ReceiveFinalizeDetailSerial")
            {
                return GetView393();
            }

            if (extentName == "Inventory360Entities.Task_ReceiveFinalizeNos")
            {
                return GetView394();
            }

            if (extentName == "Inventory360Entities.Task_ReplacementClaim")
            {
                return GetView395();
            }

            if (extentName == "Inventory360Entities.Task_ReplacementClaimDetail")
            {
                return GetView396();
            }

            if (extentName == "Inventory360Entities.Task_ReplacementClaimDetail_Problem")
            {
                return GetView397();
            }

            if (extentName == "Inventory360Entities.Task_ReplacementClaimNos")
            {
                return GetView398();
            }

            if (extentName == "Inventory360Entities.Task_ReplacementReceive")
            {
                return GetView399();
            }

            if (extentName == "Inventory360Entities.Task_ReplacementReceive_Charge")
            {
                return GetView400();
            }

            if (extentName == "Inventory360Entities.Task_ReplacementReceiveDetail")
            {
                return GetView401();
            }

            if (extentName == "Inventory360Entities.Task_ReplacementReceiveNos")
            {
                return GetView402();
            }

            if (extentName == "Inventory360Entities.Task_RequisitionFinalize")
            {
                return GetView403();
            }

            if (extentName == "Inventory360Entities.Task_RequisitionFinalizeDetail")
            {
                return GetView404();
            }

            if (extentName == "Inventory360Entities.Task_RequisitionFinalizeNos")
            {
                return GetView405();
            }

            if (extentName == "Inventory360Entities.Task_SalesInvoice")
            {
                return GetView406();
            }

            if (extentName == "Inventory360Entities.Task_SalesInvoice_Charge")
            {
                return GetView407();
            }

            if (extentName == "Inventory360Entities.Task_SalesInvoiceDetail")
            {
                return GetView408();
            }

            if (extentName == "Inventory360Entities.Task_SalesInvoiceDetail_GovtDuty")
            {
                return GetView409();
            }

            if (extentName == "Inventory360Entities.Task_SalesInvoiceDetailSerial")
            {
                return GetView410();
            }

            if (extentName == "Inventory360Entities.Task_SalesInvoiceNos")
            {
                return GetView411();
            }

            if (extentName == "Inventory360Entities.Task_SalesOrder")
            {
                return GetView412();
            }

            if (extentName == "Inventory360Entities.Task_SalesOrder_Charge")
            {
                return GetView413();
            }

            if (extentName == "Inventory360Entities.Task_SalesOrderDeliveryInfo")
            {
                return GetView414();
            }

            if (extentName == "Inventory360Entities.Task_SalesOrderDetail")
            {
                return GetView415();
            }

            if (extentName == "Inventory360Entities.Task_SalesOrderDetail_GovtDuty")
            {
                return GetView416();
            }

            if (extentName == "Inventory360Entities.Task_SalesOrderNos")
            {
                return GetView417();
            }

            if (extentName == "Inventory360Entities.Task_SalesQuotation")
            {
                return GetView418();
            }

            if (extentName == "Inventory360Entities.Task_SalesQuotation_Charge")
            {
                return GetView419();
            }

            if (extentName == "Inventory360Entities.Task_SalesQuotation_DeliveryInfo")
            {
                return GetView420();
            }

            if (extentName == "Inventory360Entities.Task_SalesQuotation_GovtDutyAdjustment")
            {
                return GetView421();
            }

            if (extentName == "Inventory360Entities.Task_SalesQuotation_Header")
            {
                return GetView422();
            }

            if (extentName == "Inventory360Entities.Task_SalesQuotation_SecurityAndBanking")
            {
                return GetView423();
            }

            if (extentName == "Inventory360Entities.Task_SalesQuotationDetail")
            {
                return GetView424();
            }

            if (extentName == "Inventory360Entities.Task_SalesQuotationDetail_GovtDuty")
            {
                return GetView425();
            }

            if (extentName == "Inventory360Entities.Task_SalesQuotationNos")
            {
                return GetView426();
            }

            if (extentName == "Inventory360Entities.Task_SalesReturn")
            {
                return GetView427();
            }

            if (extentName == "Inventory360Entities.Task_SalesReturnDetail")
            {
                return GetView428();
            }

            if (extentName == "Inventory360Entities.Task_SalesReturnDetailSerial")
            {
                return GetView429();
            }

            if (extentName == "Inventory360Entities.Task_SalesReturnNos")
            {
                return GetView430();
            }

            if (extentName == "Inventory360Entities.Task_StockAdjustment")
            {
                return GetView431();
            }

            if (extentName == "Inventory360Entities.Task_StockAdjustmentDetail")
            {
                return GetView432();
            }

            if (extentName == "Inventory360Entities.Task_StockAdjustmentDetailSerial")
            {
                return GetView433();
            }

            if (extentName == "Inventory360Entities.Task_StockAdjustmentNos")
            {
                return GetView434();
            }

            if (extentName == "Inventory360Entities.Task_TransferChallan")
            {
                return GetView435();
            }

            if (extentName == "Inventory360Entities.Task_TransferChallanDetail")
            {
                return GetView436();
            }

            if (extentName == "Inventory360Entities.Task_TransferChallanDetailSerial")
            {
                return GetView437();
            }

            if (extentName == "Inventory360Entities.Task_TransferChallanNos")
            {
                return GetView438();
            }

            if (extentName == "Inventory360Entities.Task_TransferOrder")
            {
                return GetView439();
            }

            if (extentName == "Inventory360Entities.Task_TransferOrderDetail")
            {
                return GetView440();
            }

            if (extentName == "Inventory360Entities.Task_TransferOrderNos")
            {
                return GetView441();
            }

            if (extentName == "Inventory360Entities.Task_TransferReceive")
            {
                return GetView442();
            }

            if (extentName == "Inventory360Entities.Task_TransferReceiveDetail")
            {
                return GetView443();
            }

            if (extentName == "Inventory360Entities.Task_TransferReceiveDetailSerial")
            {
                return GetView444();
            }

            if (extentName == "Inventory360Entities.Task_TransferReceiveNos")
            {
                return GetView445();
            }

            if (extentName == "Inventory360Entities.Task_TransferRequisitionFinalize")
            {
                return GetView446();
            }

            if (extentName == "Inventory360Entities.Task_TransferRequisitionFinalizeDetail")
            {
                return GetView447();
            }

            if (extentName == "Inventory360Entities.Task_TransferRequisitionFinalizeNos")
            {
                return GetView448();
            }

            if (extentName == "Inventory360Entities.Task_Voucher")
            {
                return GetView449();
            }

            if (extentName == "Inventory360Entities.Task_VoucherDetail")
            {
                return GetView450();
            }

            if (extentName == "Inventory360Entities.Task_VoucherNos")
            {
                return GetView451();
            }

            if (extentName == "Inventory360Entities.Temp_AccountsLedgerDetail")
            {
                return GetView452();
            }

            if (extentName == "Inventory360Entities.Temp_AccountsLedgerOrProvisionalLedger")
            {
                return GetView453();
            }

            if (extentName == "Inventory360Entities.Temp_ChequeInfo")
            {
                return GetView454();
            }

            if (extentName == "Inventory360Entities.Temp_Collection")
            {
                return GetView455();
            }

            if (extentName == "Inventory360Entities.Temp_CollectionDetail")
            {
                return GetView456();
            }

            if (extentName == "Inventory360Entities.Temp_CollectionMapping")
            {
                return GetView457();
            }

            if (extentName == "Inventory360Entities.Temp_CustomerSupplierOutstanding")
            {
                return GetView458();
            }

            if (extentName == "Inventory360Entities.Temp_PartyLedger")
            {
                return GetView459();
            }

            if (extentName == "Inventory360Entities.Temp_SalesInvoice")
            {
                return GetView460();
            }

            if (extentName == "Inventory360Entities.Temp_SalesInvoice_Charge")
            {
                return GetView461();
            }

            if (extentName == "Inventory360Entities.Temp_SalesInvoiceDetail")
            {
                return GetView462();
            }

            if (extentName == "Inventory360Entities.Temp_SalesInvoiceDetail_GovtDuty")
            {
                return GetView463();
            }

            if (extentName == "Inventory360Entities.Temp_SalesInvoiceDetailSerial")
            {
                return GetView464();
            }

            if (extentName == "Inventory360Entities.Temp_TrialBalance")
            {
                return GetView465();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Configuration_FormattingTag")
            {
                return GetView466();
            }

            if (extentName == "Inventory360Entities.Configuration_FormattingTag")
            {
                return GetView467();
            }

            if (extentName == "BTS_OPSModelStoreContainer.Others_Report")
            {
                return GetView468();
            }

            if (extentName == "Inventory360Entities.Others_Report")
            {
                return GetView469();
            }

            if (extentName == "BTS_OPSModelStoreContainer.TempCustomerOrSupplierWiseChequePerformance")
            {
                return GetView470();
            }

            if (extentName == "Inventory360Entities.TempCustomerOrSupplierWiseChequePerformances")
            {
                return GetView471();
            }

            return null;
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Configuration_Code.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView0()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Configuration_Code
        [BTS_OPSModel.Store.Configuration_Code](T1.[Configuration_Code.Id], T1.[Configuration_Code.FormName], T1.[Configuration_Code.IsAutoCode], T1.[Configuration_Code.Prefix], T1.[Configuration_Code.FullCodeLength], T1.[Configuration_Code.IsCodeVisible], T1.[Configuration_Code.CompanyId])
    FROM (
        SELECT 
            T.Id AS [Configuration_Code.Id], 
            T.FormName AS [Configuration_Code.FormName], 
            T.IsAutoCode AS [Configuration_Code.IsAutoCode], 
            T.Prefix AS [Configuration_Code.Prefix], 
            T.FullCodeLength AS [Configuration_Code.FullCodeLength], 
            T.IsCodeVisible AS [Configuration_Code.IsCodeVisible], 
            T.CompanyId AS [Configuration_Code.CompanyId], 
            True AS _from0
        FROM Inventory360Entities.Configuration_Code AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Configuration_CurrencyRate.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView1()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Configuration_CurrencyRate
        [BTS_OPSModel.Store.Configuration_CurrencyRate](T1.[Configuration_CurrencyRate.Id], T1.[Configuration_CurrencyRate.BaseCurrencyRate], T1.[Configuration_CurrencyRate.Currency1Rate], T1.[Configuration_CurrencyRate.Currency2Rate], T1.[Configuration_CurrencyRate.CompanyId], T1.[Configuration_CurrencyRate.EntryBy], T1.[Configuration_CurrencyRate.EntryDate])
    FROM (
        SELECT 
            T.Id AS [Configuration_CurrencyRate.Id], 
            T.BaseCurrencyRate AS [Configuration_CurrencyRate.BaseCurrencyRate], 
            T.Currency1Rate AS [Configuration_CurrencyRate.Currency1Rate], 
            T.Currency2Rate AS [Configuration_CurrencyRate.Currency2Rate], 
            T.CompanyId AS [Configuration_CurrencyRate.CompanyId], 
            T.EntryBy AS [Configuration_CurrencyRate.EntryBy], 
            T.EntryDate AS [Configuration_CurrencyRate.EntryDate], 
            True AS _from0
        FROM Inventory360Entities.Configuration_CurrencyRate AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Configuration_EventWiseCharge.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView2()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Configuration_EventWiseCharge
        [BTS_OPSModel.Store.Configuration_EventWiseCharge](T1.[Configuration_EventWiseCharge.ChargeEventId], T1.[Configuration_EventWiseCharge.EventName], T1.[Configuration_EventWiseCharge.ChargeId], T1.[Configuration_EventWiseCharge.AccountsId], T1.[Configuration_EventWiseCharge.CompanyId], T1.[Configuration_EventWiseCharge.EntryBy], T1.[Configuration_EventWiseCharge.EntryDate])
    FROM (
        SELECT 
            T.ChargeEventId AS [Configuration_EventWiseCharge.ChargeEventId], 
            T.EventName AS [Configuration_EventWiseCharge.EventName], 
            T.ChargeId AS [Configuration_EventWiseCharge.ChargeId], 
            T.AccountsId AS [Configuration_EventWiseCharge.AccountsId], 
            T.CompanyId AS [Configuration_EventWiseCharge.CompanyId], 
            T.EntryBy AS [Configuration_EventWiseCharge.EntryBy], 
            T.EntryDate AS [Configuration_EventWiseCharge.EntryDate], 
            True AS _from0
        FROM Inventory360Entities.Configuration_EventWiseCharge AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Configuration_Features.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView3()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Configuration_Features
        [BTS_OPSModel.Store.Configuration_Features](T1.[Configuration_Features.Id], T1.[Configuration_Features.FeatureId], T1.[Configuration_Features.SubFeatureId], T1.[Configuration_Features.Value], T1.[Configuration_Features.OperationEventId], T1.[Configuration_Features.LocationId], T1.[Configuration_Features.CompanyId], T1.[Configuration_Features.EntryBy], T1.[Configuration_Features.EntryDate])
    FROM (
        SELECT 
            T.Id AS [Configuration_Features.Id], 
            T.FeatureId AS [Configuration_Features.FeatureId], 
            T.SubFeatureId AS [Configuration_Features.SubFeatureId], 
            T.[Value] AS [Configuration_Features.Value], 
            T.OperationEventId AS [Configuration_Features.OperationEventId], 
            T.LocationId AS [Configuration_Features.LocationId], 
            T.CompanyId AS [Configuration_Features.CompanyId], 
            T.EntryBy AS [Configuration_Features.EntryBy], 
            T.EntryDate AS [Configuration_Features.EntryDate], 
            True AS _from0
        FROM Inventory360Entities.Configuration_Features AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Configuration_GovtDutyRate_HSCode.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView4()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Configuration_GovtDutyRate_HSCode
        [BTS_OPSModel.Store.Configuration_GovtDutyRate_HSCode](T1.[Configuration_GovtDutyRate_HSCode.RateId], T1.[Configuration_GovtDutyRate_HSCode.OperationalEventId], T1.[Configuration_GovtDutyRate_HSCode.HSCodeId], T1.[Configuration_GovtDutyRate_HSCode.GovtDutyId], T1.[Configuration_GovtDutyRate_HSCode.SelectedCurrency], T1.[Configuration_GovtDutyRate_HSCode.Currency1Rate], T1.[Configuration_GovtDutyRate_HSCode.Currency2Rate], T1.[Configuration_GovtDutyRate_HSCode.RateType], T1.[Configuration_GovtDutyRate_HSCode.RateValue], T1.[Configuration_GovtDutyRate_HSCode.RateValue1], T1.[Configuration_GovtDutyRate_HSCode.RateValue2], T1.[Configuration_GovtDutyRate_HSCode.ExemptedType], T1.[Configuration_GovtDutyRate_HSCode.ExemptedValue], T1.[Configuration_GovtDutyRate_HSCode.ExemptedValue1], T1.[Configuration_GovtDutyRate_HSCode.ExemptedValue2], T1.[Configuration_GovtDutyRate_HSCode.Remarks], T1.[Configuration_GovtDutyRate_HSCode.EntryBy])
    FROM (
        SELECT 
            T.RateId AS [Configuration_GovtDutyRate_HSCode.RateId], 
            T.OperationalEventId AS [Configuration_GovtDutyRate_HSCode.OperationalEventId], 
            T.HSCodeId AS [Configuration_GovtDutyRate_HSCode.HSCodeId], 
            T.GovtDutyId AS [Configuration_GovtDutyRate_HSCode.GovtDutyId], 
            T.SelectedCurrency AS [Configuration_GovtDutyRate_HSCode.SelectedCurrency], 
            T.Currency1Rate AS [Configuration_GovtDutyRate_HSCode.Currency1Rate], 
            T.Currency2Rate AS [Configuration_GovtDutyRate_HSCode.Currency2Rate], 
            T.RateType AS [Configuration_GovtDutyRate_HSCode.RateType], 
            T.RateValue AS [Configuration_GovtDutyRate_HSCode.RateValue], 
            T.RateValue1 AS [Configuration_GovtDutyRate_HSCode.RateValue1], 
            T.RateValue2 AS [Configuration_GovtDutyRate_HSCode.RateValue2], 
            T.ExemptedType AS [Configuration_GovtDutyRate_HSCode.ExemptedType], 
            T.ExemptedValue AS [Configuration_GovtDutyRate_HSCode.ExemptedValue], 
            T.ExemptedValue1 AS [Configuration_GovtDutyRate_HSCode.ExemptedValue1], 
            T.ExemptedValue2 AS [Configuration_GovtDutyRate_HSCode.ExemptedValue2], 
            T.Remarks AS [Configuration_GovtDutyRate_HSCode.Remarks], 
            T.EntryBy AS [Configuration_GovtDutyRate_HSCode.EntryBy], 
            True AS _from0
        FROM Inventory360Entities.Configuration_GovtDutyRate_HSCode AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Configuration_GovtDutyRate_Location.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView5()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Configuration_GovtDutyRate_Location
        [BTS_OPSModel.Store.Configuration_GovtDutyRate_Location](T1.[Configuration_GovtDutyRate_Location.RateId], T1.[Configuration_GovtDutyRate_Location.OperationalEventId], T1.[Configuration_GovtDutyRate_Location.LocationId], T1.[Configuration_GovtDutyRate_Location.GovtDutyId], T1.[Configuration_GovtDutyRate_Location.SelectedCurrency], T1.[Configuration_GovtDutyRate_Location.Currency1Rate], T1.[Configuration_GovtDutyRate_Location.Currency2Rate], T1.[Configuration_GovtDutyRate_Location.RateType], T1.[Configuration_GovtDutyRate_Location.RateValue], T1.[Configuration_GovtDutyRate_Location.RateValue1], T1.[Configuration_GovtDutyRate_Location.RateValue2], T1.[Configuration_GovtDutyRate_Location.ExemptedType], T1.[Configuration_GovtDutyRate_Location.ExemptedValue], T1.[Configuration_GovtDutyRate_Location.ExemptedValue1], T1.[Configuration_GovtDutyRate_Location.ExemptedValue2], T1.[Configuration_GovtDutyRate_Location.Remarks], T1.[Configuration_GovtDutyRate_Location.EntryBy])
    FROM (
        SELECT 
            T.RateId AS [Configuration_GovtDutyRate_Location.RateId], 
            T.OperationalEventId AS [Configuration_GovtDutyRate_Location.OperationalEventId], 
            T.LocationId AS [Configuration_GovtDutyRate_Location.LocationId], 
            T.GovtDutyId AS [Configuration_GovtDutyRate_Location.GovtDutyId], 
            T.SelectedCurrency AS [Configuration_GovtDutyRate_Location.SelectedCurrency], 
            T.Currency1Rate AS [Configuration_GovtDutyRate_Location.Currency1Rate], 
            T.Currency2Rate AS [Configuration_GovtDutyRate_Location.Currency2Rate], 
            T.RateType AS [Configuration_GovtDutyRate_Location.RateType], 
            T.RateValue AS [Configuration_GovtDutyRate_Location.RateValue], 
            T.RateValue1 AS [Configuration_GovtDutyRate_Location.RateValue1], 
            T.RateValue2 AS [Configuration_GovtDutyRate_Location.RateValue2], 
            T.ExemptedType AS [Configuration_GovtDutyRate_Location.ExemptedType], 
            T.ExemptedValue AS [Configuration_GovtDutyRate_Location.ExemptedValue], 
            T.ExemptedValue1 AS [Configuration_GovtDutyRate_Location.ExemptedValue1], 
            T.ExemptedValue2 AS [Configuration_GovtDutyRate_Location.ExemptedValue2], 
            T.Remarks AS [Configuration_GovtDutyRate_Location.Remarks], 
            T.EntryBy AS [Configuration_GovtDutyRate_Location.EntryBy], 
            True AS _from0
        FROM Inventory360Entities.Configuration_GovtDutyRate_Location AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Configuration_OperationalEvent.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView6()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Configuration_OperationalEvent
        [BTS_OPSModel.Store.Configuration_OperationalEvent](T1.[Configuration_OperationalEvent.OperationalEventId], T1.[Configuration_OperationalEvent.EventName], T1.[Configuration_OperationalEvent.SubEventName])
    FROM (
        SELECT 
            T.OperationalEventId AS [Configuration_OperationalEvent.OperationalEventId], 
            T.EventName AS [Configuration_OperationalEvent.EventName], 
            T.SubEventName AS [Configuration_OperationalEvent.SubEventName], 
            True AS _from0
        FROM Inventory360Entities.Configuration_OperationalEvent AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Configuration_OperationalEventDetail.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView7()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Configuration_OperationalEventDetail
        [BTS_OPSModel.Store.Configuration_OperationalEventDetail](T1.[Configuration_OperationalEventDetail.OperationalEventDetailId], T1.[Configuration_OperationalEventDetail.OperationalEventId], T1.[Configuration_OperationalEventDetail.OperationTypeId], T1.[Configuration_OperationalEventDetail.PaymentModeId], T1.[Configuration_OperationalEventDetail.Prefix], T1.[Configuration_OperationalEventDetail.NumberFormat], T1.[Configuration_OperationalEventDetail.AdditionOrDeduction], T1.[Configuration_OperationalEventDetail.Voucher], T1.[Configuration_OperationalEventDetail.VoucherConfigurationId], T1.[Configuration_OperationalEventDetail.DefaultPriceTypeId], T1.[Configuration_OperationalEventDetail.DefaultCustomerId], T1.[Configuration_OperationalEventDetail.DefaultPaymentModeId], T1.[Configuration_OperationalEventDetail.LocationId], T1.[Configuration_OperationalEventDetail.CompanyId])
    FROM (
        SELECT 
            T.OperationalEventDetailId AS [Configuration_OperationalEventDetail.OperationalEventDetailId], 
            T.OperationalEventId AS [Configuration_OperationalEventDetail.OperationalEventId], 
            T.OperationTypeId AS [Configuration_OperationalEventDetail.OperationTypeId], 
            T.PaymentModeId AS [Configuration_OperationalEventDetail.PaymentModeId], 
            T.Prefix AS [Configuration_OperationalEventDetail.Prefix], 
            T.NumberFormat AS [Configuration_OperationalEventDetail.NumberFormat], 
            T.AdditionOrDeduction AS [Configuration_OperationalEventDetail.AdditionOrDeduction], 
            T.Voucher AS [Configuration_OperationalEventDetail.Voucher], 
            T.VoucherConfigurationId AS [Configuration_OperationalEventDetail.VoucherConfigurationId], 
            T.DefaultPriceTypeId AS [Configuration_OperationalEventDetail.DefaultPriceTypeId], 
            T.DefaultCustomerId AS [Configuration_OperationalEventDetail.DefaultCustomerId], 
            T.DefaultPaymentModeId AS [Configuration_OperationalEventDetail.DefaultPaymentModeId], 
            T.LocationId AS [Configuration_OperationalEventDetail.LocationId], 
            T.CompanyId AS [Configuration_OperationalEventDetail.CompanyId], 
            True AS _from0
        FROM Inventory360Entities.Configuration_OperationalEventDetail AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Configuration_OperationType.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView8()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Configuration_OperationType
        [BTS_OPSModel.Store.Configuration_OperationType](T1.[Configuration_OperationType.OperationTypeId], T1.[Configuration_OperationType.Name])
    FROM (
        SELECT 
            T.OperationTypeId AS [Configuration_OperationType.OperationTypeId], 
            T.Name AS [Configuration_OperationType.Name], 
            True AS _from0
        FROM Inventory360Entities.Configuration_OperationType AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Configuration_PaymentMode.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView9()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Configuration_PaymentMode
        [BTS_OPSModel.Store.Configuration_PaymentMode](T1.[Configuration_PaymentMode.PaymentModeId], T1.[Configuration_PaymentMode.Name], T1.[Configuration_PaymentMode.NeedDetail], T1.[Configuration_PaymentMode.AutoHonor], T1.[Configuration_PaymentMode.IsCashType])
    FROM (
        SELECT 
            T.PaymentModeId AS [Configuration_PaymentMode.PaymentModeId], 
            T.Name AS [Configuration_PaymentMode.Name], 
            T.NeedDetail AS [Configuration_PaymentMode.NeedDetail], 
            T.AutoHonor AS [Configuration_PaymentMode.AutoHonor], 
            T.IsCashType AS [Configuration_PaymentMode.IsCashType], 
            True AS _from0
        FROM Inventory360Entities.Configuration_PaymentMode AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Configuration_Voucher.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView10()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Configuration_Voucher
        [BTS_OPSModel.Store.Configuration_Voucher](T1.[Configuration_Voucher.VoucherConfigurationId], T1.[Configuration_Voucher.Prefix], T1.[Configuration_Voucher.NumberFormat], T1.[Configuration_Voucher.Description], T1.[Configuration_Voucher.CompanyId])
    FROM (
        SELECT 
            T.VoucherConfigurationId AS [Configuration_Voucher.VoucherConfigurationId], 
            T.Prefix AS [Configuration_Voucher.Prefix], 
            T.NumberFormat AS [Configuration_Voucher.NumberFormat], 
            T.Description AS [Configuration_Voucher.Description], 
            T.CompanyId AS [Configuration_Voucher.CompanyId], 
            True AS _from0
        FROM Inventory360Entities.Configuration_Voucher AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Configuration_VoucherDetail.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView11()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Configuration_VoucherDetail
        [BTS_OPSModel.Store.Configuration_VoucherDetail](T1.[Configuration_VoucherDetail.VoucherConfigurationDetailId], T1.[Configuration_VoucherDetail.VoucherConfigurationId], T1.[Configuration_VoucherDetail.Particulars], T1.[Configuration_VoucherDetail.AccountsId], T1.[Configuration_VoucherDetail.DrOrCr], T1.[Configuration_VoucherDetail.For], T1.[Configuration_VoucherDetail.AccountsSource])
    FROM (
        SELECT 
            T.VoucherConfigurationDetailId AS [Configuration_VoucherDetail.VoucherConfigurationDetailId], 
            T.VoucherConfigurationId AS [Configuration_VoucherDetail.VoucherConfigurationId], 
            T.Particulars AS [Configuration_VoucherDetail.Particulars], 
            T.AccountsId AS [Configuration_VoucherDetail.AccountsId], 
            T.DrOrCr AS [Configuration_VoucherDetail.DrOrCr], 
            T.For AS [Configuration_VoucherDetail.For], 
            T.AccountsSource AS [Configuration_VoucherDetail.AccountsSource], 
            True AS _from0
        FROM Inventory360Entities.Configuration_VoucherDetail AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Others_Documents.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView12()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Others_Documents
        [BTS_OPSModel.Store.Others_Documents](T1.[Others_Documents.DocumentId], T1.[Others_Documents.DocumentNo], T1.[Others_Documents.OperationalEventId], T1.[Others_Documents.OperationNo], T1.[Others_Documents.TitleId], T1.[Others_Documents.Description], T1.[Others_Documents.FileRecord], T1.[Others_Documents.FileType], T1.[Others_Documents.DocumentName], T1.[Others_Documents.CompanyId], T1.[Others_Documents.EntryBy], T1.[Others_Documents.EntryDate])
    FROM (
        SELECT 
            T.DocumentId AS [Others_Documents.DocumentId], 
            T.DocumentNo AS [Others_Documents.DocumentNo], 
            T.OperationalEventId AS [Others_Documents.OperationalEventId], 
            T.OperationNo AS [Others_Documents.OperationNo], 
            T.TitleId AS [Others_Documents.TitleId], 
            T.Description AS [Others_Documents.Description], 
            T.FileRecord AS [Others_Documents.FileRecord], 
            T.FileType AS [Others_Documents.FileType], 
            T.DocumentName AS [Others_Documents.DocumentName], 
            T.CompanyId AS [Others_Documents.CompanyId], 
            T.EntryBy AS [Others_Documents.EntryBy], 
            T.EntryDate AS [Others_Documents.EntryDate], 
            True AS _from0
        FROM Inventory360Entities.Others_Documents AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Others_Menu.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView13()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Others_Menu
        [BTS_OPSModel.Store.Others_Menu](T1.[Others_Menu.MenuId], T1.[Others_Menu.MenuLevel], T1.[Others_Menu.MenuTitle], T1.[Others_Menu.MenuOrder], T1.[Others_Menu.ParentId], T1.[Others_Menu.MenuCode])
    FROM (
        SELECT 
            T.MenuId AS [Others_Menu.MenuId], 
            T.MenuLevel AS [Others_Menu.MenuLevel], 
            T.MenuTitle AS [Others_Menu.MenuTitle], 
            T.MenuOrder AS [Others_Menu.MenuOrder], 
            T.ParentId AS [Others_Menu.ParentId], 
            T.MenuCode AS [Others_Menu.MenuCode], 
            True AS _from0
        FROM Inventory360Entities.Others_Menu AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Others_ReportDesignConfig.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView14()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Others_ReportDesignConfig
        [BTS_OPSModel.Store.Others_ReportDesignConfig](T1.[Others_ReportDesignConfig.ReportDesignId], T1.[Others_ReportDesignConfig.OperationalEventId], T1.[Others_ReportDesignConfig.ShowHeader], T1.[Others_ReportDesignConfig.HeaderHeight], T1.[Others_ReportDesignConfig.ShowLocationAddress], T1.[Others_ReportDesignConfig.DefaultReportName], T1.[Others_ReportDesignConfig.PaperLength], T1.[Others_ReportDesignConfig.PaperWidth], T1.[Others_ReportDesignConfig.LeftMargin], T1.[Others_ReportDesignConfig.CompanyId])
    FROM (
        SELECT 
            T.ReportDesignId AS [Others_ReportDesignConfig.ReportDesignId], 
            T.OperationalEventId AS [Others_ReportDesignConfig.OperationalEventId], 
            T.ShowHeader AS [Others_ReportDesignConfig.ShowHeader], 
            T.HeaderHeight AS [Others_ReportDesignConfig.HeaderHeight], 
            T.ShowLocationAddress AS [Others_ReportDesignConfig.ShowLocationAddress], 
            T.DefaultReportName AS [Others_ReportDesignConfig.DefaultReportName], 
            T.PaperLength AS [Others_ReportDesignConfig.PaperLength], 
            T.PaperWidth AS [Others_ReportDesignConfig.PaperWidth], 
            T.LeftMargin AS [Others_ReportDesignConfig.LeftMargin], 
            T.CompanyId AS [Others_ReportDesignConfig.CompanyId], 
            True AS _from0
        FROM Inventory360Entities.Others_ReportDesignConfig AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Security_Level.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView15()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Security_Level
        [BTS_OPSModel.Store.Security_Level](T1.[Security_Level.LevelId], T1.[Security_Level.Code], T1.[Security_Level.Name], T1.[Security_Level.CompanyId])
    FROM (
        SELECT 
            T.LevelId AS [Security_Level.LevelId], 
            T.Code AS [Security_Level.Code], 
            T.Name AS [Security_Level.Name], 
            T.CompanyId AS [Security_Level.CompanyId], 
            True AS _from0
        FROM Inventory360Entities.Security_Level AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Security_Role.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView16()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Security_Role
        [BTS_OPSModel.Store.Security_Role](T1.[Security_Role.RoleId], T1.[Security_Role.Code], T1.[Security_Role.Name], T1.[Security_Role.CompanyId])
    FROM (
        SELECT 
            T.RoleId AS [Security_Role.RoleId], 
            T.Code AS [Security_Role.Code], 
            T.Name AS [Security_Role.Name], 
            T.CompanyId AS [Security_Role.CompanyId], 
            True AS _from0
        FROM Inventory360Entities.Security_Role AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Security_RoleWiseMenuPermission.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView17()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Security_RoleWiseMenuPermission
        [BTS_OPSModel.Store.Security_RoleWiseMenuPermission](T1.[Security_RoleWiseMenuPermission.Id], T1.[Security_RoleWiseMenuPermission.LevelId], T1.[Security_RoleWiseMenuPermission.RoleId], T1.[Security_RoleWiseMenuPermission.MenuId], T1.[Security_RoleWiseMenuPermission.Status], T1.[Security_RoleWiseMenuPermission.CompanyId], T1.[Security_RoleWiseMenuPermission.EntryBy], T1.[Security_RoleWiseMenuPermission.EntryDate])
    FROM (
        SELECT 
            T.Id AS [Security_RoleWiseMenuPermission.Id], 
            T.LevelId AS [Security_RoleWiseMenuPermission.LevelId], 
            T.RoleId AS [Security_RoleWiseMenuPermission.RoleId], 
            T.MenuId AS [Security_RoleWiseMenuPermission.MenuId], 
            T.Status AS [Security_RoleWiseMenuPermission.Status], 
            T.CompanyId AS [Security_RoleWiseMenuPermission.CompanyId], 
            T.EntryBy AS [Security_RoleWiseMenuPermission.EntryBy], 
            T.EntryDate AS [Security_RoleWiseMenuPermission.EntryDate], 
            True AS _from0
        FROM Inventory360Entities.Security_RoleWiseMenuPermission AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Security_User.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView18()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Security_User
        [BTS_OPSModel.Store.Security_User](T1.[Security_User.SecurityUserId], T1.[Security_User.LevelId], T1.[Security_User.RoleId], T1.[Security_User.UserName], T1.[Security_User.FullName], T1.[Security_User.Password], T1.[Security_User.EmailAddress], T1.[Security_User.Active], T1.[Security_User.FirstLogin], T1.[Security_User.PasswordResetDays], T1.[Security_User.LastResetDate], T1.[Security_User.CompanyId])
    FROM (
        SELECT 
            T.SecurityUserId AS [Security_User.SecurityUserId], 
            T.LevelId AS [Security_User.LevelId], 
            T.RoleId AS [Security_User.RoleId], 
            T.UserName AS [Security_User.UserName], 
            T.FullName AS [Security_User.FullName], 
            T.Password AS [Security_User.Password], 
            T.EmailAddress AS [Security_User.EmailAddress], 
            T.Active AS [Security_User.Active], 
            T.FirstLogin AS [Security_User.FirstLogin], 
            T.PasswordResetDays AS [Security_User.PasswordResetDays], 
            T.LastResetDate AS [Security_User.LastResetDate], 
            T.CompanyId AS [Security_User.CompanyId], 
            True AS _from0
        FROM Inventory360Entities.Security_User AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Security_UserLocation.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView19()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Security_UserLocation
        [BTS_OPSModel.Store.Security_UserLocation](T1.[Security_UserLocation.SecurityUserLocationId], T1.[Security_UserLocation.SecurityUserId], T1.[Security_UserLocation.LocationId])
    FROM (
        SELECT 
            T.SecurityUserLocationId AS [Security_UserLocation.SecurityUserLocationId], 
            T.SecurityUserId AS [Security_UserLocation.SecurityUserId], 
            T.LocationId AS [Security_UserLocation.LocationId], 
            True AS _from0
        FROM Inventory360Entities.Security_UserLocation AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Security_UserWiseMenuPermission.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView20()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Security_UserWiseMenuPermission
        [BTS_OPSModel.Store.Security_UserWiseMenuPermission](T1.[Security_UserWiseMenuPermission.Id], T1.[Security_UserWiseMenuPermission.SecurityUserId], T1.[Security_UserWiseMenuPermission.MenuId], T1.[Security_UserWiseMenuPermission.Status], T1.[Security_UserWiseMenuPermission.CompanyId], T1.[Security_UserWiseMenuPermission.EntryBy], T1.[Security_UserWiseMenuPermission.EntryDate])
    FROM (
        SELECT 
            T.Id AS [Security_UserWiseMenuPermission.Id], 
            T.SecurityUserId AS [Security_UserWiseMenuPermission.SecurityUserId], 
            T.MenuId AS [Security_UserWiseMenuPermission.MenuId], 
            T.Status AS [Security_UserWiseMenuPermission.Status], 
            T.CompanyId AS [Security_UserWiseMenuPermission.CompanyId], 
            T.EntryBy AS [Security_UserWiseMenuPermission.EntryBy], 
            T.EntryDate AS [Security_UserWiseMenuPermission.EntryDate], 
            True AS _from0
        FROM Inventory360Entities.Security_UserWiseMenuPermission AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Setup_Accounts.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView21()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_Accounts
        [BTS_OPSModel.Store.Setup_Accounts](T1.[Setup_Accounts.AccountsId], T1.[Setup_Accounts.AccountsSubsidiaryId], T1.[Setup_Accounts.Name], T1.[Setup_Accounts.OpeningDate], T1.[Setup_Accounts.BalanceType], T1.[Setup_Accounts.SelectedCurrency], T1.[Setup_Accounts.Currency1Rate], T1.[Setup_Accounts.Currency2Rate], T1.[Setup_Accounts.OpeningBalance], T1.[Setup_Accounts.OpeningBalance1], T1.[Setup_Accounts.OpeningBalance2], T1.[Setup_Accounts.IsOpeningFinalized], T1.[Setup_Accounts.CategorizationId], T1.[Setup_Accounts.CompanyId], T1.[Setup_Accounts.LocationId], T1.[Setup_Accounts.EntryBy], T1.[Setup_Accounts.EntryDate], T1.[Setup_Accounts.EditedBy], T1.[Setup_Accounts.EditedDate], T1.[Setup_Accounts.OpeningEditedBy], T1.[Setup_Accounts.OpeningEditedDate])
    FROM (
        SELECT 
            T.AccountsId AS [Setup_Accounts.AccountsId], 
            T.AccountsSubsidiaryId AS [Setup_Accounts.AccountsSubsidiaryId], 
            T.Name AS [Setup_Accounts.Name], 
            T.OpeningDate AS [Setup_Accounts.OpeningDate], 
            T.BalanceType AS [Setup_Accounts.BalanceType], 
            T.SelectedCurrency AS [Setup_Accounts.SelectedCurrency], 
            T.Currency1Rate AS [Setup_Accounts.Currency1Rate], 
            T.Currency2Rate AS [Setup_Accounts.Currency2Rate], 
            T.OpeningBalance AS [Setup_Accounts.OpeningBalance], 
            T.OpeningBalance1 AS [Setup_Accounts.OpeningBalance1], 
            T.OpeningBalance2 AS [Setup_Accounts.OpeningBalance2], 
            T.IsOpeningFinalized AS [Setup_Accounts.IsOpeningFinalized], 
            T.CategorizationId AS [Setup_Accounts.CategorizationId], 
            T.CompanyId AS [Setup_Accounts.CompanyId], 
            T.LocationId AS [Setup_Accounts.LocationId], 
            T.EntryBy AS [Setup_Accounts.EntryBy], 
            T.EntryDate AS [Setup_Accounts.EntryDate], 
            T.EditedBy AS [Setup_Accounts.EditedBy], 
            T.EditedDate AS [Setup_Accounts.EditedDate], 
            T.OpeningEditedBy AS [Setup_Accounts.OpeningEditedBy], 
            T.OpeningEditedDate AS [Setup_Accounts.OpeningEditedDate], 
            True AS _from0
        FROM Inventory360Entities.Setup_Accounts AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Setup_AccountsCashBankIdentification.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView22()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_AccountsCashBankIdentification
        [BTS_OPSModel.Store.Setup_AccountsCashBankIdentification](T1.[Setup_AccountsCashBankIdentification.IdentificationId], T1.[Setup_AccountsCashBankIdentification.IdentificationType], T1.[Setup_AccountsCashBankIdentification.AccountsControlId], T1.[Setup_AccountsCashBankIdentification.AccountsSubsidiaryId], T1.[Setup_AccountsCashBankIdentification.CompanyId], T1.[Setup_AccountsCashBankIdentification.EntryBy], T1.[Setup_AccountsCashBankIdentification.EntryDate])
    FROM (
        SELECT 
            T.IdentificationId AS [Setup_AccountsCashBankIdentification.IdentificationId], 
            T.IdentificationType AS [Setup_AccountsCashBankIdentification.IdentificationType], 
            T.AccountsControlId AS [Setup_AccountsCashBankIdentification.AccountsControlId], 
            T.AccountsSubsidiaryId AS [Setup_AccountsCashBankIdentification.AccountsSubsidiaryId], 
            T.CompanyId AS [Setup_AccountsCashBankIdentification.CompanyId], 
            T.EntryBy AS [Setup_AccountsCashBankIdentification.EntryBy], 
            T.EntryDate AS [Setup_AccountsCashBankIdentification.EntryDate], 
            True AS _from0
        FROM Inventory360Entities.Setup_AccountsCashBankIdentification AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Setup_AccountsControl.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView23()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_AccountsControl
        [BTS_OPSModel.Store.Setup_AccountsControl](T1.[Setup_AccountsControl.AccountsControlId], T1.[Setup_AccountsControl.AccountsSubGroupId], T1.[Setup_AccountsControl.Name], T1.[Setup_AccountsControl.CompanyId], T1.[Setup_AccountsControl.EntryBy])
    FROM (
        SELECT 
            T.AccountsControlId AS [Setup_AccountsControl.AccountsControlId], 
            T.AccountsSubGroupId AS [Setup_AccountsControl.AccountsSubGroupId], 
            T.Name AS [Setup_AccountsControl.Name], 
            T.CompanyId AS [Setup_AccountsControl.CompanyId], 
            T.EntryBy AS [Setup_AccountsControl.EntryBy], 
            True AS _from0
        FROM Inventory360Entities.Setup_AccountsControl AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Setup_AccountsDetail_Location.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView24()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_AccountsDetail_Location
        [BTS_OPSModel.Store.Setup_AccountsDetail_Location](T1.[Setup_AccountsDetail_Location.AccountsDetailId], T1.[Setup_AccountsDetail_Location.AccountsId], T1.[Setup_AccountsDetail_Location.LocationId], T1.[Setup_AccountsDetail_Location.OpeningBalance], T1.[Setup_AccountsDetail_Location.OpeningBalance1], T1.[Setup_AccountsDetail_Location.OpeningBalance2])
    FROM (
        SELECT 
            T.AccountsDetailId AS [Setup_AccountsDetail_Location.AccountsDetailId], 
            T.AccountsId AS [Setup_AccountsDetail_Location.AccountsId], 
            T.LocationId AS [Setup_AccountsDetail_Location.LocationId], 
            T.OpeningBalance AS [Setup_AccountsDetail_Location.OpeningBalance], 
            T.OpeningBalance1 AS [Setup_AccountsDetail_Location.OpeningBalance1], 
            T.OpeningBalance2 AS [Setup_AccountsDetail_Location.OpeningBalance2], 
            True AS _from0
        FROM Inventory360Entities.Setup_AccountsDetail_Location AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Setup_AccountsGroup.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView25()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_AccountsGroup
        [BTS_OPSModel.Store.Setup_AccountsGroup](T1.[Setup_AccountsGroup.AccountsGroupId], T1.[Setup_AccountsGroup.Code], T1.[Setup_AccountsGroup.Name], T1.[Setup_AccountsGroup.BalanceType], T1.[Setup_AccountsGroup.IsDefault], T1.[Setup_AccountsGroup.CompanyId])
    FROM (
        SELECT 
            T.AccountsGroupId AS [Setup_AccountsGroup.AccountsGroupId], 
            T.Code AS [Setup_AccountsGroup.Code], 
            T.Name AS [Setup_AccountsGroup.Name], 
            T.BalanceType AS [Setup_AccountsGroup.BalanceType], 
            T.IsDefault AS [Setup_AccountsGroup.IsDefault], 
            T.CompanyId AS [Setup_AccountsGroup.CompanyId], 
            True AS _from0
        FROM Inventory360Entities.Setup_AccountsGroup AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Setup_AccountsSubGroup.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView26()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_AccountsSubGroup
        [BTS_OPSModel.Store.Setup_AccountsSubGroup](T1.[Setup_AccountsSubGroup.AccountsSubGroupId], T1.[Setup_AccountsSubGroup.AccountsGroupId], T1.[Setup_AccountsSubGroup.Name], T1.[Setup_AccountsSubGroup.CompanyId], T1.[Setup_AccountsSubGroup.EntryBy])
    FROM (
        SELECT 
            T.AccountsSubGroupId AS [Setup_AccountsSubGroup.AccountsSubGroupId], 
            T.AccountsGroupId AS [Setup_AccountsSubGroup.AccountsGroupId], 
            T.Name AS [Setup_AccountsSubGroup.Name], 
            T.CompanyId AS [Setup_AccountsSubGroup.CompanyId], 
            T.EntryBy AS [Setup_AccountsSubGroup.EntryBy], 
            True AS _from0
        FROM Inventory360Entities.Setup_AccountsSubGroup AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Setup_AccountsSubsidiary.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView27()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_AccountsSubsidiary
        [BTS_OPSModel.Store.Setup_AccountsSubsidiary](T1.[Setup_AccountsSubsidiary.AccountsSubsidiaryId], T1.[Setup_AccountsSubsidiary.AccountsControlId], T1.[Setup_AccountsSubsidiary.Name], T1.[Setup_AccountsSubsidiary.CompanyId], T1.[Setup_AccountsSubsidiary.EntryBy])
    FROM (
        SELECT 
            T.AccountsSubsidiaryId AS [Setup_AccountsSubsidiary.AccountsSubsidiaryId], 
            T.AccountsControlId AS [Setup_AccountsSubsidiary.AccountsControlId], 
            T.Name AS [Setup_AccountsSubsidiary.Name], 
            T.CompanyId AS [Setup_AccountsSubsidiary.CompanyId], 
            T.EntryBy AS [Setup_AccountsSubsidiary.EntryBy], 
            True AS _from0
        FROM Inventory360Entities.Setup_AccountsSubsidiary AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Setup_Bank.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView28()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_Bank
        [BTS_OPSModel.Store.Setup_Bank](T1.[Setup_Bank.BankId], T1.[Setup_Bank.Name], T1.[Setup_Bank.Address], T1.[Setup_Bank.Branch], T1.[Setup_Bank.BankAccountNo], T1.[Setup_Bank.IsOwnBank], T1.[Setup_Bank.AccountsId], T1.[Setup_Bank.CompanyId], T1.[Setup_Bank.EntryBy], T1.[Setup_Bank.EntryDate], T1.[Setup_Bank.EditedBy], T1.[Setup_Bank.EditedDate])
    FROM (
        SELECT 
            T.BankId AS [Setup_Bank.BankId], 
            T.Name AS [Setup_Bank.Name], 
            T.Address AS [Setup_Bank.Address], 
            T.Branch AS [Setup_Bank.Branch], 
            T.BankAccountNo AS [Setup_Bank.BankAccountNo], 
            T.IsOwnBank AS [Setup_Bank.IsOwnBank], 
            T.AccountsId AS [Setup_Bank.AccountsId], 
            T.CompanyId AS [Setup_Bank.CompanyId], 
            T.EntryBy AS [Setup_Bank.EntryBy], 
            T.EntryDate AS [Setup_Bank.EntryDate], 
            T.EditedBy AS [Setup_Bank.EditedBy], 
            T.EditedDate AS [Setup_Bank.EditedDate], 
            True AS _from0
        FROM Inventory360Entities.Setup_Bank AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Setup_Brand.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView29()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_Brand
        [BTS_OPSModel.Store.Setup_Brand](T1.[Setup_Brand.BrandId], T1.[Setup_Brand.Code], T1.[Setup_Brand.Name], T1.[Setup_Brand.CompanyId], T1.[Setup_Brand.EntryBy], T1.[Setup_Brand.EntryDate], T1.[Setup_Brand.EditedBy], T1.[Setup_Brand.EditedDate])
    FROM (
        SELECT 
            T.BrandId AS [Setup_Brand.BrandId], 
            T.Code AS [Setup_Brand.Code], 
            T.Name AS [Setup_Brand.Name], 
            T.CompanyId AS [Setup_Brand.CompanyId], 
            T.EntryBy AS [Setup_Brand.EntryBy], 
            T.EntryDate AS [Setup_Brand.EntryDate], 
            T.EditedBy AS [Setup_Brand.EditedBy], 
            T.EditedDate AS [Setup_Brand.EditedDate], 
            True AS _from0
        FROM Inventory360Entities.Setup_Brand AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Setup_Capacity.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView30()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_Capacity
        [BTS_OPSModel.Store.Setup_Capacity](T1.[Setup_Capacity.CapacityId], T1.[Setup_Capacity.Code], T1.[Setup_Capacity.Name], T1.[Setup_Capacity.CompanyId], T1.[Setup_Capacity.EntryBy], T1.[Setup_Capacity.EntryDate])
    FROM (
        SELECT 
            T.CapacityId AS [Setup_Capacity.CapacityId], 
            T.Code AS [Setup_Capacity.Code], 
            T.Name AS [Setup_Capacity.Name], 
            T.CompanyId AS [Setup_Capacity.CompanyId], 
            T.EntryBy AS [Setup_Capacity.EntryBy], 
            T.EntryDate AS [Setup_Capacity.EntryDate], 
            True AS _from0
        FROM Inventory360Entities.Setup_Capacity AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Setup_Charge.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView31()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_Charge
        [BTS_OPSModel.Store.Setup_Charge](T1.[Setup_Charge.ChargeId], T1.[Setup_Charge.Code], T1.[Setup_Charge.Name], T1.[Setup_Charge.CompanyId], T1.[Setup_Charge.EntryBy], T1.[Setup_Charge.EntryDate])
    FROM (
        SELECT 
            T.ChargeId AS [Setup_Charge.ChargeId], 
            T.Code AS [Setup_Charge.Code], 
            T.Name AS [Setup_Charge.Name], 
            T.CompanyId AS [Setup_Charge.CompanyId], 
            T.EntryBy AS [Setup_Charge.EntryBy], 
            T.EntryDate AS [Setup_Charge.EntryDate], 
            True AS _from0
        FROM Inventory360Entities.Setup_Charge AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Setup_Color.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView32()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_Color
        [BTS_OPSModel.Store.Setup_Color](T1.[Setup_Color.ColorId], T1.[Setup_Color.Code], T1.[Setup_Color.Name], T1.[Setup_Color.CompanyId], T1.[Setup_Color.EntryBy], T1.[Setup_Color.EntryDate])
    FROM (
        SELECT 
            T.ColorId AS [Setup_Color.ColorId], 
            T.Code AS [Setup_Color.Code], 
            T.Name AS [Setup_Color.Name], 
            T.CompanyId AS [Setup_Color.CompanyId], 
            T.EntryBy AS [Setup_Color.EntryBy], 
            T.EntryDate AS [Setup_Color.EntryDate], 
            True AS _from0
        FROM Inventory360Entities.Setup_Color AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Setup_Company.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView33()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_Company
        [BTS_OPSModel.Store.Setup_Company](T1.[Setup_Company.CompanyId], T1.[Setup_Company.Code], T1.[Setup_Company.Name], T1.[Setup_Company.Address], T1.[Setup_Company.PhoneNo], T1.[Setup_Company.FaxNo], T1.[Setup_Company.OpeningDate], T1.[Setup_Company.BaseCurrency], T1.[Setup_Company.Currency1], T1.[Setup_Company.Currency2], T1.[Setup_Company.VATRegNo], T1.[Setup_Company.FinStartingMonth], T1.[Setup_Company.GovtFinStartingMonth], T1.[Setup_Company.MaxWidthInPixel], T1.[Setup_Company.MaxHeightInPixel], T1.[Setup_Company.CompanyOpeningDate])
    FROM (
        SELECT 
            T.CompanyId AS [Setup_Company.CompanyId], 
            T.Code AS [Setup_Company.Code], 
            T.Name AS [Setup_Company.Name], 
            T.Address AS [Setup_Company.Address], 
            T.PhoneNo AS [Setup_Company.PhoneNo], 
            T.FaxNo AS [Setup_Company.FaxNo], 
            T.OpeningDate AS [Setup_Company.OpeningDate], 
            T.BaseCurrency AS [Setup_Company.BaseCurrency], 
            T.Currency1 AS [Setup_Company.Currency1], 
            T.Currency2 AS [Setup_Company.Currency2], 
            T.VATRegNo AS [Setup_Company.VATRegNo], 
            T.FinStartingMonth AS [Setup_Company.FinStartingMonth], 
            T.GovtFinStartingMonth AS [Setup_Company.GovtFinStartingMonth], 
            T.MaxWidthInPixel AS [Setup_Company.MaxWidthInPixel], 
            T.MaxHeightInPixel AS [Setup_Company.MaxHeightInPixel], 
            T.CompanyOpeningDate AS [Setup_Company.CompanyOpeningDate], 
            True AS _from0
        FROM Inventory360Entities.Setup_Company AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Setup_ConvertionRatio.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView34()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_ConvertionRatio
        [BTS_OPSModel.Store.Setup_ConvertionRatio](T1.[Setup_ConvertionRatio.ConvertionRatioId], T1.[Setup_ConvertionRatio.RatioNo], T1.[Setup_ConvertionRatio.RatioTitle], T1.[Setup_ConvertionRatio.RatioDate], T1.[Setup_ConvertionRatio.Description], T1.[Setup_ConvertionRatio.Approved], T1.[Setup_ConvertionRatio.ApprovedBy], T1.[Setup_ConvertionRatio.ApprovedDate], T1.[Setup_ConvertionRatio.CancelReason], T1.[Setup_ConvertionRatio.CompanyId], T1.[Setup_ConvertionRatio.EntryBy], T1.[Setup_ConvertionRatio.EntryDate])
    FROM (
        SELECT 
            T.ConvertionRatioId AS [Setup_ConvertionRatio.ConvertionRatioId], 
            T.RatioNo AS [Setup_ConvertionRatio.RatioNo], 
            T.RatioTitle AS [Setup_ConvertionRatio.RatioTitle], 
            T.RatioDate AS [Setup_ConvertionRatio.RatioDate], 
            T.Description AS [Setup_ConvertionRatio.Description], 
            T.Approved AS [Setup_ConvertionRatio.Approved], 
            T.ApprovedBy AS [Setup_ConvertionRatio.ApprovedBy], 
            T.ApprovedDate AS [Setup_ConvertionRatio.ApprovedDate], 
            T.CancelReason AS [Setup_ConvertionRatio.CancelReason], 
            T.CompanyId AS [Setup_ConvertionRatio.CompanyId], 
            T.EntryBy AS [Setup_ConvertionRatio.EntryBy], 
            T.EntryDate AS [Setup_ConvertionRatio.EntryDate], 
            True AS _from0
        FROM Inventory360Entities.Setup_ConvertionRatio AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Setup_ConvertionRatioDetail.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView35()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_ConvertionRatioDetail
        [BTS_OPSModel.Store.Setup_ConvertionRatioDetail](T1.[Setup_ConvertionRatioDetail.ConvertionRatioDetailId], T1.[Setup_ConvertionRatioDetail.ConvertionRatioId], T1.[Setup_ConvertionRatioDetail.ProductFor], T1.[Setup_ConvertionRatioDetail.ProductId], T1.[Setup_ConvertionRatioDetail.ProductDimensionId], T1.[Setup_ConvertionRatioDetail.UnitTypeId], T1.[Setup_ConvertionRatioDetail.Quantity], T1.[Setup_ConvertionRatioDetail.Remarks])
    FROM (
        SELECT 
            T.ConvertionRatioDetailId AS [Setup_ConvertionRatioDetail.ConvertionRatioDetailId], 
            T.ConvertionRatioId AS [Setup_ConvertionRatioDetail.ConvertionRatioId], 
            T.ProductFor AS [Setup_ConvertionRatioDetail.ProductFor], 
            T.ProductId AS [Setup_ConvertionRatioDetail.ProductId], 
            T.ProductDimensionId AS [Setup_ConvertionRatioDetail.ProductDimensionId], 
            T.UnitTypeId AS [Setup_ConvertionRatioDetail.UnitTypeId], 
            T.Quantity AS [Setup_ConvertionRatioDetail.Quantity], 
            T.Remarks AS [Setup_ConvertionRatioDetail.Remarks], 
            True AS _from0
        FROM Inventory360Entities.Setup_ConvertionRatioDetail AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Setup_CostingControl.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView36()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_CostingControl
        [BTS_OPSModel.Store.Setup_CostingControl](T1.[Setup_CostingControl.CostingControlId], T1.[Setup_CostingControl.CostingGroupId], T1.[Setup_CostingControl.Name], T1.[Setup_CostingControl.CostAllocationMethod], T1.[Setup_CostingControl.CompanyId], T1.[Setup_CostingControl.EntryBy], T1.[Setup_CostingControl.EntryDate], T1.[Setup_CostingControl.EditedBy], T1.[Setup_CostingControl.EditedDate])
    FROM (
        SELECT 
            T.CostingControlId AS [Setup_CostingControl.CostingControlId], 
            T.CostingGroupId AS [Setup_CostingControl.CostingGroupId], 
            T.Name AS [Setup_CostingControl.Name], 
            T.CostAllocationMethod AS [Setup_CostingControl.CostAllocationMethod], 
            T.CompanyId AS [Setup_CostingControl.CompanyId], 
            T.EntryBy AS [Setup_CostingControl.EntryBy], 
            T.EntryDate AS [Setup_CostingControl.EntryDate], 
            T.EditedBy AS [Setup_CostingControl.EditedBy], 
            T.EditedDate AS [Setup_CostingControl.EditedDate], 
            True AS _from0
        FROM Inventory360Entities.Setup_CostingControl AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Setup_CostingGroup.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView37()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_CostingGroup
        [BTS_OPSModel.Store.Setup_CostingGroup](T1.[Setup_CostingGroup.CostingGroupId], T1.[Setup_CostingGroup.Code], T1.[Setup_CostingGroup.Name])
    FROM (
        SELECT 
            T.CostingGroupId AS [Setup_CostingGroup.CostingGroupId], 
            T.Code AS [Setup_CostingGroup.Code], 
            T.Name AS [Setup_CostingGroup.Name], 
            True AS _from0
        FROM Inventory360Entities.Setup_CostingGroup AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Setup_CostingHead.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView38()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_CostingHead
        [BTS_OPSModel.Store.Setup_CostingHead](T1.[Setup_CostingHead.CostingHeadId], T1.[Setup_CostingHead.CostingControlId], T1.[Setup_CostingHead.Name], T1.[Setup_CostingHead.AccountsId], T1.[Setup_CostingHead.CompanyId], T1.[Setup_CostingHead.EntryBy], T1.[Setup_CostingHead.EntryDate], T1.[Setup_CostingHead.EditedBy], T1.[Setup_CostingHead.EditedDate])
    FROM (
        SELECT 
            T.CostingHeadId AS [Setup_CostingHead.CostingHeadId], 
            T.CostingControlId AS [Setup_CostingHead.CostingControlId], 
            T.Name AS [Setup_CostingHead.Name], 
            T.AccountsId AS [Setup_CostingHead.AccountsId], 
            T.CompanyId AS [Setup_CostingHead.CompanyId], 
            T.EntryBy AS [Setup_CostingHead.EntryBy], 
            T.EntryDate AS [Setup_CostingHead.EntryDate], 
            T.EditedBy AS [Setup_CostingHead.EditedBy], 
            T.EditedDate AS [Setup_CostingHead.EditedDate], 
            True AS _from0
        FROM Inventory360Entities.Setup_CostingHead AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Setup_Country.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView39()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_Country
        [BTS_OPSModel.Store.Setup_Country](T1.[Setup_Country.CountryId], T1.[Setup_Country.Code], T1.[Setup_Country.Name])
    FROM (
        SELECT 
            T.CountryId AS [Setup_Country.CountryId], 
            T.Code AS [Setup_Country.Code], 
            T.Name AS [Setup_Country.Name], 
            True AS _from0
        FROM Inventory360Entities.Setup_Country AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Setup_Customer.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView40()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_Customer
        [BTS_OPSModel.Store.Setup_Customer](T1.[Setup_Customer.CustomerId], T1.[Setup_Customer.CustomerGroupId], T1.[Setup_Customer.Code], T1.[Setup_Customer.Name], T1.[Setup_Customer.Address], T1.[Setup_Customer.PhoneNo], T1.[Setup_Customer.Fax], T1.[Setup_Customer.Email], T1.[Setup_Customer.PhoneNo1], T1.[Setup_Customer.PhoneNo2], T1.[Setup_Customer.SalesPersonId], T1.[Setup_Customer.IsCombined], T1.[Setup_Customer.IsActive], T1.[Setup_Customer.Type], T1.[Setup_Customer.ContactPerson], T1.[Setup_Customer.ContactPersonMobile], T1.[Setup_Customer.ProfessionId], T1.[Setup_Customer.Designation], T1.[Setup_Customer.ReferenceName], T1.[Setup_Customer.ReferenceContactNo], T1.[Setup_Customer.SupplierId], T1.[Setup_Customer.OpeningBalance], T1.[Setup_Customer.OpeningDate], T1.[Setup_Customer.ChequeDishonourBalance], T1.[Setup_Customer.ChequeDishonourOpeningDate], T1.[Setup_Customer.CreditLimit], T1.[Setup_Customer.LedgerLimit], T1.[Setup_Customer.CreditAllowedDays], T1.[Setup_Customer.IsLocked], T1.[Setup_Customer.IsRMALocked], T1.[Setup_Customer.AccountsId], T1.[Setup_Customer.SelectedCurrency], T1.[Setup_Customer.Currency1Rate], T1.[Setup_Customer.Currency2Rate], T1.[Setup_Customer.OpeningBalance1], T1.[Setup_Customer.OpeningBalance2], T1.[Setup_Customer.ChequeDishonourBalance1], T1.[Setup_Customer.ChequeDishonourBalance2], T1.[Setup_Customer.CreditLimit1], T1.[Setup_Customer.CreditLimit2], T1.[Setup_Customer.LedgerLimit1], T1.[Setup_Customer.LedgerLimit2], T1.[Setup_Customer.CollectedAmount], T1.[Setup_Customer.Collected1Amount], T1.[Setup_Customer.Collected2Amount], T1.[Setup_Customer.TransactionType], T1.[Setup_Customer.IsWalkIn], T1.[Setup_Customer.CompanyId], T1.[Setup_Customer.LocationId], T1.[Setup_Customer.EntryBy], T1.[Setup_Customer.EntryDate], T1.[Setup_Customer.EditedBy], T1.[Setup_Customer.EditedDate])
    FROM (
        SELECT 
            T.CustomerId AS [Setup_Customer.CustomerId], 
            T.CustomerGroupId AS [Setup_Customer.CustomerGroupId], 
            T.Code AS [Setup_Customer.Code], 
            T.Name AS [Setup_Customer.Name], 
            T.Address AS [Setup_Customer.Address], 
            T.PhoneNo AS [Setup_Customer.PhoneNo], 
            T.Fax AS [Setup_Customer.Fax], 
            T.Email AS [Setup_Customer.Email], 
            T.PhoneNo1 AS [Setup_Customer.PhoneNo1], 
            T.PhoneNo2 AS [Setup_Customer.PhoneNo2], 
            T.SalesPersonId AS [Setup_Customer.SalesPersonId], 
            T.IsCombined AS [Setup_Customer.IsCombined], 
            T.IsActive AS [Setup_Customer.IsActive], 
            T.Type AS [Setup_Customer.Type], 
            T.ContactPerson AS [Setup_Customer.ContactPerson], 
            T.ContactPersonMobile AS [Setup_Customer.ContactPersonMobile], 
            T.ProfessionId AS [Setup_Customer.ProfessionId], 
            T.Designation AS [Setup_Customer.Designation], 
            T.ReferenceName AS [Setup_Customer.ReferenceName], 
            T.ReferenceContactNo AS [Setup_Customer.ReferenceContactNo], 
            T.SupplierId AS [Setup_Customer.SupplierId], 
            T.OpeningBalance AS [Setup_Customer.OpeningBalance], 
            T.OpeningDate AS [Setup_Customer.OpeningDate], 
            T.ChequeDishonourBalance AS [Setup_Customer.ChequeDishonourBalance], 
            T.ChequeDishonourOpeningDate AS [Setup_Customer.ChequeDishonourOpeningDate], 
            T.CreditLimit AS [Setup_Customer.CreditLimit], 
            T.LedgerLimit AS [Setup_Customer.LedgerLimit], 
            T.CreditAllowedDays AS [Setup_Customer.CreditAllowedDays], 
            T.IsLocked AS [Setup_Customer.IsLocked], 
            T.IsRMALocked AS [Setup_Customer.IsRMALocked], 
            T.AccountsId AS [Setup_Customer.AccountsId], 
            T.SelectedCurrency AS [Setup_Customer.SelectedCurrency], 
            T.Currency1Rate AS [Setup_Customer.Currency1Rate], 
            T.Currency2Rate AS [Setup_Customer.Currency2Rate], 
            T.OpeningBalance1 AS [Setup_Customer.OpeningBalance1], 
            T.OpeningBalance2 AS [Setup_Customer.OpeningBalance2], 
            T.ChequeDishonourBalance1 AS [Setup_Customer.ChequeDishonourBalance1], 
            T.ChequeDishonourBalance2 AS [Setup_Customer.ChequeDishonourBalance2], 
            T.CreditLimit1 AS [Setup_Customer.CreditLimit1], 
            T.CreditLimit2 AS [Setup_Customer.CreditLimit2], 
            T.LedgerLimit1 AS [Setup_Customer.LedgerLimit1], 
            T.LedgerLimit2 AS [Setup_Customer.LedgerLimit2], 
            T.CollectedAmount AS [Setup_Customer.CollectedAmount], 
            T.Collected1Amount AS [Setup_Customer.Collected1Amount], 
            T.Collected2Amount AS [Setup_Customer.Collected2Amount], 
            T.TransactionType AS [Setup_Customer.TransactionType], 
            T.IsWalkIn AS [Setup_Customer.IsWalkIn], 
            T.CompanyId AS [Setup_Customer.CompanyId], 
            T.LocationId AS [Setup_Customer.LocationId], 
            T.EntryBy AS [Setup_Customer.EntryBy], 
            T.EntryDate AS [Setup_Customer.EntryDate], 
            T.EditedBy AS [Setup_Customer.EditedBy], 
            T.EditedDate AS [Setup_Customer.EditedDate], 
            True AS _from0
        FROM Inventory360Entities.Setup_Customer AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Setup_CustomerGroup.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView41()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_CustomerGroup
        [BTS_OPSModel.Store.Setup_CustomerGroup](T1.[Setup_CustomerGroup.CustomerGroupId], T1.[Setup_CustomerGroup.Name], T1.[Setup_CustomerGroup.IsDefaultSelected], T1.[Setup_CustomerGroup.CompanyId], T1.[Setup_CustomerGroup.EntryBy], T1.[Setup_CustomerGroup.EntryDate])
    FROM (
        SELECT 
            T.CustomerGroupId AS [Setup_CustomerGroup.CustomerGroupId], 
            T.Name AS [Setup_CustomerGroup.Name], 
            T.IsDefaultSelected AS [Setup_CustomerGroup.IsDefaultSelected], 
            T.CompanyId AS [Setup_CustomerGroup.CompanyId], 
            T.EntryBy AS [Setup_CustomerGroup.EntryBy], 
            T.EntryDate AS [Setup_CustomerGroup.EntryDate], 
            True AS _from0
        FROM Inventory360Entities.Setup_CustomerGroup AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Setup_Designation.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView42()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_Designation
        [BTS_OPSModel.Store.Setup_Designation](T1.[Setup_Designation.DesignationId], T1.[Setup_Designation.Name], T1.[Setup_Designation.CompanyId], T1.[Setup_Designation.EntryBy], T1.[Setup_Designation.EntryDate])
    FROM (
        SELECT 
            T.DesignationId AS [Setup_Designation.DesignationId], 
            T.Name AS [Setup_Designation.Name], 
            T.CompanyId AS [Setup_Designation.CompanyId], 
            T.EntryBy AS [Setup_Designation.EntryBy], 
            T.EntryDate AS [Setup_Designation.EntryDate], 
            True AS _from0
        FROM Inventory360Entities.Setup_Designation AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Setup_DocumentsGroup.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView43()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_DocumentsGroup
        [BTS_OPSModel.Store.Setup_DocumentsGroup](T1.[Setup_DocumentsGroup.GroupId], T1.[Setup_DocumentsGroup.Name], T1.[Setup_DocumentsGroup.CompanyId], T1.[Setup_DocumentsGroup.EntryBy], T1.[Setup_DocumentsGroup.EntryDate], T1.[Setup_DocumentsGroup.EditedBy], T1.[Setup_DocumentsGroup.EditedDate])
    FROM (
        SELECT 
            T.GroupId AS [Setup_DocumentsGroup.GroupId], 
            T.Name AS [Setup_DocumentsGroup.Name], 
            T.CompanyId AS [Setup_DocumentsGroup.CompanyId], 
            T.EntryBy AS [Setup_DocumentsGroup.EntryBy], 
            T.EntryDate AS [Setup_DocumentsGroup.EntryDate], 
            T.EditedBy AS [Setup_DocumentsGroup.EditedBy], 
            T.EditedDate AS [Setup_DocumentsGroup.EditedDate], 
            True AS _from0
        FROM Inventory360Entities.Setup_DocumentsGroup AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Setup_DocumentsTitle.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView44()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_DocumentsTitle
        [BTS_OPSModel.Store.Setup_DocumentsTitle](T1.[Setup_DocumentsTitle.TitleId], T1.[Setup_DocumentsTitle.GroupId], T1.[Setup_DocumentsTitle.Name], T1.[Setup_DocumentsTitle.CompanyId], T1.[Setup_DocumentsTitle.EntryBy], T1.[Setup_DocumentsTitle.EntryDate], T1.[Setup_DocumentsTitle.EditedBy], T1.[Setup_DocumentsTitle.EditedDate])
    FROM (
        SELECT 
            T.TitleId AS [Setup_DocumentsTitle.TitleId], 
            T.GroupId AS [Setup_DocumentsTitle.GroupId], 
            T.Name AS [Setup_DocumentsTitle.Name], 
            T.CompanyId AS [Setup_DocumentsTitle.CompanyId], 
            T.EntryBy AS [Setup_DocumentsTitle.EntryBy], 
            T.EntryDate AS [Setup_DocumentsTitle.EntryDate], 
            T.EditedBy AS [Setup_DocumentsTitle.EditedBy], 
            T.EditedDate AS [Setup_DocumentsTitle.EditedDate], 
            True AS _from0
        FROM Inventory360Entities.Setup_DocumentsTitle AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Setup_Employee.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView45()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_Employee
        [BTS_OPSModel.Store.Setup_Employee](T1.[Setup_Employee.EmployeeId], T1.[Setup_Employee.Code], T1.[Setup_Employee.Name], T1.[Setup_Employee.IsActive], T1.[Setup_Employee.DesignationId], T1.[Setup_Employee.ContactNo], T1.[Setup_Employee.Role], T1.[Setup_Employee.Email], T1.[Setup_Employee.NIDNo], T1.[Setup_Employee.PassportNo], T1.[Setup_Employee.AccountsId], T1.[Setup_Employee.BankId], T1.[Setup_Employee.BankAccountNo], T1.[Setup_Employee.CompanyId], T1.[Setup_Employee.EntryBy], T1.[Setup_Employee.EntryDate])
    FROM (
        SELECT 
            T.EmployeeId AS [Setup_Employee.EmployeeId], 
            T.Code AS [Setup_Employee.Code], 
            T.Name AS [Setup_Employee.Name], 
            T.IsActive AS [Setup_Employee.IsActive], 
            T.DesignationId AS [Setup_Employee.DesignationId], 
            T.ContactNo AS [Setup_Employee.ContactNo], 
            T.Role AS [Setup_Employee.Role], 
            T.Email AS [Setup_Employee.Email], 
            T.NIDNo AS [Setup_Employee.NIDNo], 
            T.PassportNo AS [Setup_Employee.PassportNo], 
            T.AccountsId AS [Setup_Employee.AccountsId], 
            T.BankId AS [Setup_Employee.BankId], 
            T.BankAccountNo AS [Setup_Employee.BankAccountNo], 
            T.CompanyId AS [Setup_Employee.CompanyId], 
            T.EntryBy AS [Setup_Employee.EntryBy], 
            T.EntryDate AS [Setup_Employee.EntryDate], 
            True AS _from0
        FROM Inventory360Entities.Setup_Employee AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Setup_Features.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView46()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_Features
        [BTS_OPSModel.Store.Setup_Features](T1.[Setup_Features.FeatureId], T1.[Setup_Features.FeatureName], T1.[Setup_Features.DefaultValue], T1.[Setup_Features.Description])
    FROM (
        SELECT 
            T.FeatureId AS [Setup_Features.FeatureId], 
            T.FeatureName AS [Setup_Features.FeatureName], 
            T.DefaultValue AS [Setup_Features.DefaultValue], 
            T.Description AS [Setup_Features.Description], 
            True AS _from0
        FROM Inventory360Entities.Setup_Features AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Setup_GeoDistrict.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView47()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_GeoDistrict
        [BTS_OPSModel.Store.Setup_GeoDistrict](T1.[Setup_GeoDistrict.DistrictId], T1.[Setup_GeoDistrict.DivisionId], T1.[Setup_GeoDistrict.DistrictName], T1.[Setup_GeoDistrict.CompanyId], T1.[Setup_GeoDistrict.EntryBy], T1.[Setup_GeoDistrict.EntryDate])
    FROM (
        SELECT 
            T.DistrictId AS [Setup_GeoDistrict.DistrictId], 
            T.DivisionId AS [Setup_GeoDistrict.DivisionId], 
            T.DistrictName AS [Setup_GeoDistrict.DistrictName], 
            T.CompanyId AS [Setup_GeoDistrict.CompanyId], 
            T.EntryBy AS [Setup_GeoDistrict.EntryBy], 
            T.EntryDate AS [Setup_GeoDistrict.EntryDate], 
            True AS _from0
        FROM Inventory360Entities.Setup_GeoDistrict AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Setup_GeoDivision.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView48()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_GeoDivision
        [BTS_OPSModel.Store.Setup_GeoDivision](T1.[Setup_GeoDivision.DivisionId], T1.[Setup_GeoDivision.RegionId], T1.[Setup_GeoDivision.DivisionName], T1.[Setup_GeoDivision.CompanyId], T1.[Setup_GeoDivision.EntryBy], T1.[Setup_GeoDivision.EntryDate])
    FROM (
        SELECT 
            T.DivisionId AS [Setup_GeoDivision.DivisionId], 
            T.RegionId AS [Setup_GeoDivision.RegionId], 
            T.DivisionName AS [Setup_GeoDivision.DivisionName], 
            T.CompanyId AS [Setup_GeoDivision.CompanyId], 
            T.EntryBy AS [Setup_GeoDivision.EntryBy], 
            T.EntryDate AS [Setup_GeoDivision.EntryDate], 
            True AS _from0
        FROM Inventory360Entities.Setup_GeoDivision AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Setup_GeoPoliceStation.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView49()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_GeoPoliceStation
        [BTS_OPSModel.Store.Setup_GeoPoliceStation](T1.[Setup_GeoPoliceStation.PoliceStationId], T1.[Setup_GeoPoliceStation.DistrictId], T1.[Setup_GeoPoliceStation.PoliceStationName], T1.[Setup_GeoPoliceStation.CompanyId], T1.[Setup_GeoPoliceStation.EntryBy], T1.[Setup_GeoPoliceStation.EntryDate])
    FROM (
        SELECT 
            T.PoliceStationId AS [Setup_GeoPoliceStation.PoliceStationId], 
            T.DistrictId AS [Setup_GeoPoliceStation.DistrictId], 
            T.PoliceStationName AS [Setup_GeoPoliceStation.PoliceStationName], 
            T.CompanyId AS [Setup_GeoPoliceStation.CompanyId], 
            T.EntryBy AS [Setup_GeoPoliceStation.EntryBy], 
            T.EntryDate AS [Setup_GeoPoliceStation.EntryDate], 
            True AS _from0
        FROM Inventory360Entities.Setup_GeoPoliceStation AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Setup_GeoRegion.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView50()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_GeoRegion
        [BTS_OPSModel.Store.Setup_GeoRegion](T1.[Setup_GeoRegion.RegionId], T1.[Setup_GeoRegion.RegionName], T1.[Setup_GeoRegion.CompanyId], T1.[Setup_GeoRegion.EntryBy], T1.[Setup_GeoRegion.EntryDate])
    FROM (
        SELECT 
            T.RegionId AS [Setup_GeoRegion.RegionId], 
            T.RegionName AS [Setup_GeoRegion.RegionName], 
            T.CompanyId AS [Setup_GeoRegion.CompanyId], 
            T.EntryBy AS [Setup_GeoRegion.EntryBy], 
            T.EntryDate AS [Setup_GeoRegion.EntryDate], 
            True AS _from0
        FROM Inventory360Entities.Setup_GeoRegion AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Setup_GovtDuty.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView51()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_GovtDuty
        [BTS_OPSModel.Store.Setup_GovtDuty](T1.[Setup_GovtDuty.GovtDutyId], T1.[Setup_GovtDuty.DutyName], T1.[Setup_GovtDuty.Description], T1.[Setup_GovtDuty.DutyOrder], T1.[Setup_GovtDuty.DefaultValue], T1.[Setup_GovtDuty.AccountsId])
    FROM (
        SELECT 
            T.GovtDutyId AS [Setup_GovtDuty.GovtDutyId], 
            T.DutyName AS [Setup_GovtDuty.DutyName], 
            T.Description AS [Setup_GovtDuty.Description], 
            T.DutyOrder AS [Setup_GovtDuty.DutyOrder], 
            T.DefaultValue AS [Setup_GovtDuty.DefaultValue], 
            T.AccountsId AS [Setup_GovtDuty.AccountsId], 
            True AS _from0
        FROM Inventory360Entities.Setup_GovtDuty AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Setup_GovtDutyAdjustment.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView52()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_GovtDutyAdjustment
        [BTS_OPSModel.Store.Setup_GovtDutyAdjustment](T1.[Setup_GovtDutyAdjustment.AdjustmentId], T1.[Setup_GovtDutyAdjustment.AdjustmentName], T1.[Setup_GovtDutyAdjustment.Description], T1.[Setup_GovtDutyAdjustment.AccountsId])
    FROM (
        SELECT 
            T.AdjustmentId AS [Setup_GovtDutyAdjustment.AdjustmentId], 
            T.AdjustmentName AS [Setup_GovtDutyAdjustment.AdjustmentName], 
            T.Description AS [Setup_GovtDutyAdjustment.Description], 
            T.AccountsId AS [Setup_GovtDutyAdjustment.AccountsId], 
            True AS _from0
        FROM Inventory360Entities.Setup_GovtDutyAdjustment AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Setup_HSCode.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView53()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_HSCode
        [BTS_OPSModel.Store.Setup_HSCode](T1.[Setup_HSCode.HSCodeId], T1.[Setup_HSCode.HSCode], T1.[Setup_HSCode.Description], T1.[Setup_HSCode.DetailDescription])
    FROM (
        SELECT 
            T.HSCodeId AS [Setup_HSCode.HSCodeId], 
            T.HSCode AS [Setup_HSCode.HSCode], 
            T.Description AS [Setup_HSCode.Description], 
            T.DetailDescription AS [Setup_HSCode.DetailDescription], 
            True AS _from0
        FROM Inventory360Entities.Setup_HSCode AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Setup_Location.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView54()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_Location
        [BTS_OPSModel.Store.Setup_Location](T1.[Setup_Location.LocationId], T1.[Setup_Location.Code], T1.[Setup_Location.Name], T1.[Setup_Location.IsLoginLocation], T1.[Setup_Location.Address], T1.[Setup_Location.ContactNo], T1.[Setup_Location.InChargeId], T1.[Setup_Location.IsWareHouse], T1.[Setup_Location.MasterLocationId], T1.[Setup_Location.IsPortLocation], T1.[Setup_Location.DefaultCurrency], T1.[Setup_Location.POSPrinterWidth], T1.[Setup_Location.CompanyId], T1.[Setup_Location.EntryBy], T1.[Setup_Location.EntryDate])
    FROM (
        SELECT 
            T.LocationId AS [Setup_Location.LocationId], 
            T.Code AS [Setup_Location.Code], 
            T.Name AS [Setup_Location.Name], 
            T.IsLoginLocation AS [Setup_Location.IsLoginLocation], 
            T.Address AS [Setup_Location.Address], 
            T.ContactNo AS [Setup_Location.ContactNo], 
            T.InChargeId AS [Setup_Location.InChargeId], 
            T.IsWareHouse AS [Setup_Location.IsWareHouse], 
            T.MasterLocationId AS [Setup_Location.MasterLocationId], 
            T.IsPortLocation AS [Setup_Location.IsPortLocation], 
            T.DefaultCurrency AS [Setup_Location.DefaultCurrency], 
            T.POSPrinterWidth AS [Setup_Location.POSPrinterWidth], 
            T.CompanyId AS [Setup_Location.CompanyId], 
            T.EntryBy AS [Setup_Location.EntryBy], 
            T.EntryDate AS [Setup_Location.EntryDate], 
            True AS _from0
        FROM Inventory360Entities.Setup_Location AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Setup_Measurement.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView55()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_Measurement
        [BTS_OPSModel.Store.Setup_Measurement](T1.[Setup_Measurement.MeasurementId], T1.[Setup_Measurement.Code], T1.[Setup_Measurement.Name], T1.[Setup_Measurement.LengthValue], T1.[Setup_Measurement.WidthValue], T1.[Setup_Measurement.HeightValue], T1.[Setup_Measurement.CompanyId], T1.[Setup_Measurement.EntryBy], T1.[Setup_Measurement.EntryDate])
    FROM (
        SELECT 
            T.MeasurementId AS [Setup_Measurement.MeasurementId], 
            T.Code AS [Setup_Measurement.Code], 
            T.Name AS [Setup_Measurement.Name], 
            T.LengthValue AS [Setup_Measurement.LengthValue], 
            T.WidthValue AS [Setup_Measurement.WidthValue], 
            T.HeightValue AS [Setup_Measurement.HeightValue], 
            T.CompanyId AS [Setup_Measurement.CompanyId], 
            T.EntryBy AS [Setup_Measurement.EntryBy], 
            T.EntryDate AS [Setup_Measurement.EntryDate], 
            True AS _from0
        FROM Inventory360Entities.Setup_Measurement AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Setup_Port.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView56()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_Port
        [BTS_OPSModel.Store.Setup_Port](T1.[Setup_Port.PortId], T1.[Setup_Port.PortCode], T1.[Setup_Port.PortName], T1.[Setup_Port.Address], T1.[Setup_Port.ShipmentMode], T1.[Setup_Port.CompanyId], T1.[Setup_Port.EntryBy], T1.[Setup_Port.EntryDate], T1.[Setup_Port.EditedBy], T1.[Setup_Port.EditedDate])
    FROM (
        SELECT 
            T.PortId AS [Setup_Port.PortId], 
            T.PortCode AS [Setup_Port.PortCode], 
            T.PortName AS [Setup_Port.PortName], 
            T.Address AS [Setup_Port.Address], 
            T.ShipmentMode AS [Setup_Port.ShipmentMode], 
            T.CompanyId AS [Setup_Port.CompanyId], 
            T.EntryBy AS [Setup_Port.EntryBy], 
            T.EntryDate AS [Setup_Port.EntryDate], 
            T.EditedBy AS [Setup_Port.EditedBy], 
            T.EditedDate AS [Setup_Port.EditedDate], 
            True AS _from0
        FROM Inventory360Entities.Setup_Port AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Setup_Price.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView57()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_Price
        [BTS_OPSModel.Store.Setup_Price](T1.[Setup_Price.PriceId], T1.[Setup_Price.PriceTypeId], T1.[Setup_Price.ProductId], T1.[Setup_Price.ProductDimensionId], T1.[Setup_Price.UnitTypeId], T1.[Setup_Price.SelectedCurrency], T1.[Setup_Price.Price], T1.[Setup_Price.Price1Rate], T1.[Setup_Price.Price1], T1.[Setup_Price.Price2Rate], T1.[Setup_Price.Price2], T1.[Setup_Price.CompanyId], T1.[Setup_Price.EntryBy], T1.[Setup_Price.EntryDate])
    FROM (
        SELECT 
            T.PriceId AS [Setup_Price.PriceId], 
            T.PriceTypeId AS [Setup_Price.PriceTypeId], 
            T.ProductId AS [Setup_Price.ProductId], 
            T.ProductDimensionId AS [Setup_Price.ProductDimensionId], 
            T.UnitTypeId AS [Setup_Price.UnitTypeId], 
            T.SelectedCurrency AS [Setup_Price.SelectedCurrency], 
            T.Price AS [Setup_Price.Price], 
            T.Price1Rate AS [Setup_Price.Price1Rate], 
            T.Price1 AS [Setup_Price.Price1], 
            T.Price2Rate AS [Setup_Price.Price2Rate], 
            T.Price2 AS [Setup_Price.Price2], 
            T.CompanyId AS [Setup_Price.CompanyId], 
            T.EntryBy AS [Setup_Price.EntryBy], 
            T.EntryDate AS [Setup_Price.EntryDate], 
            True AS _from0
        FROM Inventory360Entities.Setup_Price AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Setup_PriceDetail.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView58()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_PriceDetail
        [BTS_OPSModel.Store.Setup_PriceDetail](T1.[Setup_PriceDetail.PriceDetailId], T1.[Setup_PriceDetail.PriceId], T1.[Setup_PriceDetail.Price], T1.[Setup_PriceDetail.Price1Rate], T1.[Setup_PriceDetail.Price1], T1.[Setup_PriceDetail.Price2Rate], T1.[Setup_PriceDetail.Price2], T1.[Setup_PriceDetail.LowerRangeQty], T1.[Setup_PriceDetail.UpperRangeQty], T1.[Setup_PriceDetail.EntryBy], T1.[Setup_PriceDetail.EntryDate])
    FROM (
        SELECT 
            T.PriceDetailId AS [Setup_PriceDetail.PriceDetailId], 
            T.PriceId AS [Setup_PriceDetail.PriceId], 
            T.Price AS [Setup_PriceDetail.Price], 
            T.Price1Rate AS [Setup_PriceDetail.Price1Rate], 
            T.Price1 AS [Setup_PriceDetail.Price1], 
            T.Price2Rate AS [Setup_PriceDetail.Price2Rate], 
            T.Price2 AS [Setup_PriceDetail.Price2], 
            T.LowerRangeQty AS [Setup_PriceDetail.LowerRangeQty], 
            T.UpperRangeQty AS [Setup_PriceDetail.UpperRangeQty], 
            T.EntryBy AS [Setup_PriceDetail.EntryBy], 
            T.EntryDate AS [Setup_PriceDetail.EntryDate], 
            True AS _from0
        FROM Inventory360Entities.Setup_PriceDetail AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Setup_PriceType.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView59()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_PriceType
        [BTS_OPSModel.Store.Setup_PriceType](T1.[Setup_PriceType.PriceTypeId], T1.[Setup_PriceType.Code], T1.[Setup_PriceType.Name], T1.[Setup_PriceType.IsDetailPrice], T1.[Setup_PriceType.SelectedCurrency], T1.[Setup_PriceType.Currency1Rate], T1.[Setup_PriceType.Currency2Rate], T1.[Setup_PriceType.RangeType], T1.[Setup_PriceType.LowerLimit], T1.[Setup_PriceType.LowerLimit1], T1.[Setup_PriceType.LowerLimit2], T1.[Setup_PriceType.UpperLimit], T1.[Setup_PriceType.UpperLimit1], T1.[Setup_PriceType.UpperLimit2], T1.[Setup_PriceType.CompanyId], T1.[Setup_PriceType.EntryBy], T1.[Setup_PriceType.EntryDate])
    FROM (
        SELECT 
            T.PriceTypeId AS [Setup_PriceType.PriceTypeId], 
            T.Code AS [Setup_PriceType.Code], 
            T.Name AS [Setup_PriceType.Name], 
            T.IsDetailPrice AS [Setup_PriceType.IsDetailPrice], 
            T.SelectedCurrency AS [Setup_PriceType.SelectedCurrency], 
            T.Currency1Rate AS [Setup_PriceType.Currency1Rate], 
            T.Currency2Rate AS [Setup_PriceType.Currency2Rate], 
            T.RangeType AS [Setup_PriceType.RangeType], 
            T.LowerLimit AS [Setup_PriceType.LowerLimit], 
            T.LowerLimit1 AS [Setup_PriceType.LowerLimit1], 
            T.LowerLimit2 AS [Setup_PriceType.LowerLimit2], 
            T.UpperLimit AS [Setup_PriceType.UpperLimit], 
            T.UpperLimit1 AS [Setup_PriceType.UpperLimit1], 
            T.UpperLimit2 AS [Setup_PriceType.UpperLimit2], 
            T.CompanyId AS [Setup_PriceType.CompanyId], 
            T.EntryBy AS [Setup_PriceType.EntryBy], 
            T.EntryDate AS [Setup_PriceType.EntryDate], 
            True AS _from0
        FROM Inventory360Entities.Setup_PriceType AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Setup_Problem.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView60()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_Problem
        [BTS_OPSModel.Store.Setup_Problem](T1.[Setup_Problem.ProblemId], T1.[Setup_Problem.OperationalEventId], T1.[Setup_Problem.Name], T1.[Setup_Problem.CompanyId], T1.[Setup_Problem.EntryBy], T1.[Setup_Problem.EntryDate], T1.[Setup_Problem.EditedBy], T1.[Setup_Problem.EditedDate])
    FROM (
        SELECT 
            T.ProblemId AS [Setup_Problem.ProblemId], 
            T.OperationalEventId AS [Setup_Problem.OperationalEventId], 
            T.Name AS [Setup_Problem.Name], 
            T.CompanyId AS [Setup_Problem.CompanyId], 
            T.EntryBy AS [Setup_Problem.EntryBy], 
            T.EntryDate AS [Setup_Problem.EntryDate], 
            T.EditedBy AS [Setup_Problem.EditedBy], 
            T.EditedDate AS [Setup_Problem.EditedDate], 
            True AS _from0
        FROM Inventory360Entities.Setup_Problem AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Setup_Product.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView61()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_Product
        [BTS_OPSModel.Store.Setup_Product](T1.[Setup_Product.ProductId], T1.[Setup_Product.Code], T1.[Setup_Product.ProductGroupId], T1.[Setup_Product.ProductSubGroupId], T1.[Setup_Product.ProductCategoryId], T1.[Setup_Product.BrandId], T1.[Setup_Product.Model], T1.[Setup_Product.Name], T1.[Setup_Product.ShortSpecification], T1.[Setup_Product.WebName], T1.[Setup_Product.SerialAvailable], T1.[Setup_Product.IsActive], T1.[Setup_Product.PrimaryUnitTypeId], T1.[Setup_Product.SecondaryUnitTypeId], T1.[Setup_Product.TertiaryUnitTypeId], T1.[Setup_Product.SecondaryConversionRatio], T1.[Setup_Product.TertiaryConversionRatio], T1.[Setup_Product.ReorderPoint], T1.[Setup_Product.MinStockQuantity], T1.[Setup_Product.ReturnAllowedDays], T1.[Setup_Product.CreditNoteAllowedDays], T1.[Setup_Product.DebitNoteAllowedDays], T1.[Setup_Product.IsStockMaintain], T1.[Setup_Product.IsSaleable], T1.[Setup_Product.ProductType], T1.[Setup_Product.ProductCondition], T1.[Setup_Product.AccountsId], T1.[Setup_Product.IsWarrantyAvailable], T1.[Setup_Product.IsLifeTimeWarranty], T1.[Setup_Product.WarrantyDays], T1.[Setup_Product.AdditionalWarrantyDays], T1.[Setup_Product.IsServiceWarranty], T1.[Setup_Product.ServiceWarrantyDays], T1.[Setup_Product.Height], T1.[Setup_Product.Width], T1.[Setup_Product.Thickness], T1.[Setup_Product.CapacityId], T1.[Setup_Product.Capacity], T1.[Setup_Product.OriginCountryId], T1.[Setup_Product.HSCodeId], T1.[Setup_Product.CompanyId], T1.[Setup_Product.EntryBy], T1.[Setup_Product.EntryDate], T1.[Setup_Product.EditedBy], T1.[Setup_Product.EditedDate])
    FROM (
        SELECT 
            T.ProductId AS [Setup_Product.ProductId], 
            T.Code AS [Setup_Product.Code], 
            T.ProductGroupId AS [Setup_Product.ProductGroupId], 
            T.ProductSubGroupId AS [Setup_Product.ProductSubGroupId], 
            T.ProductCategoryId AS [Setup_Product.ProductCategoryId], 
            T.BrandId AS [Setup_Product.BrandId], 
            T.Model AS [Setup_Product.Model], 
            T.Name AS [Setup_Product.Name], 
            T.ShortSpecification AS [Setup_Product.ShortSpecification], 
            T.WebName AS [Setup_Product.WebName], 
            T.SerialAvailable AS [Setup_Product.SerialAvailable], 
            T.IsActive AS [Setup_Product.IsActive], 
            T.PrimaryUnitTypeId AS [Setup_Product.PrimaryUnitTypeId], 
            T.SecondaryUnitTypeId AS [Setup_Product.SecondaryUnitTypeId], 
            T.TertiaryUnitTypeId AS [Setup_Product.TertiaryUnitTypeId], 
            T.SecondaryConversionRatio AS [Setup_Product.SecondaryConversionRatio], 
            T.TertiaryConversionRatio AS [Setup_Product.TertiaryConversionRatio], 
            T.ReorderPoint AS [Setup_Product.ReorderPoint], 
            T.MinStockQuantity AS [Setup_Product.MinStockQuantity], 
            T.ReturnAllowedDays AS [Setup_Product.ReturnAllowedDays], 
            T.CreditNoteAllowedDays AS [Setup_Product.CreditNoteAllowedDays], 
            T.DebitNoteAllowedDays AS [Setup_Product.DebitNoteAllowedDays], 
            T.IsStockMaintain AS [Setup_Product.IsStockMaintain], 
            T.IsSaleable AS [Setup_Product.IsSaleable], 
            T.ProductType AS [Setup_Product.ProductType], 
            T.ProductCondition AS [Setup_Product.ProductCondition], 
            T.AccountsId AS [Setup_Product.AccountsId], 
            T.IsWarrantyAvailable AS [Setup_Product.IsWarrantyAvailable], 
            T.IsLifeTimeWarranty AS [Setup_Product.IsLifeTimeWarranty], 
            T.WarrantyDays AS [Setup_Product.WarrantyDays], 
            T.AdditionalWarrantyDays AS [Setup_Product.AdditionalWarrantyDays], 
            T.IsServiceWarranty AS [Setup_Product.IsServiceWarranty], 
            T.ServiceWarrantyDays AS [Setup_Product.ServiceWarrantyDays], 
            T.Height AS [Setup_Product.Height], 
            T.Width AS [Setup_Product.Width], 
            T.Thickness AS [Setup_Product.Thickness], 
            T.CapacityId AS [Setup_Product.CapacityId], 
            T.Capacity AS [Setup_Product.Capacity], 
            T.OriginCountryId AS [Setup_Product.OriginCountryId], 
            T.HSCodeId AS [Setup_Product.HSCodeId], 
            T.CompanyId AS [Setup_Product.CompanyId], 
            T.EntryBy AS [Setup_Product.EntryBy], 
            T.EntryDate AS [Setup_Product.EntryDate], 
            T.EditedBy AS [Setup_Product.EditedBy], 
            T.EditedDate AS [Setup_Product.EditedDate], 
            True AS _from0
        FROM Inventory360Entities.Setup_Product AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Setup_ProductCategory.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView62()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_ProductCategory
        [BTS_OPSModel.Store.Setup_ProductCategory](T1.[Setup_ProductCategory.ProductCategoryId], T1.[Setup_ProductCategory.Code], T1.[Setup_ProductCategory.Name], T1.[Setup_ProductCategory.ProductGroupId], T1.[Setup_ProductCategory.CompanyId], T1.[Setup_ProductCategory.EntryBy], T1.[Setup_ProductCategory.EntryDate], T1.[Setup_ProductCategory.EditedBy], T1.[Setup_ProductCategory.EditedDate])
    FROM (
        SELECT 
            T.ProductCategoryId AS [Setup_ProductCategory.ProductCategoryId], 
            T.Code AS [Setup_ProductCategory.Code], 
            T.Name AS [Setup_ProductCategory.Name], 
            T.ProductGroupId AS [Setup_ProductCategory.ProductGroupId], 
            T.CompanyId AS [Setup_ProductCategory.CompanyId], 
            T.EntryBy AS [Setup_ProductCategory.EntryBy], 
            T.EntryDate AS [Setup_ProductCategory.EntryDate], 
            T.EditedBy AS [Setup_ProductCategory.EditedBy], 
            T.EditedDate AS [Setup_ProductCategory.EditedDate], 
            True AS _from0
        FROM Inventory360Entities.Setup_ProductCategory AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Setup_ProductDimension.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView63()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_ProductDimension
        [BTS_OPSModel.Store.Setup_ProductDimension](T1.[Setup_ProductDimension.ProductDimensionId], T1.[Setup_ProductDimension.Code], T1.[Setup_ProductDimension.ProductId], T1.[Setup_ProductDimension.MeasurementId], T1.[Setup_ProductDimension.SizeId], T1.[Setup_ProductDimension.StyleId], T1.[Setup_ProductDimension.ColorId], T1.[Setup_ProductDimension.SKUCode], T1.[Setup_ProductDimension.EntryBy], T1.[Setup_ProductDimension.EntryDate])
    FROM (
        SELECT 
            T.ProductDimensionId AS [Setup_ProductDimension.ProductDimensionId], 
            T.Code AS [Setup_ProductDimension.Code], 
            T.ProductId AS [Setup_ProductDimension.ProductId], 
            T.MeasurementId AS [Setup_ProductDimension.MeasurementId], 
            T.SizeId AS [Setup_ProductDimension.SizeId], 
            T.StyleId AS [Setup_ProductDimension.StyleId], 
            T.ColorId AS [Setup_ProductDimension.ColorId], 
            T.SKUCode AS [Setup_ProductDimension.SKUCode], 
            T.EntryBy AS [Setup_ProductDimension.EntryBy], 
            T.EntryDate AS [Setup_ProductDimension.EntryDate], 
            True AS _from0
        FROM Inventory360Entities.Setup_ProductDimension AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Setup_ProductGroup.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView64()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_ProductGroup
        [BTS_OPSModel.Store.Setup_ProductGroup](T1.[Setup_ProductGroup.ProductGroupId], T1.[Setup_ProductGroup.Code], T1.[Setup_ProductGroup.Name], T1.[Setup_ProductGroup.CompanyId], T1.[Setup_ProductGroup.EntryBy], T1.[Setup_ProductGroup.EntryDate], T1.[Setup_ProductGroup.EditedBy], T1.[Setup_ProductGroup.EditedDate])
    FROM (
        SELECT 
            T.ProductGroupId AS [Setup_ProductGroup.ProductGroupId], 
            T.Code AS [Setup_ProductGroup.Code], 
            T.Name AS [Setup_ProductGroup.Name], 
            T.CompanyId AS [Setup_ProductGroup.CompanyId], 
            T.EntryBy AS [Setup_ProductGroup.EntryBy], 
            T.EntryDate AS [Setup_ProductGroup.EntryDate], 
            T.EditedBy AS [Setup_ProductGroup.EditedBy], 
            T.EditedDate AS [Setup_ProductGroup.EditedDate], 
            True AS _from0
        FROM Inventory360Entities.Setup_ProductGroup AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Setup_ProductSubGroup.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView65()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_ProductSubGroup
        [BTS_OPSModel.Store.Setup_ProductSubGroup](T1.[Setup_ProductSubGroup.ProductSubGroupId], T1.[Setup_ProductSubGroup.Code], T1.[Setup_ProductSubGroup.Name], T1.[Setup_ProductSubGroup.ProductGroupId], T1.[Setup_ProductSubGroup.CompanyId], T1.[Setup_ProductSubGroup.EntryBy], T1.[Setup_ProductSubGroup.EntryDate], T1.[Setup_ProductSubGroup.EditedBy], T1.[Setup_ProductSubGroup.EditedDate])
    FROM (
        SELECT 
            T.ProductSubGroupId AS [Setup_ProductSubGroup.ProductSubGroupId], 
            T.Code AS [Setup_ProductSubGroup.Code], 
            T.Name AS [Setup_ProductSubGroup.Name], 
            T.ProductGroupId AS [Setup_ProductSubGroup.ProductGroupId], 
            T.CompanyId AS [Setup_ProductSubGroup.CompanyId], 
            T.EntryBy AS [Setup_ProductSubGroup.EntryBy], 
            T.EntryDate AS [Setup_ProductSubGroup.EntryDate], 
            T.EditedBy AS [Setup_ProductSubGroup.EditedBy], 
            T.EditedDate AS [Setup_ProductSubGroup.EditedDate], 
            True AS _from0
        FROM Inventory360Entities.Setup_ProductSubGroup AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Setup_Profession.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView66()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_Profession
        [BTS_OPSModel.Store.Setup_Profession](T1.[Setup_Profession.ProfessionId], T1.[Setup_Profession.Name], T1.[Setup_Profession.CompanyId], T1.[Setup_Profession.EntryBy], T1.[Setup_Profession.EntryDate])
    FROM (
        SELECT 
            T.ProfessionId AS [Setup_Profession.ProfessionId], 
            T.Name AS [Setup_Profession.Name], 
            T.CompanyId AS [Setup_Profession.CompanyId], 
            T.EntryBy AS [Setup_Profession.EntryBy], 
            T.EntryDate AS [Setup_Profession.EntryDate], 
            True AS _from0
        FROM Inventory360Entities.Setup_Profession AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Setup_Project.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView67()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_Project
        [BTS_OPSModel.Store.Setup_Project](T1.[Setup_Project.ProjectId], T1.[Setup_Project.Name], T1.[Setup_Project.Description], T1.[Setup_Project.StartDate], T1.[Setup_Project.EndDate], T1.[Setup_Project.IsActive], T1.[Setup_Project.CompanyId], T1.[Setup_Project.EntryBy])
    FROM (
        SELECT 
            T.ProjectId AS [Setup_Project.ProjectId], 
            T.Name AS [Setup_Project.Name], 
            T.Description AS [Setup_Project.Description], 
            T.StartDate AS [Setup_Project.StartDate], 
            T.EndDate AS [Setup_Project.EndDate], 
            T.IsActive AS [Setup_Project.IsActive], 
            T.CompanyId AS [Setup_Project.CompanyId], 
            T.EntryBy AS [Setup_Project.EntryBy], 
            True AS _from0
        FROM Inventory360Entities.Setup_Project AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Setup_RelatedProduct.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView68()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_RelatedProduct
        [BTS_OPSModel.Store.Setup_RelatedProduct](T1.[Setup_RelatedProduct.RelatedProductId], T1.[Setup_RelatedProduct.ProductId], T1.[Setup_RelatedProduct.RelatedOrSpareProductId], T1.[Setup_RelatedProduct.Type], T1.[Setup_RelatedProduct.EntryBy], T1.[Setup_RelatedProduct.EntryDate])
    FROM (
        SELECT 
            T.RelatedProductId AS [Setup_RelatedProduct.RelatedProductId], 
            T.ProductId AS [Setup_RelatedProduct.ProductId], 
            T.RelatedOrSpareProductId AS [Setup_RelatedProduct.RelatedOrSpareProductId], 
            T.Type AS [Setup_RelatedProduct.Type], 
            T.EntryBy AS [Setup_RelatedProduct.EntryBy], 
            T.EntryDate AS [Setup_RelatedProduct.EntryDate], 
            True AS _from0
        FROM Inventory360Entities.Setup_RelatedProduct AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Setup_Size.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView69()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_Size
        [BTS_OPSModel.Store.Setup_Size](T1.[Setup_Size.SizeId], T1.[Setup_Size.Code], T1.[Setup_Size.Name], T1.[Setup_Size.CompanyId], T1.[Setup_Size.EntryBy], T1.[Setup_Size.EntryDate])
    FROM (
        SELECT 
            T.SizeId AS [Setup_Size.SizeId], 
            T.Code AS [Setup_Size.Code], 
            T.Name AS [Setup_Size.Name], 
            T.CompanyId AS [Setup_Size.CompanyId], 
            T.EntryBy AS [Setup_Size.EntryBy], 
            T.EntryDate AS [Setup_Size.EntryDate], 
            True AS _from0
        FROM Inventory360Entities.Setup_Size AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Setup_Style.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView70()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_Style
        [BTS_OPSModel.Store.Setup_Style](T1.[Setup_Style.StyleId], T1.[Setup_Style.Code], T1.[Setup_Style.Name], T1.[Setup_Style.CompanyId], T1.[Setup_Style.EntryBy], T1.[Setup_Style.EntryDate])
    FROM (
        SELECT 
            T.StyleId AS [Setup_Style.StyleId], 
            T.Code AS [Setup_Style.Code], 
            T.Name AS [Setup_Style.Name], 
            T.CompanyId AS [Setup_Style.CompanyId], 
            T.EntryBy AS [Setup_Style.EntryBy], 
            T.EntryDate AS [Setup_Style.EntryDate], 
            True AS _from0
        FROM Inventory360Entities.Setup_Style AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Setup_SubFeatures.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView71()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_SubFeatures
        [BTS_OPSModel.Store.Setup_SubFeatures](T1.[Setup_SubFeatures.SubFeatureId], T1.[Setup_SubFeatures.FeatureId], T1.[Setup_SubFeatures.SubFeatureName], T1.[Setup_SubFeatures.DefaultValue], T1.[Setup_SubFeatures.Group], T1.[Setup_SubFeatures.Description])
    FROM (
        SELECT 
            T.SubFeatureId AS [Setup_SubFeatures.SubFeatureId], 
            T.FeatureId AS [Setup_SubFeatures.FeatureId], 
            T.SubFeatureName AS [Setup_SubFeatures.SubFeatureName], 
            T.DefaultValue AS [Setup_SubFeatures.DefaultValue], 
            T.[Group] AS [Setup_SubFeatures.Group], 
            T.Description AS [Setup_SubFeatures.Description], 
            True AS _from0
        FROM Inventory360Entities.Setup_SubFeatures AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Setup_Supplier.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView72()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_Supplier
        [BTS_OPSModel.Store.Setup_Supplier](T1.[Setup_Supplier.SupplierId], T1.[Setup_Supplier.SupplierGroupId], T1.[Setup_Supplier.Code], T1.[Setup_Supplier.Name], T1.[Setup_Supplier.Address], T1.[Setup_Supplier.Phone], T1.[Setup_Supplier.Fax], T1.[Setup_Supplier.Email], T1.[Setup_Supplier.URL], T1.[Setup_Supplier.ContactPerson], T1.[Setup_Supplier.ContactPersonMobile], T1.[Setup_Supplier.ProfessionId], T1.[Setup_Supplier.Designation], T1.[Setup_Supplier.BankId], T1.[Setup_Supplier.BankAccountName], T1.[Setup_Supplier.BankAccountNumber], T1.[Setup_Supplier.AccountsId], T1.[Setup_Supplier.SelectedCurrency], T1.[Setup_Supplier.Currency1Rate], T1.[Setup_Supplier.Currency2Rate], T1.[Setup_Supplier.OpeningDate], T1.[Setup_Supplier.OpeningBalance], T1.[Setup_Supplier.OpeningBalance1], T1.[Setup_Supplier.OpeningBalance2], T1.[Setup_Supplier.PaidAmount], T1.[Setup_Supplier.Paid1Amount], T1.[Setup_Supplier.Paid2Amount], T1.[Setup_Supplier.IsActive], T1.[Setup_Supplier.CompanyId], T1.[Setup_Supplier.LocationId], T1.[Setup_Supplier.EntryBy], T1.[Setup_Supplier.EntryDate], T1.[Setup_Supplier.EditedBy], T1.[Setup_Supplier.EditedDate])
    FROM (
        SELECT 
            T.SupplierId AS [Setup_Supplier.SupplierId], 
            T.SupplierGroupId AS [Setup_Supplier.SupplierGroupId], 
            T.Code AS [Setup_Supplier.Code], 
            T.Name AS [Setup_Supplier.Name], 
            T.Address AS [Setup_Supplier.Address], 
            T.Phone AS [Setup_Supplier.Phone], 
            T.Fax AS [Setup_Supplier.Fax], 
            T.Email AS [Setup_Supplier.Email], 
            T.URL AS [Setup_Supplier.URL], 
            T.ContactPerson AS [Setup_Supplier.ContactPerson], 
            T.ContactPersonMobile AS [Setup_Supplier.ContactPersonMobile], 
            T.ProfessionId AS [Setup_Supplier.ProfessionId], 
            T.Designation AS [Setup_Supplier.Designation], 
            T.BankId AS [Setup_Supplier.BankId], 
            T.BankAccountName AS [Setup_Supplier.BankAccountName], 
            T.BankAccountNumber AS [Setup_Supplier.BankAccountNumber], 
            T.AccountsId AS [Setup_Supplier.AccountsId], 
            T.SelectedCurrency AS [Setup_Supplier.SelectedCurrency], 
            T.Currency1Rate AS [Setup_Supplier.Currency1Rate], 
            T.Currency2Rate AS [Setup_Supplier.Currency2Rate], 
            T.OpeningDate AS [Setup_Supplier.OpeningDate], 
            T.OpeningBalance AS [Setup_Supplier.OpeningBalance], 
            T.OpeningBalance1 AS [Setup_Supplier.OpeningBalance1], 
            T.OpeningBalance2 AS [Setup_Supplier.OpeningBalance2], 
            T.PaidAmount AS [Setup_Supplier.PaidAmount], 
            T.Paid1Amount AS [Setup_Supplier.Paid1Amount], 
            T.Paid2Amount AS [Setup_Supplier.Paid2Amount], 
            T.IsActive AS [Setup_Supplier.IsActive], 
            T.CompanyId AS [Setup_Supplier.CompanyId], 
            T.LocationId AS [Setup_Supplier.LocationId], 
            T.EntryBy AS [Setup_Supplier.EntryBy], 
            T.EntryDate AS [Setup_Supplier.EntryDate], 
            T.EditedBy AS [Setup_Supplier.EditedBy], 
            T.EditedDate AS [Setup_Supplier.EditedDate], 
            True AS _from0
        FROM Inventory360Entities.Setup_Supplier AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Setup_SupplierGroup.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView73()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_SupplierGroup
        [BTS_OPSModel.Store.Setup_SupplierGroup](T1.[Setup_SupplierGroup.SupplierGroupId], T1.[Setup_SupplierGroup.Name], T1.[Setup_SupplierGroup.CompanyId], T1.[Setup_SupplierGroup.EntryBy], T1.[Setup_SupplierGroup.EntryDate])
    FROM (
        SELECT 
            T.SupplierGroupId AS [Setup_SupplierGroup.SupplierGroupId], 
            T.Name AS [Setup_SupplierGroup.Name], 
            T.CompanyId AS [Setup_SupplierGroup.CompanyId], 
            T.EntryBy AS [Setup_SupplierGroup.EntryBy], 
            T.EntryDate AS [Setup_SupplierGroup.EntryDate], 
            True AS _from0
        FROM Inventory360Entities.Setup_SupplierGroup AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Setup_TemplateHeader.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView74()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_TemplateHeader
        [BTS_OPSModel.Store.Setup_TemplateHeader](T1.[Setup_TemplateHeader.TemplateHeaderId], T1.[Setup_TemplateHeader.Name], T1.[Setup_TemplateHeader.Description], T1.[Setup_TemplateHeader.CompanyId], T1.[Setup_TemplateHeader.EntryBy], T1.[Setup_TemplateHeader.EntryDate])
    FROM (
        SELECT 
            T.TemplateHeaderId AS [Setup_TemplateHeader.TemplateHeaderId], 
            T.Name AS [Setup_TemplateHeader.Name], 
            T.Description AS [Setup_TemplateHeader.Description], 
            T.CompanyId AS [Setup_TemplateHeader.CompanyId], 
            T.EntryBy AS [Setup_TemplateHeader.EntryBy], 
            T.EntryDate AS [Setup_TemplateHeader.EntryDate], 
            True AS _from0
        FROM Inventory360Entities.Setup_TemplateHeader AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Setup_TermsAndConditions.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView75()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_TermsAndConditions
        [BTS_OPSModel.Store.Setup_TermsAndConditions](T1.[Setup_TermsAndConditions.TermsAndConditionsId], T1.[Setup_TermsAndConditions.OperationalEventId], T1.[Setup_TermsAndConditions.TemplateHeaderId], T1.[Setup_TermsAndConditions.Detail], T1.[Setup_TermsAndConditions.CompanyId], T1.[Setup_TermsAndConditions.EntryBy], T1.[Setup_TermsAndConditions.EntryDate])
    FROM (
        SELECT 
            T.TermsAndConditionsId AS [Setup_TermsAndConditions.TermsAndConditionsId], 
            T.OperationalEventId AS [Setup_TermsAndConditions.OperationalEventId], 
            T.TemplateHeaderId AS [Setup_TermsAndConditions.TemplateHeaderId], 
            T.Detail AS [Setup_TermsAndConditions.Detail], 
            T.CompanyId AS [Setup_TermsAndConditions.CompanyId], 
            T.EntryBy AS [Setup_TermsAndConditions.EntryBy], 
            T.EntryDate AS [Setup_TermsAndConditions.EntryDate], 
            True AS _from0
        FROM Inventory360Entities.Setup_TermsAndConditions AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Setup_Transport.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView76()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_Transport
        [BTS_OPSModel.Store.Setup_Transport](T1.[Setup_Transport.TransportId], T1.[Setup_Transport.Name], T1.[Setup_Transport.CompanyId], T1.[Setup_Transport.EntryBy], T1.[Setup_Transport.EntryDate])
    FROM (
        SELECT 
            T.TransportId AS [Setup_Transport.TransportId], 
            T.Name AS [Setup_Transport.Name], 
            T.CompanyId AS [Setup_Transport.CompanyId], 
            T.EntryBy AS [Setup_Transport.EntryBy], 
            T.EntryDate AS [Setup_Transport.EntryDate], 
            True AS _from0
        FROM Inventory360Entities.Setup_Transport AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Setup_TransportType.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView77()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_TransportType
        [BTS_OPSModel.Store.Setup_TransportType](T1.[Setup_TransportType.TransportTypeId], T1.[Setup_TransportType.Name], T1.[Setup_TransportType.CompanyId], T1.[Setup_TransportType.EntryBy], T1.[Setup_TransportType.EntryDate])
    FROM (
        SELECT 
            T.TransportTypeId AS [Setup_TransportType.TransportTypeId], 
            T.Name AS [Setup_TransportType.Name], 
            T.CompanyId AS [Setup_TransportType.CompanyId], 
            T.EntryBy AS [Setup_TransportType.EntryBy], 
            T.EntryDate AS [Setup_TransportType.EntryDate], 
            True AS _from0
        FROM Inventory360Entities.Setup_TransportType AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Setup_UnitType.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView78()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_UnitType
        [BTS_OPSModel.Store.Setup_UnitType](T1.[Setup_UnitType.UnitTypeId], T1.[Setup_UnitType.Code], T1.[Setup_UnitType.Name], T1.[Setup_UnitType.CompanyId], T1.[Setup_UnitType.EntryBy], T1.[Setup_UnitType.EntryDate])
    FROM (
        SELECT 
            T.UnitTypeId AS [Setup_UnitType.UnitTypeId], 
            T.Code AS [Setup_UnitType.Code], 
            T.Name AS [Setup_UnitType.Name], 
            T.CompanyId AS [Setup_UnitType.CompanyId], 
            T.EntryBy AS [Setup_UnitType.EntryBy], 
            T.EntryDate AS [Setup_UnitType.EntryDate], 
            True AS _from0
        FROM Inventory360Entities.Setup_UnitType AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Stock_BadStock.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView79()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Stock_BadStock
        [BTS_OPSModel.Store.Stock_BadStock](T1.[Stock_BadStock.BadStockId], T1.[Stock_BadStock.ProductId], T1.[Stock_BadStock.ProductDimensionId], T1.[Stock_BadStock.UnitTypeId], T1.[Stock_BadStock.Quantity], T1.[Stock_BadStock.Cost], T1.[Stock_BadStock.Cost1], T1.[Stock_BadStock.Cost2], T1.[Stock_BadStock.ReferenceNo], T1.[Stock_BadStock.ReferenceDate], T1.[Stock_BadStock.GoodsReceiveId], T1.[Stock_BadStock.ImportedStockInId], T1.[Stock_BadStock.SupplierId], T1.[Stock_BadStock.LocationId], T1.[Stock_BadStock.WareHouseId], T1.[Stock_BadStock.CompanyId], T1.[Stock_BadStock.EntryDate])
    FROM (
        SELECT 
            T.BadStockId AS [Stock_BadStock.BadStockId], 
            T.ProductId AS [Stock_BadStock.ProductId], 
            T.ProductDimensionId AS [Stock_BadStock.ProductDimensionId], 
            T.UnitTypeId AS [Stock_BadStock.UnitTypeId], 
            T.Quantity AS [Stock_BadStock.Quantity], 
            T.Cost AS [Stock_BadStock.Cost], 
            T.Cost1 AS [Stock_BadStock.Cost1], 
            T.Cost2 AS [Stock_BadStock.Cost2], 
            T.ReferenceNo AS [Stock_BadStock.ReferenceNo], 
            T.ReferenceDate AS [Stock_BadStock.ReferenceDate], 
            T.GoodsReceiveId AS [Stock_BadStock.GoodsReceiveId], 
            T.ImportedStockInId AS [Stock_BadStock.ImportedStockInId], 
            T.SupplierId AS [Stock_BadStock.SupplierId], 
            T.LocationId AS [Stock_BadStock.LocationId], 
            T.WareHouseId AS [Stock_BadStock.WareHouseId], 
            T.CompanyId AS [Stock_BadStock.CompanyId], 
            T.EntryDate AS [Stock_BadStock.EntryDate], 
            True AS _from0
        FROM Inventory360Entities.Stock_BadStock AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Stock_BadStockSerial.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView80()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Stock_BadStockSerial
        [BTS_OPSModel.Store.Stock_BadStockSerial](T1.[Stock_BadStockSerial.BadStockSerialId], T1.[Stock_BadStockSerial.BadStockId], T1.[Stock_BadStockSerial.Serial], T1.[Stock_BadStockSerial.AdditionalSerial])
    FROM (
        SELECT 
            T.BadStockSerialId AS [Stock_BadStockSerial.BadStockSerialId], 
            T.BadStockId AS [Stock_BadStockSerial.BadStockId], 
            T.Serial AS [Stock_BadStockSerial.Serial], 
            T.AdditionalSerial AS [Stock_BadStockSerial.AdditionalSerial], 
            True AS _from0
        FROM Inventory360Entities.Stock_BadStockSerial AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Stock_CurrentStock.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView81()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Stock_CurrentStock
        [BTS_OPSModel.Store.Stock_CurrentStock](T1.[Stock_CurrentStock.CurrentStockId], T1.[Stock_CurrentStock.ProductId], T1.[Stock_CurrentStock.ProductDimensionId], T1.[Stock_CurrentStock.UnitTypeId], T1.[Stock_CurrentStock.Quantity], T1.[Stock_CurrentStock.Cost], T1.[Stock_CurrentStock.Cost1], T1.[Stock_CurrentStock.Cost2], T1.[Stock_CurrentStock.BatchNo], T1.[Stock_CurrentStock.ManufactureDate], T1.[Stock_CurrentStock.ExpireDate], T1.[Stock_CurrentStock.ReferenceNo], T1.[Stock_CurrentStock.ReferenceDate], T1.[Stock_CurrentStock.GoodsReceiveId], T1.[Stock_CurrentStock.ImportedStockInId], T1.[Stock_CurrentStock.SupplierId], T1.[Stock_CurrentStock.LocationId], T1.[Stock_CurrentStock.WareHouseId], T1.[Stock_CurrentStock.CompanyId], T1.[Stock_CurrentStock.EntryDate])
    FROM (
        SELECT 
            T.CurrentStockId AS [Stock_CurrentStock.CurrentStockId], 
            T.ProductId AS [Stock_CurrentStock.ProductId], 
            T.ProductDimensionId AS [Stock_CurrentStock.ProductDimensionId], 
            T.UnitTypeId AS [Stock_CurrentStock.UnitTypeId], 
            T.Quantity AS [Stock_CurrentStock.Quantity], 
            T.Cost AS [Stock_CurrentStock.Cost], 
            T.Cost1 AS [Stock_CurrentStock.Cost1], 
            T.Cost2 AS [Stock_CurrentStock.Cost2], 
            T.BatchNo AS [Stock_CurrentStock.BatchNo], 
            T.ManufactureDate AS [Stock_CurrentStock.ManufactureDate], 
            T.ExpireDate AS [Stock_CurrentStock.ExpireDate], 
            T.ReferenceNo AS [Stock_CurrentStock.ReferenceNo], 
            T.ReferenceDate AS [Stock_CurrentStock.ReferenceDate], 
            T.GoodsReceiveId AS [Stock_CurrentStock.GoodsReceiveId], 
            T.ImportedStockInId AS [Stock_CurrentStock.ImportedStockInId], 
            T.SupplierId AS [Stock_CurrentStock.SupplierId], 
            T.LocationId AS [Stock_CurrentStock.LocationId], 
            T.WareHouseId AS [Stock_CurrentStock.WareHouseId], 
            T.CompanyId AS [Stock_CurrentStock.CompanyId], 
            T.EntryDate AS [Stock_CurrentStock.EntryDate], 
            True AS _from0
        FROM Inventory360Entities.Stock_CurrentStock AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Stock_CurrentStockSerial.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView82()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Stock_CurrentStockSerial
        [BTS_OPSModel.Store.Stock_CurrentStockSerial](T1.[Stock_CurrentStockSerial.CurrentStockSerialId], T1.[Stock_CurrentStockSerial.CurrentStockId], T1.[Stock_CurrentStockSerial.Serial], T1.[Stock_CurrentStockSerial.AdditionalSerial])
    FROM (
        SELECT 
            T.CurrentStockSerialId AS [Stock_CurrentStockSerial.CurrentStockSerialId], 
            T.CurrentStockId AS [Stock_CurrentStockSerial.CurrentStockId], 
            T.Serial AS [Stock_CurrentStockSerial.Serial], 
            T.AdditionalSerial AS [Stock_CurrentStockSerial.AdditionalSerial], 
            True AS _from0
        FROM Inventory360Entities.Stock_CurrentStockSerial AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Stock_LIMStock.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView83()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Stock_LIMStock
        [BTS_OPSModel.Store.Stock_LIMStock](T1.[Stock_LIMStock.LIMStockId], T1.[Stock_LIMStock.ProductId], T1.[Stock_LIMStock.ProductDimensionId], T1.[Stock_LIMStock.UnitTypeId], T1.[Stock_LIMStock.Quantity], T1.[Stock_LIMStock.Cost], T1.[Stock_LIMStock.Cost1], T1.[Stock_LIMStock.Cost2], T1.[Stock_LIMStock.ReferenceNo], T1.[Stock_LIMStock.ReferenceDate], T1.[Stock_LIMStock.LocationId], T1.[Stock_LIMStock.CompanyId], T1.[Stock_LIMStock.EntryDate], T1.[Stock_LIMStock.SupplierId])
    FROM (
        SELECT 
            T.LIMStockId AS [Stock_LIMStock.LIMStockId], 
            T.ProductId AS [Stock_LIMStock.ProductId], 
            T.ProductDimensionId AS [Stock_LIMStock.ProductDimensionId], 
            T.UnitTypeId AS [Stock_LIMStock.UnitTypeId], 
            T.Quantity AS [Stock_LIMStock.Quantity], 
            T.Cost AS [Stock_LIMStock.Cost], 
            T.Cost1 AS [Stock_LIMStock.Cost1], 
            T.Cost2 AS [Stock_LIMStock.Cost2], 
            T.ReferenceNo AS [Stock_LIMStock.ReferenceNo], 
            T.ReferenceDate AS [Stock_LIMStock.ReferenceDate], 
            T.LocationId AS [Stock_LIMStock.LocationId], 
            T.CompanyId AS [Stock_LIMStock.CompanyId], 
            T.EntryDate AS [Stock_LIMStock.EntryDate], 
            T.SupplierId AS [Stock_LIMStock.SupplierId], 
            True AS _from0
        FROM Inventory360Entities.Stock_LIMStock AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Stock_RMAStock.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView84()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Stock_RMAStock
        [BTS_OPSModel.Store.Stock_RMAStock](T1.[Stock_RMAStock.RMAStockId], T1.[Stock_RMAStock.ProductId], T1.[Stock_RMAStock.ProductDimensionId], T1.[Stock_RMAStock.UnitTypeId], T1.[Stock_RMAStock.Quantity], T1.[Stock_RMAStock.Cost], T1.[Stock_RMAStock.Cost1], T1.[Stock_RMAStock.Cost2], T1.[Stock_RMAStock.ReferenceNo], T1.[Stock_RMAStock.ReferenceDate], T1.[Stock_RMAStock.GoodsReceiveId], T1.[Stock_RMAStock.ImportedStockInId], T1.[Stock_RMAStock.SupplierId], T1.[Stock_RMAStock.LocationId], T1.[Stock_RMAStock.WareHouseId], T1.[Stock_RMAStock.CompanyId], T1.[Stock_RMAStock.EntryDate])
    FROM (
        SELECT 
            T.RMAStockId AS [Stock_RMAStock.RMAStockId], 
            T.ProductId AS [Stock_RMAStock.ProductId], 
            T.ProductDimensionId AS [Stock_RMAStock.ProductDimensionId], 
            T.UnitTypeId AS [Stock_RMAStock.UnitTypeId], 
            T.Quantity AS [Stock_RMAStock.Quantity], 
            T.Cost AS [Stock_RMAStock.Cost], 
            T.Cost1 AS [Stock_RMAStock.Cost1], 
            T.Cost2 AS [Stock_RMAStock.Cost2], 
            T.ReferenceNo AS [Stock_RMAStock.ReferenceNo], 
            T.ReferenceDate AS [Stock_RMAStock.ReferenceDate], 
            T.GoodsReceiveId AS [Stock_RMAStock.GoodsReceiveId], 
            T.ImportedStockInId AS [Stock_RMAStock.ImportedStockInId], 
            T.SupplierId AS [Stock_RMAStock.SupplierId], 
            T.LocationId AS [Stock_RMAStock.LocationId], 
            T.WareHouseId AS [Stock_RMAStock.WareHouseId], 
            T.CompanyId AS [Stock_RMAStock.CompanyId], 
            T.EntryDate AS [Stock_RMAStock.EntryDate], 
            True AS _from0
        FROM Inventory360Entities.Stock_RMAStock AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Stock_RMAStockSerial.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView85()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Stock_RMAStockSerial
        [BTS_OPSModel.Store.Stock_RMAStockSerial](T1.[Stock_RMAStockSerial.RMAStockSerialId], T1.[Stock_RMAStockSerial.RMAStockId], T1.[Stock_RMAStockSerial.Serial], T1.[Stock_RMAStockSerial.AdditionalSerial])
    FROM (
        SELECT 
            T.RMAStockSerialId AS [Stock_RMAStockSerial.RMAStockSerialId], 
            T.RMAStockId AS [Stock_RMAStockSerial.RMAStockId], 
            T.Serial AS [Stock_RMAStockSerial.Serial], 
            T.AdditionalSerial AS [Stock_RMAStockSerial.AdditionalSerial], 
            True AS _from0
        FROM Inventory360Entities.Stock_RMAStockSerial AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Stock_TransitStock.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView86()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Stock_TransitStock
        [BTS_OPSModel.Store.Stock_TransitStock](T1.[Stock_TransitStock.TransitStockId], T1.[Stock_TransitStock.TransitType], T1.[Stock_TransitStock.ProductId], T1.[Stock_TransitStock.ProductDimensionId], T1.[Stock_TransitStock.UnitTypeId], T1.[Stock_TransitStock.Quantity], T1.[Stock_TransitStock.Cost], T1.[Stock_TransitStock.Cost1], T1.[Stock_TransitStock.Cost2], T1.[Stock_TransitStock.BatchNo], T1.[Stock_TransitStock.ManufactureDate], T1.[Stock_TransitStock.ExpireDate], T1.[Stock_TransitStock.ReferenceNo], T1.[Stock_TransitStock.ReferenceDate], T1.[Stock_TransitStock.GoodsReceiveId], T1.[Stock_TransitStock.ImportedStockInId], T1.[Stock_TransitStock.SupplierId], T1.[Stock_TransitStock.LocationId], T1.[Stock_TransitStock.WareHouseId], T1.[Stock_TransitStock.CompanyId], T1.[Stock_TransitStock.EntryDate])
    FROM (
        SELECT 
            T.TransitStockId AS [Stock_TransitStock.TransitStockId], 
            T.TransitType AS [Stock_TransitStock.TransitType], 
            T.ProductId AS [Stock_TransitStock.ProductId], 
            T.ProductDimensionId AS [Stock_TransitStock.ProductDimensionId], 
            T.UnitTypeId AS [Stock_TransitStock.UnitTypeId], 
            T.Quantity AS [Stock_TransitStock.Quantity], 
            T.Cost AS [Stock_TransitStock.Cost], 
            T.Cost1 AS [Stock_TransitStock.Cost1], 
            T.Cost2 AS [Stock_TransitStock.Cost2], 
            T.BatchNo AS [Stock_TransitStock.BatchNo], 
            T.ManufactureDate AS [Stock_TransitStock.ManufactureDate], 
            T.ExpireDate AS [Stock_TransitStock.ExpireDate], 
            T.ReferenceNo AS [Stock_TransitStock.ReferenceNo], 
            T.ReferenceDate AS [Stock_TransitStock.ReferenceDate], 
            T.GoodsReceiveId AS [Stock_TransitStock.GoodsReceiveId], 
            T.ImportedStockInId AS [Stock_TransitStock.ImportedStockInId], 
            T.SupplierId AS [Stock_TransitStock.SupplierId], 
            T.LocationId AS [Stock_TransitStock.LocationId], 
            T.WareHouseId AS [Stock_TransitStock.WareHouseId], 
            T.CompanyId AS [Stock_TransitStock.CompanyId], 
            T.EntryDate AS [Stock_TransitStock.EntryDate], 
            True AS _from0
        FROM Inventory360Entities.Stock_TransitStock AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Stock_TransitStockSerial.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView87()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Stock_TransitStockSerial
        [BTS_OPSModel.Store.Stock_TransitStockSerial](T1.[Stock_TransitStockSerial.TransitStockSerialId], T1.[Stock_TransitStockSerial.TransitStockId], T1.[Stock_TransitStockSerial.Serial], T1.[Stock_TransitStockSerial.AdditionalSerial])
    FROM (
        SELECT 
            T.TransitStockSerialId AS [Stock_TransitStockSerial.TransitStockSerialId], 
            T.TransitStockId AS [Stock_TransitStockSerial.TransitStockId], 
            T.Serial AS [Stock_TransitStockSerial.Serial], 
            T.AdditionalSerial AS [Stock_TransitStockSerial.AdditionalSerial], 
            True AS _from0
        FROM Inventory360Entities.Stock_TransitStockSerial AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_ChequeInfo.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView88()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_ChequeInfo
        [BTS_OPSModel.Store.Task_ChequeInfo](T1.[Task_ChequeInfo.ChequeInfoId], T1.[Task_ChequeInfo.CollectionDetailId], T1.[Task_ChequeInfo.EntryVoucherId], T1.[Task_ChequeInfo.BankId], T1.[Task_ChequeInfo.ChequeNo], T1.[Task_ChequeInfo.ChequeDate], T1.[Task_ChequeInfo.Amount], T1.[Task_ChequeInfo.Amount1], T1.[Task_ChequeInfo.Amount2], T1.[Task_ChequeInfo.Status], T1.[Task_ChequeInfo.StatusDate], T1.[Task_ChequeInfo.PaymentDetailId], T1.[Task_ChequeInfo.LocationId], T1.[Task_ChequeInfo.CompanyId], T1.[Task_ChequeInfo.EntryBy], T1.[Task_ChequeInfo.EntryDate])
    FROM (
        SELECT 
            T.ChequeInfoId AS [Task_ChequeInfo.ChequeInfoId], 
            T.CollectionDetailId AS [Task_ChequeInfo.CollectionDetailId], 
            T.EntryVoucherId AS [Task_ChequeInfo.EntryVoucherId], 
            T.BankId AS [Task_ChequeInfo.BankId], 
            T.ChequeNo AS [Task_ChequeInfo.ChequeNo], 
            T.ChequeDate AS [Task_ChequeInfo.ChequeDate], 
            T.Amount AS [Task_ChequeInfo.Amount], 
            T.Amount1 AS [Task_ChequeInfo.Amount1], 
            T.Amount2 AS [Task_ChequeInfo.Amount2], 
            T.Status AS [Task_ChequeInfo.Status], 
            T.StatusDate AS [Task_ChequeInfo.StatusDate], 
            T.PaymentDetailId AS [Task_ChequeInfo.PaymentDetailId], 
            T.LocationId AS [Task_ChequeInfo.LocationId], 
            T.CompanyId AS [Task_ChequeInfo.CompanyId], 
            T.EntryBy AS [Task_ChequeInfo.EntryBy], 
            T.EntryDate AS [Task_ChequeInfo.EntryDate], 
            True AS _from0
        FROM Inventory360Entities.Task_ChequeInfo AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_ChequeTreatment.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView89()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_ChequeTreatment
        [BTS_OPSModel.Store.Task_ChequeTreatment](T1.[Task_ChequeTreatment.TreatmentId], T1.[Task_ChequeTreatment.ChequeInfoId], T1.[Task_ChequeTreatment.Status], T1.[Task_ChequeTreatment.StatusDate], T1.[Task_ChequeTreatment.TreatmentBankId], T1.[Task_ChequeTreatment.VoucherId], T1.[Task_ChequeTreatment.EntryBy], T1.[Task_ChequeTreatment.EntryDate])
    FROM (
        SELECT 
            T.TreatmentId AS [Task_ChequeTreatment.TreatmentId], 
            T.ChequeInfoId AS [Task_ChequeTreatment.ChequeInfoId], 
            T.Status AS [Task_ChequeTreatment.Status], 
            T.StatusDate AS [Task_ChequeTreatment.StatusDate], 
            T.TreatmentBankId AS [Task_ChequeTreatment.TreatmentBankId], 
            T.VoucherId AS [Task_ChequeTreatment.VoucherId], 
            T.EntryBy AS [Task_ChequeTreatment.EntryBy], 
            T.EntryDate AS [Task_ChequeTreatment.EntryDate], 
            True AS _from0
        FROM Inventory360Entities.Task_ChequeTreatment AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_Collection.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView90()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_Collection
        [BTS_OPSModel.Store.Task_Collection](T1.[Task_Collection.CollectionId], T1.[Task_Collection.CollectionNo], T1.[Task_Collection.CollectionDate], T1.[Task_Collection.CollectionAgainst], T1.[Task_Collection.CustomerId], T1.[Task_Collection.SalesPersonId], T1.[Task_Collection.SelectedCurrency], T1.[Task_Collection.Currency1Rate], T1.[Task_Collection.Currency2Rate], T1.[Task_Collection.CollectedAmount], T1.[Task_Collection.CollectedAmount1], T1.[Task_Collection.CollectedAmount2], T1.[Task_Collection.SecurityDeposit], T1.[Task_Collection.SecurityDeposit1], T1.[Task_Collection.SecurityDeposit2], T1.[Task_Collection.RecoveryDate], T1.[Task_Collection.OthersAdjustment], T1.[Task_Collection.OthersAdjustment1], T1.[Task_Collection.OthersAdjustment2], T1.[Task_Collection.CollectedBy], T1.[Task_Collection.MRNo], T1.[Task_Collection.Remarks], T1.[Task_Collection.OperationTypeId], T1.[Task_Collection.OperationalEventId], T1.[Task_Collection.Approved], T1.[Task_Collection.ApprovedBy], T1.[Task_Collection.ApprovedDate], T1.[Task_Collection.CancelReason], T1.[Task_Collection.VoucherId], T1.[Task_Collection.LocationId], T1.[Task_Collection.CompanyId], T1.[Task_Collection.EntryBy], T1.[Task_Collection.EntryDate], T1.[Task_Collection.EditedBy], T1.[Task_Collection.EditedDate])
    FROM (
        SELECT 
            T.CollectionId AS [Task_Collection.CollectionId], 
            T.CollectionNo AS [Task_Collection.CollectionNo], 
            T.CollectionDate AS [Task_Collection.CollectionDate], 
            T.CollectionAgainst AS [Task_Collection.CollectionAgainst], 
            T.CustomerId AS [Task_Collection.CustomerId], 
            T.SalesPersonId AS [Task_Collection.SalesPersonId], 
            T.SelectedCurrency AS [Task_Collection.SelectedCurrency], 
            T.Currency1Rate AS [Task_Collection.Currency1Rate], 
            T.Currency2Rate AS [Task_Collection.Currency2Rate], 
            T.CollectedAmount AS [Task_Collection.CollectedAmount], 
            T.CollectedAmount1 AS [Task_Collection.CollectedAmount1], 
            T.CollectedAmount2 AS [Task_Collection.CollectedAmount2], 
            T.SecurityDeposit AS [Task_Collection.SecurityDeposit], 
            T.SecurityDeposit1 AS [Task_Collection.SecurityDeposit1], 
            T.SecurityDeposit2 AS [Task_Collection.SecurityDeposit2], 
            T.RecoveryDate AS [Task_Collection.RecoveryDate], 
            T.OthersAdjustment AS [Task_Collection.OthersAdjustment], 
            T.OthersAdjustment1 AS [Task_Collection.OthersAdjustment1], 
            T.OthersAdjustment2 AS [Task_Collection.OthersAdjustment2], 
            T.CollectedBy AS [Task_Collection.CollectedBy], 
            T.MRNo AS [Task_Collection.MRNo], 
            T.Remarks AS [Task_Collection.Remarks], 
            T.OperationTypeId AS [Task_Collection.OperationTypeId], 
            T.OperationalEventId AS [Task_Collection.OperationalEventId], 
            T.Approved AS [Task_Collection.Approved], 
            T.ApprovedBy AS [Task_Collection.ApprovedBy], 
            T.ApprovedDate AS [Task_Collection.ApprovedDate], 
            T.CancelReason AS [Task_Collection.CancelReason], 
            T.VoucherId AS [Task_Collection.VoucherId], 
            T.LocationId AS [Task_Collection.LocationId], 
            T.CompanyId AS [Task_Collection.CompanyId], 
            T.EntryBy AS [Task_Collection.EntryBy], 
            T.EntryDate AS [Task_Collection.EntryDate], 
            T.EditedBy AS [Task_Collection.EditedBy], 
            T.EditedDate AS [Task_Collection.EditedDate], 
            True AS _from0
        FROM Inventory360Entities.Task_Collection AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_Collection_GovtDutyAdjustment.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView91()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_Collection_GovtDutyAdjustment
        [BTS_OPSModel.Store.Task_Collection_GovtDutyAdjustment](T1.[Task_Collection_GovtDutyAdjustment.CollectionAdjustmentId], T1.[Task_Collection_GovtDutyAdjustment.CollectionId], T1.[Task_Collection_GovtDutyAdjustment.GovtDutyAdjustmentId], T1.[Task_Collection_GovtDutyAdjustment.Amount], T1.[Task_Collection_GovtDutyAdjustment.Amount1], T1.[Task_Collection_GovtDutyAdjustment.Amount2])
    FROM (
        SELECT 
            T.CollectionAdjustmentId AS [Task_Collection_GovtDutyAdjustment.CollectionAdjustmentId], 
            T.CollectionId AS [Task_Collection_GovtDutyAdjustment.CollectionId], 
            T.GovtDutyAdjustmentId AS [Task_Collection_GovtDutyAdjustment.GovtDutyAdjustmentId], 
            T.Amount AS [Task_Collection_GovtDutyAdjustment.Amount], 
            T.Amount1 AS [Task_Collection_GovtDutyAdjustment.Amount1], 
            T.Amount2 AS [Task_Collection_GovtDutyAdjustment.Amount2], 
            True AS _from0
        FROM Inventory360Entities.Task_Collection_GovtDutyAdjustment AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_CollectionDetail.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView92()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_CollectionDetail
        [BTS_OPSModel.Store.Task_CollectionDetail](T1.[Task_CollectionDetail.CollectionDetailId], T1.[Task_CollectionDetail.CollectionId], T1.[Task_CollectionDetail.PaymentModeId], T1.[Task_CollectionDetail.Amount], T1.[Task_CollectionDetail.Amount1], T1.[Task_CollectionDetail.Amount2], T1.[Task_CollectionDetail.VoucherId])
    FROM (
        SELECT 
            T.CollectionDetailId AS [Task_CollectionDetail.CollectionDetailId], 
            T.CollectionId AS [Task_CollectionDetail.CollectionId], 
            T.PaymentModeId AS [Task_CollectionDetail.PaymentModeId], 
            T.Amount AS [Task_CollectionDetail.Amount], 
            T.Amount1 AS [Task_CollectionDetail.Amount1], 
            T.Amount2 AS [Task_CollectionDetail.Amount2], 
            T.VoucherId AS [Task_CollectionDetail.VoucherId], 
            True AS _from0
        FROM Inventory360Entities.Task_CollectionDetail AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_CollectionMapping.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView93()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_CollectionMapping
        [BTS_OPSModel.Store.Task_CollectionMapping](T1.[Task_CollectionMapping.MappingId], T1.[Task_CollectionMapping.CollectionId], T1.[Task_CollectionMapping.SalesOrderId], T1.[Task_CollectionMapping.InvoiceId], T1.[Task_CollectionMapping.Amount], T1.[Task_CollectionMapping.Amount1], T1.[Task_CollectionMapping.Amount2])
    FROM (
        SELECT 
            T.MappingId AS [Task_CollectionMapping.MappingId], 
            T.CollectionId AS [Task_CollectionMapping.CollectionId], 
            T.SalesOrderId AS [Task_CollectionMapping.SalesOrderId], 
            T.InvoiceId AS [Task_CollectionMapping.InvoiceId], 
            T.Amount AS [Task_CollectionMapping.Amount], 
            T.Amount1 AS [Task_CollectionMapping.Amount1], 
            T.Amount2 AS [Task_CollectionMapping.Amount2], 
            True AS _from0
        FROM Inventory360Entities.Task_CollectionMapping AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_CollectionNos.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView94()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_CollectionNos
        [BTS_OPSModel.Store.Task_CollectionNos](T1.[Task_CollectionNos.Id], T1.[Task_CollectionNos.CollectionNo], T1.[Task_CollectionNos.Year], T1.[Task_CollectionNos.CompanyId])
    FROM (
        SELECT 
            T.Id AS [Task_CollectionNos.Id], 
            T.CollectionNo AS [Task_CollectionNos.CollectionNo], 
            T.Year AS [Task_CollectionNos.Year], 
            T.CompanyId AS [Task_CollectionNos.CompanyId], 
            True AS _from0
        FROM Inventory360Entities.Task_CollectionNos AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_ComplainReceive.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView95()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_ComplainReceive
        [BTS_OPSModel.Store.Task_ComplainReceive](T1.[Task_ComplainReceive.ReceiveId], T1.[Task_ComplainReceive.ReceiveNo], T1.[Task_ComplainReceive.ReceiveDate], T1.[Task_ComplainReceive.SelectedCurrency], T1.[Task_ComplainReceive.Currency1Rate], T1.[Task_ComplainReceive.Currency2Rate], T1.[Task_ComplainReceive.AgainstPreviousSales], T1.[Task_ComplainReceive.CustomerId], T1.[Task_ComplainReceive.RequestedBy], T1.[Task_ComplainReceive.TotalChargeAmount], T1.[Task_ComplainReceive.TotalCharge1Amount], T1.[Task_ComplainReceive.TotalCharge2Amount], T1.[Task_ComplainReceive.Remarks], T1.[Task_ComplainReceive.Approved], T1.[Task_ComplainReceive.ApprovedBy], T1.[Task_ComplainReceive.ApprovedDate], T1.[Task_ComplainReceive.CancelReason], T1.[Task_ComplainReceive.LocationId], T1.[Task_ComplainReceive.CompanyId], T1.[Task_ComplainReceive.EntryBy], T1.[Task_ComplainReceive.EntryDate])
    FROM (
        SELECT 
            T.ReceiveId AS [Task_ComplainReceive.ReceiveId], 
            T.ReceiveNo AS [Task_ComplainReceive.ReceiveNo], 
            T.ReceiveDate AS [Task_ComplainReceive.ReceiveDate], 
            T.SelectedCurrency AS [Task_ComplainReceive.SelectedCurrency], 
            T.Currency1Rate AS [Task_ComplainReceive.Currency1Rate], 
            T.Currency2Rate AS [Task_ComplainReceive.Currency2Rate], 
            T.AgainstPreviousSales AS [Task_ComplainReceive.AgainstPreviousSales], 
            T.CustomerId AS [Task_ComplainReceive.CustomerId], 
            T.RequestedBy AS [Task_ComplainReceive.RequestedBy], 
            T.TotalChargeAmount AS [Task_ComplainReceive.TotalChargeAmount], 
            T.TotalCharge1Amount AS [Task_ComplainReceive.TotalCharge1Amount], 
            T.TotalCharge2Amount AS [Task_ComplainReceive.TotalCharge2Amount], 
            T.Remarks AS [Task_ComplainReceive.Remarks], 
            T.Approved AS [Task_ComplainReceive.Approved], 
            T.ApprovedBy AS [Task_ComplainReceive.ApprovedBy], 
            T.ApprovedDate AS [Task_ComplainReceive.ApprovedDate], 
            T.CancelReason AS [Task_ComplainReceive.CancelReason], 
            T.LocationId AS [Task_ComplainReceive.LocationId], 
            T.CompanyId AS [Task_ComplainReceive.CompanyId], 
            T.EntryBy AS [Task_ComplainReceive.EntryBy], 
            T.EntryDate AS [Task_ComplainReceive.EntryDate], 
            True AS _from0
        FROM Inventory360Entities.Task_ComplainReceive AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_ComplainReceive_Charge.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView96()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_ComplainReceive_Charge
        [BTS_OPSModel.Store.Task_ComplainReceive_Charge](T1.[Task_ComplainReceive_Charge.ReceiveChargeId], T1.[Task_ComplainReceive_Charge.ReceiveId], T1.[Task_ComplainReceive_Charge.ChargeEventId], T1.[Task_ComplainReceive_Charge.ChargeAmount], T1.[Task_ComplainReceive_Charge.Charge1Amount], T1.[Task_ComplainReceive_Charge.Charge2Amount])
    FROM (
        SELECT 
            T.ReceiveChargeId AS [Task_ComplainReceive_Charge.ReceiveChargeId], 
            T.ReceiveId AS [Task_ComplainReceive_Charge.ReceiveId], 
            T.ChargeEventId AS [Task_ComplainReceive_Charge.ChargeEventId], 
            T.ChargeAmount AS [Task_ComplainReceive_Charge.ChargeAmount], 
            T.Charge1Amount AS [Task_ComplainReceive_Charge.Charge1Amount], 
            T.Charge2Amount AS [Task_ComplainReceive_Charge.Charge2Amount], 
            True AS _from0
        FROM Inventory360Entities.Task_ComplainReceive_Charge AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_ComplainReceiveDetail.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView97()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_ComplainReceiveDetail
        [BTS_OPSModel.Store.Task_ComplainReceiveDetail](T1.[Task_ComplainReceiveDetail.ReceiveDetailId], T1.[Task_ComplainReceiveDetail.ReceiveId], T1.[Task_ComplainReceiveDetail.InvoiceId], T1.[Task_ComplainReceiveDetail.ProductId], T1.[Task_ComplainReceiveDetail.ProductDimensionId], T1.[Task_ComplainReceiveDetail.UnitTypeId], T1.[Task_ComplainReceiveDetail.Serial], T1.[Task_ComplainReceiveDetail.AdditionalSerial], T1.[Task_ComplainReceiveDetail.IsWarrantyAvailable], T1.[Task_ComplainReceiveDetail.IsServiceWarranty], T1.[Task_ComplainReceiveDetail.IsOnlyService], T1.[Task_ComplainReceiveDetail.Cost], T1.[Task_ComplainReceiveDetail.Cost1], T1.[Task_ComplainReceiveDetail.Cost2], T1.[Task_ComplainReceiveDetail.Remarks], T1.[Task_ComplainReceiveDetail.TotalSpareAmount], T1.[Task_ComplainReceiveDetail.TotalSpareAmount1], T1.[Task_ComplainReceiveDetail.TotalSpareAmount2], T1.[Task_ComplainReceiveDetail.TotalSpareDiscount], T1.[Task_ComplainReceiveDetail.TotalSpareDiscount1], T1.[Task_ComplainReceiveDetail.TotalSpareDiscount2], T1.[Task_ComplainReceiveDetail.TotalServiceAmount], T1.[Task_ComplainReceiveDetail.TotalServiceAmount1], T1.[Task_ComplainReceiveDetail.TotalServiceAmount2], T1.[Task_ComplainReceiveDetail.TotalServiceDiscount], T1.[Task_ComplainReceiveDetail.TotalServiceDiscount1], T1.[Task_ComplainReceiveDetail.TotalServiceDiscount2])
    FROM (
        SELECT 
            T.ReceiveDetailId AS [Task_ComplainReceiveDetail.ReceiveDetailId], 
            T.ReceiveId AS [Task_ComplainReceiveDetail.ReceiveId], 
            T.InvoiceId AS [Task_ComplainReceiveDetail.InvoiceId], 
            T.ProductId AS [Task_ComplainReceiveDetail.ProductId], 
            T.ProductDimensionId AS [Task_ComplainReceiveDetail.ProductDimensionId], 
            T.UnitTypeId AS [Task_ComplainReceiveDetail.UnitTypeId], 
            T.Serial AS [Task_ComplainReceiveDetail.Serial], 
            T.AdditionalSerial AS [Task_ComplainReceiveDetail.AdditionalSerial], 
            T.IsWarrantyAvailable AS [Task_ComplainReceiveDetail.IsWarrantyAvailable], 
            T.IsServiceWarranty AS [Task_ComplainReceiveDetail.IsServiceWarranty], 
            T.IsOnlyService AS [Task_ComplainReceiveDetail.IsOnlyService], 
            T.Cost AS [Task_ComplainReceiveDetail.Cost], 
            T.Cost1 AS [Task_ComplainReceiveDetail.Cost1], 
            T.Cost2 AS [Task_ComplainReceiveDetail.Cost2], 
            T.Remarks AS [Task_ComplainReceiveDetail.Remarks], 
            T.TotalSpareAmount AS [Task_ComplainReceiveDetail.TotalSpareAmount], 
            T.TotalSpareAmount1 AS [Task_ComplainReceiveDetail.TotalSpareAmount1], 
            T.TotalSpareAmount2 AS [Task_ComplainReceiveDetail.TotalSpareAmount2], 
            T.TotalSpareDiscount AS [Task_ComplainReceiveDetail.TotalSpareDiscount], 
            T.TotalSpareDiscount1 AS [Task_ComplainReceiveDetail.TotalSpareDiscount1], 
            T.TotalSpareDiscount2 AS [Task_ComplainReceiveDetail.TotalSpareDiscount2], 
            T.TotalServiceAmount AS [Task_ComplainReceiveDetail.TotalServiceAmount], 
            T.TotalServiceAmount1 AS [Task_ComplainReceiveDetail.TotalServiceAmount1], 
            T.TotalServiceAmount2 AS [Task_ComplainReceiveDetail.TotalServiceAmount2], 
            T.TotalServiceDiscount AS [Task_ComplainReceiveDetail.TotalServiceDiscount], 
            T.TotalServiceDiscount1 AS [Task_ComplainReceiveDetail.TotalServiceDiscount1], 
            T.TotalServiceDiscount2 AS [Task_ComplainReceiveDetail.TotalServiceDiscount2], 
            True AS _from0
        FROM Inventory360Entities.Task_ComplainReceiveDetail AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_ComplainReceiveDetail_Problem.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView98()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_ComplainReceiveDetail_Problem
        [BTS_OPSModel.Store.Task_ComplainReceiveDetail_Problem](T1.[Task_ComplainReceiveDetail_Problem.ReceiveDetailProblemId], T1.[Task_ComplainReceiveDetail_Problem.ReceiveDetailId], T1.[Task_ComplainReceiveDetail_Problem.ProblemId], T1.[Task_ComplainReceiveDetail_Problem.Note])
    FROM (
        SELECT 
            T.ReceiveDetailProblemId AS [Task_ComplainReceiveDetail_Problem.ReceiveDetailProblemId], 
            T.ReceiveDetailId AS [Task_ComplainReceiveDetail_Problem.ReceiveDetailId], 
            T.ProblemId AS [Task_ComplainReceiveDetail_Problem.ProblemId], 
            T.Note AS [Task_ComplainReceiveDetail_Problem.Note], 
            True AS _from0
        FROM Inventory360Entities.Task_ComplainReceiveDetail_Problem AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_ComplainReceiveDetail_SpareProduct.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView99()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_ComplainReceiveDetail_SpareProduct
        [BTS_OPSModel.Store.Task_ComplainReceiveDetail_SpareProduct](T1.[Task_ComplainReceiveDetail_SpareProduct.ReceiveDetailSpareId], T1.[Task_ComplainReceiveDetail_SpareProduct.ReceiveDetailId], T1.[Task_ComplainReceiveDetail_SpareProduct.ProductId], T1.[Task_ComplainReceiveDetail_SpareProduct.ProductDimensionId], T1.[Task_ComplainReceiveDetail_SpareProduct.UnitTypeId], T1.[Task_ComplainReceiveDetail_SpareProduct.Quantity], T1.[Task_ComplainReceiveDetail_SpareProduct.Price], T1.[Task_ComplainReceiveDetail_SpareProduct.Price1], T1.[Task_ComplainReceiveDetail_SpareProduct.Price2], T1.[Task_ComplainReceiveDetail_SpareProduct.Discount], T1.[Task_ComplainReceiveDetail_SpareProduct.Discount1], T1.[Task_ComplainReceiveDetail_SpareProduct.Discount2])
    FROM (
        SELECT 
            T.ReceiveDetailSpareId AS [Task_ComplainReceiveDetail_SpareProduct.ReceiveDetailSpareId], 
            T.ReceiveDetailId AS [Task_ComplainReceiveDetail_SpareProduct.ReceiveDetailId], 
            T.ProductId AS [Task_ComplainReceiveDetail_SpareProduct.ProductId], 
            T.ProductDimensionId AS [Task_ComplainReceiveDetail_SpareProduct.ProductDimensionId], 
            T.UnitTypeId AS [Task_ComplainReceiveDetail_SpareProduct.UnitTypeId], 
            T.Quantity AS [Task_ComplainReceiveDetail_SpareProduct.Quantity], 
            T.Price AS [Task_ComplainReceiveDetail_SpareProduct.Price], 
            T.Price1 AS [Task_ComplainReceiveDetail_SpareProduct.Price1], 
            T.Price2 AS [Task_ComplainReceiveDetail_SpareProduct.Price2], 
            T.Discount AS [Task_ComplainReceiveDetail_SpareProduct.Discount], 
            T.Discount1 AS [Task_ComplainReceiveDetail_SpareProduct.Discount1], 
            T.Discount2 AS [Task_ComplainReceiveDetail_SpareProduct.Discount2], 
            True AS _from0
        FROM Inventory360Entities.Task_ComplainReceiveDetail_SpareProduct AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_ComplainReceiveNos.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView100()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_ComplainReceiveNos
        [BTS_OPSModel.Store.Task_ComplainReceiveNos](T1.[Task_ComplainReceiveNos.Id], T1.[Task_ComplainReceiveNos.ReceiveNo], T1.[Task_ComplainReceiveNos.Year], T1.[Task_ComplainReceiveNos.CompanyId])
    FROM (
        SELECT 
            T.Id AS [Task_ComplainReceiveNos.Id], 
            T.ReceiveNo AS [Task_ComplainReceiveNos.ReceiveNo], 
            T.Year AS [Task_ComplainReceiveNos.Year], 
            T.CompanyId AS [Task_ComplainReceiveNos.CompanyId], 
            True AS _from0
        FROM Inventory360Entities.Task_ComplainReceiveNos AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_Convertion.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView101()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_Convertion
        [BTS_OPSModel.Store.Task_Convertion](T1.[Task_Convertion.ConvertionId], T1.[Task_Convertion.ConvertionNo], T1.[Task_Convertion.ConvertionDate], T1.[Task_Convertion.ConvertionType], T1.[Task_Convertion.ConvertionFor], T1.[Task_Convertion.ConvertionRatioId], T1.[Task_Convertion.Remarks], T1.[Task_Convertion.Approved], T1.[Task_Convertion.ApprovedBy], T1.[Task_Convertion.ApprovedDate], T1.[Task_Convertion.CancelReason], T1.[Task_Convertion.LocationId], T1.[Task_Convertion.CompanyId], T1.[Task_Convertion.EntryBy], T1.[Task_Convertion.EntryDate])
    FROM (
        SELECT 
            T.ConvertionId AS [Task_Convertion.ConvertionId], 
            T.ConvertionNo AS [Task_Convertion.ConvertionNo], 
            T.ConvertionDate AS [Task_Convertion.ConvertionDate], 
            T.ConvertionType AS [Task_Convertion.ConvertionType], 
            T.ConvertionFor AS [Task_Convertion.ConvertionFor], 
            T.ConvertionRatioId AS [Task_Convertion.ConvertionRatioId], 
            T.Remarks AS [Task_Convertion.Remarks], 
            T.Approved AS [Task_Convertion.Approved], 
            T.ApprovedBy AS [Task_Convertion.ApprovedBy], 
            T.ApprovedDate AS [Task_Convertion.ApprovedDate], 
            T.CancelReason AS [Task_Convertion.CancelReason], 
            T.LocationId AS [Task_Convertion.LocationId], 
            T.CompanyId AS [Task_Convertion.CompanyId], 
            T.EntryBy AS [Task_Convertion.EntryBy], 
            T.EntryDate AS [Task_Convertion.EntryDate], 
            True AS _from0
        FROM Inventory360Entities.Task_Convertion AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_ConvertionDetail.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView102()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_ConvertionDetail
        [BTS_OPSModel.Store.Task_ConvertionDetail](T1.[Task_ConvertionDetail.ConvertionDetailId], T1.[Task_ConvertionDetail.ConvertionId], T1.[Task_ConvertionDetail.ProductFor], T1.[Task_ConvertionDetail.ProductId], T1.[Task_ConvertionDetail.ProductDimensionId], T1.[Task_ConvertionDetail.UnitTypeId], T1.[Task_ConvertionDetail.WareHouseId], T1.[Task_ConvertionDetail.Quantity], T1.[Task_ConvertionDetail.Cost], T1.[Task_ConvertionDetail.Cost1], T1.[Task_ConvertionDetail.Cost2], T1.[Task_ConvertionDetail.PrimaryUnitTypeId], T1.[Task_ConvertionDetail.SecondaryUnitTypeId], T1.[Task_ConvertionDetail.TertiaryUnitTypeId], T1.[Task_ConvertionDetail.SecondaryConversionRatio], T1.[Task_ConvertionDetail.TertiaryConversionRatio], T1.[Task_ConvertionDetail.ReferenceNo], T1.[Task_ConvertionDetail.ReferenceDate], T1.[Task_ConvertionDetail.GoodsReceiveId], T1.[Task_ConvertionDetail.ImportedStockInId], T1.[Task_ConvertionDetail.SupplierId])
    FROM (
        SELECT 
            T.ConvertionDetailId AS [Task_ConvertionDetail.ConvertionDetailId], 
            T.ConvertionId AS [Task_ConvertionDetail.ConvertionId], 
            T.ProductFor AS [Task_ConvertionDetail.ProductFor], 
            T.ProductId AS [Task_ConvertionDetail.ProductId], 
            T.ProductDimensionId AS [Task_ConvertionDetail.ProductDimensionId], 
            T.UnitTypeId AS [Task_ConvertionDetail.UnitTypeId], 
            T.WareHouseId AS [Task_ConvertionDetail.WareHouseId], 
            T.Quantity AS [Task_ConvertionDetail.Quantity], 
            T.Cost AS [Task_ConvertionDetail.Cost], 
            T.Cost1 AS [Task_ConvertionDetail.Cost1], 
            T.Cost2 AS [Task_ConvertionDetail.Cost2], 
            T.PrimaryUnitTypeId AS [Task_ConvertionDetail.PrimaryUnitTypeId], 
            T.SecondaryUnitTypeId AS [Task_ConvertionDetail.SecondaryUnitTypeId], 
            T.TertiaryUnitTypeId AS [Task_ConvertionDetail.TertiaryUnitTypeId], 
            T.SecondaryConversionRatio AS [Task_ConvertionDetail.SecondaryConversionRatio], 
            T.TertiaryConversionRatio AS [Task_ConvertionDetail.TertiaryConversionRatio], 
            T.ReferenceNo AS [Task_ConvertionDetail.ReferenceNo], 
            T.ReferenceDate AS [Task_ConvertionDetail.ReferenceDate], 
            T.GoodsReceiveId AS [Task_ConvertionDetail.GoodsReceiveId], 
            T.ImportedStockInId AS [Task_ConvertionDetail.ImportedStockInId], 
            T.SupplierId AS [Task_ConvertionDetail.SupplierId], 
            True AS _from0
        FROM Inventory360Entities.Task_ConvertionDetail AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_ConvertionDetailSerial.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView103()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_ConvertionDetailSerial
        [BTS_OPSModel.Store.Task_ConvertionDetailSerial](T1.[Task_ConvertionDetailSerial.ConvertionDetailSerialId], T1.[Task_ConvertionDetailSerial.ConvertionDetailId], T1.[Task_ConvertionDetailSerial.Serial], T1.[Task_ConvertionDetailSerial.AdditionalSerial])
    FROM (
        SELECT 
            T.ConvertionDetailSerialId AS [Task_ConvertionDetailSerial.ConvertionDetailSerialId], 
            T.ConvertionDetailId AS [Task_ConvertionDetailSerial.ConvertionDetailId], 
            T.Serial AS [Task_ConvertionDetailSerial.Serial], 
            T.AdditionalSerial AS [Task_ConvertionDetailSerial.AdditionalSerial], 
            True AS _from0
        FROM Inventory360Entities.Task_ConvertionDetailSerial AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_ConvertionNos.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView104()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_ConvertionNos
        [BTS_OPSModel.Store.Task_ConvertionNos](T1.[Task_ConvertionNos.Id], T1.[Task_ConvertionNos.ConvertionNo], T1.[Task_ConvertionNos.Year], T1.[Task_ConvertionNos.CompanyId])
    FROM (
        SELECT 
            T.Id AS [Task_ConvertionNos.Id], 
            T.ConvertionNo AS [Task_ConvertionNos.ConvertionNo], 
            T.Year AS [Task_ConvertionNos.Year], 
            T.CompanyId AS [Task_ConvertionNos.CompanyId], 
            True AS _from0
        FROM Inventory360Entities.Task_ConvertionNos AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_CustomerDelivery.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView105()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_CustomerDelivery
        [BTS_OPSModel.Store.Task_CustomerDelivery](T1.[Task_CustomerDelivery.DeliveryId], T1.[Task_CustomerDelivery.DeliveryNo], T1.[Task_CustomerDelivery.DeliveryDate], T1.[Task_CustomerDelivery.SelectedCurrency], T1.[Task_CustomerDelivery.Currency1Rate], T1.[Task_CustomerDelivery.Currency2Rate], T1.[Task_CustomerDelivery.CustomerId], T1.[Task_CustomerDelivery.TotalAmount], T1.[Task_CustomerDelivery.TotalAmount1], T1.[Task_CustomerDelivery.TotalAmount2], T1.[Task_CustomerDelivery.TotalChargeAmount], T1.[Task_CustomerDelivery.TotalChargeAmount1], T1.[Task_CustomerDelivery.TotalChargeAmount2], T1.[Task_CustomerDelivery.Discount], T1.[Task_CustomerDelivery.Discount1], T1.[Task_CustomerDelivery.Discount2], T1.[Task_CustomerDelivery.RequestedBy], T1.[Task_CustomerDelivery.Approved], T1.[Task_CustomerDelivery.ApprovedBy], T1.[Task_CustomerDelivery.ApprovedDate], T1.[Task_CustomerDelivery.CancelReason], T1.[Task_CustomerDelivery.Remarks], T1.[Task_CustomerDelivery.VoucherId], T1.[Task_CustomerDelivery.LocationId], T1.[Task_CustomerDelivery.CompanyId], T1.[Task_CustomerDelivery.EntryBy], T1.[Task_CustomerDelivery.EntryDate])
    FROM (
        SELECT 
            T.DeliveryId AS [Task_CustomerDelivery.DeliveryId], 
            T.DeliveryNo AS [Task_CustomerDelivery.DeliveryNo], 
            T.DeliveryDate AS [Task_CustomerDelivery.DeliveryDate], 
            T.SelectedCurrency AS [Task_CustomerDelivery.SelectedCurrency], 
            T.Currency1Rate AS [Task_CustomerDelivery.Currency1Rate], 
            T.Currency2Rate AS [Task_CustomerDelivery.Currency2Rate], 
            T.CustomerId AS [Task_CustomerDelivery.CustomerId], 
            T.TotalAmount AS [Task_CustomerDelivery.TotalAmount], 
            T.TotalAmount1 AS [Task_CustomerDelivery.TotalAmount1], 
            T.TotalAmount2 AS [Task_CustomerDelivery.TotalAmount2], 
            T.TotalChargeAmount AS [Task_CustomerDelivery.TotalChargeAmount], 
            T.TotalChargeAmount1 AS [Task_CustomerDelivery.TotalChargeAmount1], 
            T.TotalChargeAmount2 AS [Task_CustomerDelivery.TotalChargeAmount2], 
            T.Discount AS [Task_CustomerDelivery.Discount], 
            T.Discount1 AS [Task_CustomerDelivery.Discount1], 
            T.Discount2 AS [Task_CustomerDelivery.Discount2], 
            T.RequestedBy AS [Task_CustomerDelivery.RequestedBy], 
            T.Approved AS [Task_CustomerDelivery.Approved], 
            T.ApprovedBy AS [Task_CustomerDelivery.ApprovedBy], 
            T.ApprovedDate AS [Task_CustomerDelivery.ApprovedDate], 
            T.CancelReason AS [Task_CustomerDelivery.CancelReason], 
            T.Remarks AS [Task_CustomerDelivery.Remarks], 
            T.VoucherId AS [Task_CustomerDelivery.VoucherId], 
            T.LocationId AS [Task_CustomerDelivery.LocationId], 
            T.CompanyId AS [Task_CustomerDelivery.CompanyId], 
            T.EntryBy AS [Task_CustomerDelivery.EntryBy], 
            T.EntryDate AS [Task_CustomerDelivery.EntryDate], 
            True AS _from0
        FROM Inventory360Entities.Task_CustomerDelivery AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_CustomerDelivery_Charge.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView106()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_CustomerDelivery_Charge
        [BTS_OPSModel.Store.Task_CustomerDelivery_Charge](T1.[Task_CustomerDelivery_Charge.DeliveryChargeId], T1.[Task_CustomerDelivery_Charge.DeliveryId], T1.[Task_CustomerDelivery_Charge.ChargeEventId], T1.[Task_CustomerDelivery_Charge.ChargeAmount], T1.[Task_CustomerDelivery_Charge.Charge1Amount], T1.[Task_CustomerDelivery_Charge.Charge2Amount])
    FROM (
        SELECT 
            T.DeliveryChargeId AS [Task_CustomerDelivery_Charge.DeliveryChargeId], 
            T.DeliveryId AS [Task_CustomerDelivery_Charge.DeliveryId], 
            T.ChargeEventId AS [Task_CustomerDelivery_Charge.ChargeEventId], 
            T.ChargeAmount AS [Task_CustomerDelivery_Charge.ChargeAmount], 
            T.Charge1Amount AS [Task_CustomerDelivery_Charge.Charge1Amount], 
            T.Charge2Amount AS [Task_CustomerDelivery_Charge.Charge2Amount], 
            True AS _from0
        FROM Inventory360Entities.Task_CustomerDelivery_Charge AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_CustomerDeliveryDetail.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView107()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_CustomerDeliveryDetail
        [BTS_OPSModel.Store.Task_CustomerDeliveryDetail](T1.[Task_CustomerDeliveryDetail.DeliveryDetailId], T1.[Task_CustomerDeliveryDetail.DeliveryId], T1.[Task_CustomerDeliveryDetail.ComplainReceiveId], T1.[Task_CustomerDeliveryDetail.PreviousProductId], T1.[Task_CustomerDeliveryDetail.PreviousProductDimensionId], T1.[Task_CustomerDeliveryDetail.PreviousUnitTypeId], T1.[Task_CustomerDeliveryDetail.PreviousSerial], T1.[Task_CustomerDeliveryDetail.NewProductId], T1.[Task_CustomerDeliveryDetail.NewProductDimensionId], T1.[Task_CustomerDeliveryDetail.NewUnitTypeId], T1.[Task_CustomerDeliveryDetail.NewSerial], T1.[Task_CustomerDeliveryDetail.Cost], T1.[Task_CustomerDeliveryDetail.Cost1], T1.[Task_CustomerDeliveryDetail.Cost2], T1.[Task_CustomerDeliveryDetail.IsAdjustmentRequired], T1.[Task_CustomerDeliveryDetail.AdjustmentType], T1.[Task_CustomerDeliveryDetail.AdjustedAmount], T1.[Task_CustomerDeliveryDetail.AdjustedAmount1], T1.[Task_CustomerDeliveryDetail.AdjustedAmount2], T1.[Task_CustomerDeliveryDetail.DeliveryType], T1.[Task_CustomerDeliveryDetail.TotalSpareAmount], T1.[Task_CustomerDeliveryDetail.TotalSpareAmount1], T1.[Task_CustomerDeliveryDetail.TotalSpareAmount2], T1.[Task_CustomerDeliveryDetail.TotalSpareDiscount], T1.[Task_CustomerDeliveryDetail.TotalSpareDiscount1], T1.[Task_CustomerDeliveryDetail.TotalSpareDiscount2], T1.[Task_CustomerDeliveryDetail.TotalServiceAmount], T1.[Task_CustomerDeliveryDetail.TotalServiceAmount1], T1.[Task_CustomerDeliveryDetail.TotalServiceAmount2], T1.[Task_CustomerDeliveryDetail.TotalServiceDiscount], T1.[Task_CustomerDeliveryDetail.TotalServiceDiscount1], T1.[Task_CustomerDeliveryDetail.TotalServiceDiscount2])
    FROM (
        SELECT 
            T.DeliveryDetailId AS [Task_CustomerDeliveryDetail.DeliveryDetailId], 
            T.DeliveryId AS [Task_CustomerDeliveryDetail.DeliveryId], 
            T.ComplainReceiveId AS [Task_CustomerDeliveryDetail.ComplainReceiveId], 
            T.PreviousProductId AS [Task_CustomerDeliveryDetail.PreviousProductId], 
            T.PreviousProductDimensionId AS [Task_CustomerDeliveryDetail.PreviousProductDimensionId], 
            T.PreviousUnitTypeId AS [Task_CustomerDeliveryDetail.PreviousUnitTypeId], 
            T.PreviousSerial AS [Task_CustomerDeliveryDetail.PreviousSerial], 
            T.NewProductId AS [Task_CustomerDeliveryDetail.NewProductId], 
            T.NewProductDimensionId AS [Task_CustomerDeliveryDetail.NewProductDimensionId], 
            T.NewUnitTypeId AS [Task_CustomerDeliveryDetail.NewUnitTypeId], 
            T.NewSerial AS [Task_CustomerDeliveryDetail.NewSerial], 
            T.Cost AS [Task_CustomerDeliveryDetail.Cost], 
            T.Cost1 AS [Task_CustomerDeliveryDetail.Cost1], 
            T.Cost2 AS [Task_CustomerDeliveryDetail.Cost2], 
            T.IsAdjustmentRequired AS [Task_CustomerDeliveryDetail.IsAdjustmentRequired], 
            T.AdjustmentType AS [Task_CustomerDeliveryDetail.AdjustmentType], 
            T.AdjustedAmount AS [Task_CustomerDeliveryDetail.AdjustedAmount], 
            T.AdjustedAmount1 AS [Task_CustomerDeliveryDetail.AdjustedAmount1], 
            T.AdjustedAmount2 AS [Task_CustomerDeliveryDetail.AdjustedAmount2], 
            T.DeliveryType AS [Task_CustomerDeliveryDetail.DeliveryType], 
            T.TotalSpareAmount AS [Task_CustomerDeliveryDetail.TotalSpareAmount], 
            T.TotalSpareAmount1 AS [Task_CustomerDeliveryDetail.TotalSpareAmount1], 
            T.TotalSpareAmount2 AS [Task_CustomerDeliveryDetail.TotalSpareAmount2], 
            T.TotalSpareDiscount AS [Task_CustomerDeliveryDetail.TotalSpareDiscount], 
            T.TotalSpareDiscount1 AS [Task_CustomerDeliveryDetail.TotalSpareDiscount1], 
            T.TotalSpareDiscount2 AS [Task_CustomerDeliveryDetail.TotalSpareDiscount2], 
            T.TotalServiceAmount AS [Task_CustomerDeliveryDetail.TotalServiceAmount], 
            T.TotalServiceAmount1 AS [Task_CustomerDeliveryDetail.TotalServiceAmount1], 
            T.TotalServiceAmount2 AS [Task_CustomerDeliveryDetail.TotalServiceAmount2], 
            T.TotalServiceDiscount AS [Task_CustomerDeliveryDetail.TotalServiceDiscount], 
            T.TotalServiceDiscount1 AS [Task_CustomerDeliveryDetail.TotalServiceDiscount1], 
            T.TotalServiceDiscount2 AS [Task_CustomerDeliveryDetail.TotalServiceDiscount2], 
            True AS _from0
        FROM Inventory360Entities.Task_CustomerDeliveryDetail AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_CustomerDeliveryDetail_Problem.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView108()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_CustomerDeliveryDetail_Problem
        [BTS_OPSModel.Store.Task_CustomerDeliveryDetail_Problem](T1.[Task_CustomerDeliveryDetail_Problem.DeliveryDetailProblemId], T1.[Task_CustomerDeliveryDetail_Problem.DeliveryDetailId], T1.[Task_CustomerDeliveryDetail_Problem.ProblemId], T1.[Task_CustomerDeliveryDetail_Problem.Note])
    FROM (
        SELECT 
            T.DeliveryDetailProblemId AS [Task_CustomerDeliveryDetail_Problem.DeliveryDetailProblemId], 
            T.DeliveryDetailId AS [Task_CustomerDeliveryDetail_Problem.DeliveryDetailId], 
            T.ProblemId AS [Task_CustomerDeliveryDetail_Problem.ProblemId], 
            T.Note AS [Task_CustomerDeliveryDetail_Problem.Note], 
            True AS _from0
        FROM Inventory360Entities.Task_CustomerDeliveryDetail_Problem AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_CustomerDeliveryDetail_SpareProduct.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView109()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_CustomerDeliveryDetail_SpareProduct
        [BTS_OPSModel.Store.Task_CustomerDeliveryDetail_SpareProduct](T1.[Task_CustomerDeliveryDetail_SpareProduct.DeliveryDetailSpareId], T1.[Task_CustomerDeliveryDetail_SpareProduct.DeliveryDetailId], T1.[Task_CustomerDeliveryDetail_SpareProduct.ProductId], T1.[Task_CustomerDeliveryDetail_SpareProduct.ProductDimensionId], T1.[Task_CustomerDeliveryDetail_SpareProduct.UnitTypeId], T1.[Task_CustomerDeliveryDetail_SpareProduct.Quantity], T1.[Task_CustomerDeliveryDetail_SpareProduct.Price], T1.[Task_CustomerDeliveryDetail_SpareProduct.Price1], T1.[Task_CustomerDeliveryDetail_SpareProduct.Price2], T1.[Task_CustomerDeliveryDetail_SpareProduct.Discount], T1.[Task_CustomerDeliveryDetail_SpareProduct.Discount1], T1.[Task_CustomerDeliveryDetail_SpareProduct.Discount2], T1.[Task_CustomerDeliveryDetail_SpareProduct.Cost], T1.[Task_CustomerDeliveryDetail_SpareProduct.Cost1], T1.[Task_CustomerDeliveryDetail_SpareProduct.Cost2], T1.[Task_CustomerDeliveryDetail_SpareProduct.SpareType], T1.[Task_CustomerDeliveryDetail_SpareProduct.Remarks])
    FROM (
        SELECT 
            T.DeliveryDetailSpareId AS [Task_CustomerDeliveryDetail_SpareProduct.DeliveryDetailSpareId], 
            T.DeliveryDetailId AS [Task_CustomerDeliveryDetail_SpareProduct.DeliveryDetailId], 
            T.ProductId AS [Task_CustomerDeliveryDetail_SpareProduct.ProductId], 
            T.ProductDimensionId AS [Task_CustomerDeliveryDetail_SpareProduct.ProductDimensionId], 
            T.UnitTypeId AS [Task_CustomerDeliveryDetail_SpareProduct.UnitTypeId], 
            T.Quantity AS [Task_CustomerDeliveryDetail_SpareProduct.Quantity], 
            T.Price AS [Task_CustomerDeliveryDetail_SpareProduct.Price], 
            T.Price1 AS [Task_CustomerDeliveryDetail_SpareProduct.Price1], 
            T.Price2 AS [Task_CustomerDeliveryDetail_SpareProduct.Price2], 
            T.Discount AS [Task_CustomerDeliveryDetail_SpareProduct.Discount], 
            T.Discount1 AS [Task_CustomerDeliveryDetail_SpareProduct.Discount1], 
            T.Discount2 AS [Task_CustomerDeliveryDetail_SpareProduct.Discount2], 
            T.Cost AS [Task_CustomerDeliveryDetail_SpareProduct.Cost], 
            T.Cost1 AS [Task_CustomerDeliveryDetail_SpareProduct.Cost1], 
            T.Cost2 AS [Task_CustomerDeliveryDetail_SpareProduct.Cost2], 
            T.SpareType AS [Task_CustomerDeliveryDetail_SpareProduct.SpareType], 
            T.Remarks AS [Task_CustomerDeliveryDetail_SpareProduct.Remarks], 
            True AS _from0
        FROM Inventory360Entities.Task_CustomerDeliveryDetail_SpareProduct AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_CustomerDeliveryDetail_SpareSerial.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView110()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_CustomerDeliveryDetail_SpareSerial
        [BTS_OPSModel.Store.Task_CustomerDeliveryDetail_SpareSerial](T1.[Task_CustomerDeliveryDetail_SpareSerial.DeliveryDetailSpareSerialId], T1.[Task_CustomerDeliveryDetail_SpareSerial.DeliveryDetailSpareId], T1.[Task_CustomerDeliveryDetail_SpareSerial.Serial], T1.[Task_CustomerDeliveryDetail_SpareSerial.AdditionalSerial])
    FROM (
        SELECT 
            T.DeliveryDetailSpareSerialId AS [Task_CustomerDeliveryDetail_SpareSerial.DeliveryDetailSpareSerialId], 
            T.DeliveryDetailSpareId AS [Task_CustomerDeliveryDetail_SpareSerial.DeliveryDetailSpareId], 
            T.Serial AS [Task_CustomerDeliveryDetail_SpareSerial.Serial], 
            T.AdditionalSerial AS [Task_CustomerDeliveryDetail_SpareSerial.AdditionalSerial], 
            True AS _from0
        FROM Inventory360Entities.Task_CustomerDeliveryDetail_SpareSerial AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_CustomerDeliveryNos.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView111()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_CustomerDeliveryNos
        [BTS_OPSModel.Store.Task_CustomerDeliveryNos](T1.[Task_CustomerDeliveryNos.Id], T1.[Task_CustomerDeliveryNos.DeliveryNo], T1.[Task_CustomerDeliveryNos.Year], T1.[Task_CustomerDeliveryNos.CompanyId])
    FROM (
        SELECT 
            T.Id AS [Task_CustomerDeliveryNos.Id], 
            T.DeliveryNo AS [Task_CustomerDeliveryNos.DeliveryNo], 
            T.Year AS [Task_CustomerDeliveryNos.Year], 
            T.CompanyId AS [Task_CustomerDeliveryNos.CompanyId], 
            True AS _from0
        FROM Inventory360Entities.Task_CustomerDeliveryNos AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_DeliveryChallan.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView112()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_DeliveryChallan
        [BTS_OPSModel.Store.Task_DeliveryChallan](T1.[Task_DeliveryChallan.ChallanId], T1.[Task_DeliveryChallan.ChallanNo], T1.[Task_DeliveryChallan.ChallanDate], T1.[Task_DeliveryChallan.CustomerId], T1.[Task_DeliveryChallan.CustomerDetail], T1.[Task_DeliveryChallan.BuyerId], T1.[Task_DeliveryChallan.SalesOrderId], T1.[Task_DeliveryChallan.DeliveryFromId], T1.[Task_DeliveryChallan.DeliveryPlace], T1.[Task_DeliveryChallan.ContactPerson], T1.[Task_DeliveryChallan.ContactPersonNo], T1.[Task_DeliveryChallan.TransportId], T1.[Task_DeliveryChallan.TransportTypeId], T1.[Task_DeliveryChallan.VehicleNo], T1.[Task_DeliveryChallan.DriverName], T1.[Task_DeliveryChallan.DriverContactNo], T1.[Task_DeliveryChallan.IsSettledByInvoice], T1.[Task_DeliveryChallan.Approved], T1.[Task_DeliveryChallan.ApprovedBy], T1.[Task_DeliveryChallan.ApprovedDate], T1.[Task_DeliveryChallan.CancelReason], T1.[Task_DeliveryChallan.TransactionFrom], T1.[Task_DeliveryChallan.GovtDutyChallanNo], T1.[Task_DeliveryChallan.LocationId], T1.[Task_DeliveryChallan.CompanyId], T1.[Task_DeliveryChallan.EntryBy], T1.[Task_DeliveryChallan.EntryDate], T1.[Task_DeliveryChallan.EditedBy], T1.[Task_DeliveryChallan.EditedDate])
    FROM (
        SELECT 
            T.ChallanId AS [Task_DeliveryChallan.ChallanId], 
            T.ChallanNo AS [Task_DeliveryChallan.ChallanNo], 
            T.ChallanDate AS [Task_DeliveryChallan.ChallanDate], 
            T.CustomerId AS [Task_DeliveryChallan.CustomerId], 
            T.CustomerDetail AS [Task_DeliveryChallan.CustomerDetail], 
            T.BuyerId AS [Task_DeliveryChallan.BuyerId], 
            T.SalesOrderId AS [Task_DeliveryChallan.SalesOrderId], 
            T.DeliveryFromId AS [Task_DeliveryChallan.DeliveryFromId], 
            T.DeliveryPlace AS [Task_DeliveryChallan.DeliveryPlace], 
            T.ContactPerson AS [Task_DeliveryChallan.ContactPerson], 
            T.ContactPersonNo AS [Task_DeliveryChallan.ContactPersonNo], 
            T.TransportId AS [Task_DeliveryChallan.TransportId], 
            T.TransportTypeId AS [Task_DeliveryChallan.TransportTypeId], 
            T.VehicleNo AS [Task_DeliveryChallan.VehicleNo], 
            T.DriverName AS [Task_DeliveryChallan.DriverName], 
            T.DriverContactNo AS [Task_DeliveryChallan.DriverContactNo], 
            T.IsSettledByInvoice AS [Task_DeliveryChallan.IsSettledByInvoice], 
            T.Approved AS [Task_DeliveryChallan.Approved], 
            T.ApprovedBy AS [Task_DeliveryChallan.ApprovedBy], 
            T.ApprovedDate AS [Task_DeliveryChallan.ApprovedDate], 
            T.CancelReason AS [Task_DeliveryChallan.CancelReason], 
            T.TransactionFrom AS [Task_DeliveryChallan.TransactionFrom], 
            T.GovtDutyChallanNo AS [Task_DeliveryChallan.GovtDutyChallanNo], 
            T.LocationId AS [Task_DeliveryChallan.LocationId], 
            T.CompanyId AS [Task_DeliveryChallan.CompanyId], 
            T.EntryBy AS [Task_DeliveryChallan.EntryBy], 
            T.EntryDate AS [Task_DeliveryChallan.EntryDate], 
            T.EditedBy AS [Task_DeliveryChallan.EditedBy], 
            T.EditedDate AS [Task_DeliveryChallan.EditedDate], 
            True AS _from0
        FROM Inventory360Entities.Task_DeliveryChallan AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_DeliveryChallan_Charge.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView113()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_DeliveryChallan_Charge
        [BTS_OPSModel.Store.Task_DeliveryChallan_Charge](T1.[Task_DeliveryChallan_Charge.DeliveryChallanChargeId], T1.[Task_DeliveryChallan_Charge.ChallanId], T1.[Task_DeliveryChallan_Charge.ChargeEventId], T1.[Task_DeliveryChallan_Charge.ChargeAmount], T1.[Task_DeliveryChallan_Charge.Charge1Amount], T1.[Task_DeliveryChallan_Charge.Charge2Amount])
    FROM (
        SELECT 
            T.DeliveryChallanChargeId AS [Task_DeliveryChallan_Charge.DeliveryChallanChargeId], 
            T.ChallanId AS [Task_DeliveryChallan_Charge.ChallanId], 
            T.ChargeEventId AS [Task_DeliveryChallan_Charge.ChargeEventId], 
            T.ChargeAmount AS [Task_DeliveryChallan_Charge.ChargeAmount], 
            T.Charge1Amount AS [Task_DeliveryChallan_Charge.Charge1Amount], 
            T.Charge2Amount AS [Task_DeliveryChallan_Charge.Charge2Amount], 
            True AS _from0
        FROM Inventory360Entities.Task_DeliveryChallan_Charge AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_DeliveryChallanDetail.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView114()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_DeliveryChallanDetail
        [BTS_OPSModel.Store.Task_DeliveryChallanDetail](T1.[Task_DeliveryChallanDetail.ChallanDetailId], T1.[Task_DeliveryChallanDetail.ChallanId], T1.[Task_DeliveryChallanDetail.ProductId], T1.[Task_DeliveryChallanDetail.ProductDimensionId], T1.[Task_DeliveryChallanDetail.UnitTypeId], T1.[Task_DeliveryChallanDetail.Quantity], T1.[Task_DeliveryChallanDetail.InvoicedQuantity], T1.[Task_DeliveryChallanDetail.Price], T1.[Task_DeliveryChallanDetail.Price1], T1.[Task_DeliveryChallanDetail.Price2], T1.[Task_DeliveryChallanDetail.DiscountType], T1.[Task_DeliveryChallanDetail.DiscountValue], T1.[Task_DeliveryChallanDetail.Discount1Value], T1.[Task_DeliveryChallanDetail.Discount2Value], T1.[Task_DeliveryChallanDetail.Discount], T1.[Task_DeliveryChallanDetail.Discount1], T1.[Task_DeliveryChallanDetail.Discount2], T1.[Task_DeliveryChallanDetail.InvoiceDiscount], T1.[Task_DeliveryChallanDetail.InvoiceDiscount1], T1.[Task_DeliveryChallanDetail.InvoiceDiscount2], T1.[Task_DeliveryChallanDetail.Cost], T1.[Task_DeliveryChallanDetail.Cost1], T1.[Task_DeliveryChallanDetail.Cost2], T1.[Task_DeliveryChallanDetail.PrimaryUnitTypeId], T1.[Task_DeliveryChallanDetail.SecondaryUnitTypeId], T1.[Task_DeliveryChallanDetail.TertiaryUnitTypeId], T1.[Task_DeliveryChallanDetail.SecondaryConversionRatio], T1.[Task_DeliveryChallanDetail.TertiaryConversionRatio], T1.[Task_DeliveryChallanDetail.WareHouseId], T1.[Task_DeliveryChallanDetail.IsIncludingGovtDuty], T1.[Task_DeliveryChallanDetail.BatchNo], T1.[Task_DeliveryChallanDetail.ManufactureDate], T1.[Task_DeliveryChallanDetail.ExpireDate], T1.[Task_DeliveryChallanDetail.ReferenceNo], T1.[Task_DeliveryChallanDetail.ReferenceDate], T1.[Task_DeliveryChallanDetail.GoodsReceiveId], T1.[Task_DeliveryChallanDetail.ImportedStockInId], T1.[Task_DeliveryChallanDetail.SupplierId], T1.[Task_DeliveryChallanDetail.ShortSpecification], T1.[Task_DeliveryChallanDetail.IsWarrantyAvailable], T1.[Task_DeliveryChallanDetail.WarrantyDays], T1.[Task_DeliveryChallanDetail.IsServiceWarranty], T1.[Task_DeliveryChallanDetail.ServiceWarrantyDays])
    FROM (
        SELECT 
            T.ChallanDetailId AS [Task_DeliveryChallanDetail.ChallanDetailId], 
            T.ChallanId AS [Task_DeliveryChallanDetail.ChallanId], 
            T.ProductId AS [Task_DeliveryChallanDetail.ProductId], 
            T.ProductDimensionId AS [Task_DeliveryChallanDetail.ProductDimensionId], 
            T.UnitTypeId AS [Task_DeliveryChallanDetail.UnitTypeId], 
            T.Quantity AS [Task_DeliveryChallanDetail.Quantity], 
            T.InvoicedQuantity AS [Task_DeliveryChallanDetail.InvoicedQuantity], 
            T.Price AS [Task_DeliveryChallanDetail.Price], 
            T.Price1 AS [Task_DeliveryChallanDetail.Price1], 
            T.Price2 AS [Task_DeliveryChallanDetail.Price2], 
            T.DiscountType AS [Task_DeliveryChallanDetail.DiscountType], 
            T.DiscountValue AS [Task_DeliveryChallanDetail.DiscountValue], 
            T.Discount1Value AS [Task_DeliveryChallanDetail.Discount1Value], 
            T.Discount2Value AS [Task_DeliveryChallanDetail.Discount2Value], 
            T.Discount AS [Task_DeliveryChallanDetail.Discount], 
            T.Discount1 AS [Task_DeliveryChallanDetail.Discount1], 
            T.Discount2 AS [Task_DeliveryChallanDetail.Discount2], 
            T.InvoiceDiscount AS [Task_DeliveryChallanDetail.InvoiceDiscount], 
            T.InvoiceDiscount1 AS [Task_DeliveryChallanDetail.InvoiceDiscount1], 
            T.InvoiceDiscount2 AS [Task_DeliveryChallanDetail.InvoiceDiscount2], 
            T.Cost AS [Task_DeliveryChallanDetail.Cost], 
            T.Cost1 AS [Task_DeliveryChallanDetail.Cost1], 
            T.Cost2 AS [Task_DeliveryChallanDetail.Cost2], 
            T.PrimaryUnitTypeId AS [Task_DeliveryChallanDetail.PrimaryUnitTypeId], 
            T.SecondaryUnitTypeId AS [Task_DeliveryChallanDetail.SecondaryUnitTypeId], 
            T.TertiaryUnitTypeId AS [Task_DeliveryChallanDetail.TertiaryUnitTypeId], 
            T.SecondaryConversionRatio AS [Task_DeliveryChallanDetail.SecondaryConversionRatio], 
            T.TertiaryConversionRatio AS [Task_DeliveryChallanDetail.TertiaryConversionRatio], 
            T.WareHouseId AS [Task_DeliveryChallanDetail.WareHouseId], 
            T.IsIncludingGovtDuty AS [Task_DeliveryChallanDetail.IsIncludingGovtDuty], 
            T.BatchNo AS [Task_DeliveryChallanDetail.BatchNo], 
            T.ManufactureDate AS [Task_DeliveryChallanDetail.ManufactureDate], 
            T.ExpireDate AS [Task_DeliveryChallanDetail.ExpireDate], 
            T.ReferenceNo AS [Task_DeliveryChallanDetail.ReferenceNo], 
            T.ReferenceDate AS [Task_DeliveryChallanDetail.ReferenceDate], 
            T.GoodsReceiveId AS [Task_DeliveryChallanDetail.GoodsReceiveId], 
            T.ImportedStockInId AS [Task_DeliveryChallanDetail.ImportedStockInId], 
            T.SupplierId AS [Task_DeliveryChallanDetail.SupplierId], 
            T.ShortSpecification AS [Task_DeliveryChallanDetail.ShortSpecification], 
            T.IsWarrantyAvailable AS [Task_DeliveryChallanDetail.IsWarrantyAvailable], 
            T.WarrantyDays AS [Task_DeliveryChallanDetail.WarrantyDays], 
            T.IsServiceWarranty AS [Task_DeliveryChallanDetail.IsServiceWarranty], 
            T.ServiceWarrantyDays AS [Task_DeliveryChallanDetail.ServiceWarrantyDays], 
            True AS _from0
        FROM Inventory360Entities.Task_DeliveryChallanDetail AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_DeliveryChallanDetail_GovtDuty.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView115()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_DeliveryChallanDetail_GovtDuty
        [BTS_OPSModel.Store.Task_DeliveryChallanDetail_GovtDuty](T1.[Task_DeliveryChallanDetail_GovtDuty.Id], T1.[Task_DeliveryChallanDetail_GovtDuty.ChallanDetailId], T1.[Task_DeliveryChallanDetail_GovtDuty.GovtDutyId], T1.[Task_DeliveryChallanDetail_GovtDuty.RateType], T1.[Task_DeliveryChallanDetail_GovtDuty.RateValue], T1.[Task_DeliveryChallanDetail_GovtDuty.RateValue1], T1.[Task_DeliveryChallanDetail_GovtDuty.RateValue2], T1.[Task_DeliveryChallanDetail_GovtDuty.RateAmount], T1.[Task_DeliveryChallanDetail_GovtDuty.RateAmount1], T1.[Task_DeliveryChallanDetail_GovtDuty.RateAmount2], T1.[Task_DeliveryChallanDetail_GovtDuty.ExemptedType], T1.[Task_DeliveryChallanDetail_GovtDuty.ExemptedValue], T1.[Task_DeliveryChallanDetail_GovtDuty.ExemptedValue1], T1.[Task_DeliveryChallanDetail_GovtDuty.ExemptedValue2], T1.[Task_DeliveryChallanDetail_GovtDuty.ExemptedAmount], T1.[Task_DeliveryChallanDetail_GovtDuty.ExemptedAmount1], T1.[Task_DeliveryChallanDetail_GovtDuty.ExemptedAmount2])
    FROM (
        SELECT 
            T.Id AS [Task_DeliveryChallanDetail_GovtDuty.Id], 
            T.ChallanDetailId AS [Task_DeliveryChallanDetail_GovtDuty.ChallanDetailId], 
            T.GovtDutyId AS [Task_DeliveryChallanDetail_GovtDuty.GovtDutyId], 
            T.RateType AS [Task_DeliveryChallanDetail_GovtDuty.RateType], 
            T.RateValue AS [Task_DeliveryChallanDetail_GovtDuty.RateValue], 
            T.RateValue1 AS [Task_DeliveryChallanDetail_GovtDuty.RateValue1], 
            T.RateValue2 AS [Task_DeliveryChallanDetail_GovtDuty.RateValue2], 
            T.RateAmount AS [Task_DeliveryChallanDetail_GovtDuty.RateAmount], 
            T.RateAmount1 AS [Task_DeliveryChallanDetail_GovtDuty.RateAmount1], 
            T.RateAmount2 AS [Task_DeliveryChallanDetail_GovtDuty.RateAmount2], 
            T.ExemptedType AS [Task_DeliveryChallanDetail_GovtDuty.ExemptedType], 
            T.ExemptedValue AS [Task_DeliveryChallanDetail_GovtDuty.ExemptedValue], 
            T.ExemptedValue1 AS [Task_DeliveryChallanDetail_GovtDuty.ExemptedValue1], 
            T.ExemptedValue2 AS [Task_DeliveryChallanDetail_GovtDuty.ExemptedValue2], 
            T.ExemptedAmount AS [Task_DeliveryChallanDetail_GovtDuty.ExemptedAmount], 
            T.ExemptedAmount1 AS [Task_DeliveryChallanDetail_GovtDuty.ExemptedAmount1], 
            T.ExemptedAmount2 AS [Task_DeliveryChallanDetail_GovtDuty.ExemptedAmount2], 
            True AS _from0
        FROM Inventory360Entities.Task_DeliveryChallanDetail_GovtDuty AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_DeliveryChallanDetailSerial.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView116()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_DeliveryChallanDetailSerial
        [BTS_OPSModel.Store.Task_DeliveryChallanDetailSerial](T1.[Task_DeliveryChallanDetailSerial.ChallanDetailSerialId], T1.[Task_DeliveryChallanDetailSerial.ChallanDetailId], T1.[Task_DeliveryChallanDetailSerial.Serial], T1.[Task_DeliveryChallanDetailSerial.AdditionalSerial])
    FROM (
        SELECT 
            T.ChallanDetailSerialId AS [Task_DeliveryChallanDetailSerial.ChallanDetailSerialId], 
            T.ChallanDetailId AS [Task_DeliveryChallanDetailSerial.ChallanDetailId], 
            T.Serial AS [Task_DeliveryChallanDetailSerial.Serial], 
            T.AdditionalSerial AS [Task_DeliveryChallanDetailSerial.AdditionalSerial], 
            True AS _from0
        FROM Inventory360Entities.Task_DeliveryChallanDetailSerial AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_DeliveryChallanNos.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView117()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_DeliveryChallanNos
        [BTS_OPSModel.Store.Task_DeliveryChallanNos](T1.[Task_DeliveryChallanNos.Id], T1.[Task_DeliveryChallanNos.ChallanNo], T1.[Task_DeliveryChallanNos.Year], T1.[Task_DeliveryChallanNos.CompanyId])
    FROM (
        SELECT 
            T.Id AS [Task_DeliveryChallanNos.Id], 
            T.ChallanNo AS [Task_DeliveryChallanNos.ChallanNo], 
            T.Year AS [Task_DeliveryChallanNos.Year], 
            T.CompanyId AS [Task_DeliveryChallanNos.CompanyId], 
            True AS _from0
        FROM Inventory360Entities.Task_DeliveryChallanNos AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_GoodsReceive.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView118()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_GoodsReceive
        [BTS_OPSModel.Store.Task_GoodsReceive](T1.[Task_GoodsReceive.ReceiveId], T1.[Task_GoodsReceive.ReceiveNo], T1.[Task_GoodsReceive.ReceiveDate], T1.[Task_GoodsReceive.ReferenceNo], T1.[Task_GoodsReceive.ReferenceDate], T1.[Task_GoodsReceive.SupplierId], T1.[Task_GoodsReceive.OrderId], T1.[Task_GoodsReceive.Remarks], T1.[Task_GoodsReceive.SelectedCurrency], T1.[Task_GoodsReceive.Currency1Rate], T1.[Task_GoodsReceive.Currency2Rate], T1.[Task_GoodsReceive.IsSettledByRecFinalize], T1.[Task_GoodsReceive.Approved], T1.[Task_GoodsReceive.ApprovedBy], T1.[Task_GoodsReceive.ApprovedDate], T1.[Task_GoodsReceive.CancelReason], T1.[Task_GoodsReceive.PurchaseOperationType], T1.[Task_GoodsReceive.ReceiveAmount], T1.[Task_GoodsReceive.Receive1Amount], T1.[Task_GoodsReceive.Receive2Amount], T1.[Task_GoodsReceive.DiscountType], T1.[Task_GoodsReceive.DiscountValue], T1.[Task_GoodsReceive.Discount1Value], T1.[Task_GoodsReceive.Discount2Value], T1.[Task_GoodsReceive.DiscountAmount], T1.[Task_GoodsReceive.Discount1Amount], T1.[Task_GoodsReceive.Discount2Amount], T1.[Task_GoodsReceive.IsSettledByReturn], T1.[Task_GoodsReceive.VoucherId], T1.[Task_GoodsReceive.LocationId], T1.[Task_GoodsReceive.CompanyId], T1.[Task_GoodsReceive.EntryBy], T1.[Task_GoodsReceive.EntryDate], T1.[Task_GoodsReceive.EditedBy], T1.[Task_GoodsReceive.EditedDate])
    FROM (
        SELECT 
            T.ReceiveId AS [Task_GoodsReceive.ReceiveId], 
            T.ReceiveNo AS [Task_GoodsReceive.ReceiveNo], 
            T.ReceiveDate AS [Task_GoodsReceive.ReceiveDate], 
            T.ReferenceNo AS [Task_GoodsReceive.ReferenceNo], 
            T.ReferenceDate AS [Task_GoodsReceive.ReferenceDate], 
            T.SupplierId AS [Task_GoodsReceive.SupplierId], 
            T.OrderId AS [Task_GoodsReceive.OrderId], 
            T.Remarks AS [Task_GoodsReceive.Remarks], 
            T.SelectedCurrency AS [Task_GoodsReceive.SelectedCurrency], 
            T.Currency1Rate AS [Task_GoodsReceive.Currency1Rate], 
            T.Currency2Rate AS [Task_GoodsReceive.Currency2Rate], 
            T.IsSettledByRecFinalize AS [Task_GoodsReceive.IsSettledByRecFinalize], 
            T.Approved AS [Task_GoodsReceive.Approved], 
            T.ApprovedBy AS [Task_GoodsReceive.ApprovedBy], 
            T.ApprovedDate AS [Task_GoodsReceive.ApprovedDate], 
            T.CancelReason AS [Task_GoodsReceive.CancelReason], 
            T.PurchaseOperationType AS [Task_GoodsReceive.PurchaseOperationType], 
            T.ReceiveAmount AS [Task_GoodsReceive.ReceiveAmount], 
            T.Receive1Amount AS [Task_GoodsReceive.Receive1Amount], 
            T.Receive2Amount AS [Task_GoodsReceive.Receive2Amount], 
            T.DiscountType AS [Task_GoodsReceive.DiscountType], 
            T.DiscountValue AS [Task_GoodsReceive.DiscountValue], 
            T.Discount1Value AS [Task_GoodsReceive.Discount1Value], 
            T.Discount2Value AS [Task_GoodsReceive.Discount2Value], 
            T.DiscountAmount AS [Task_GoodsReceive.DiscountAmount], 
            T.Discount1Amount AS [Task_GoodsReceive.Discount1Amount], 
            T.Discount2Amount AS [Task_GoodsReceive.Discount2Amount], 
            T.IsSettledByReturn AS [Task_GoodsReceive.IsSettledByReturn], 
            T.VoucherId AS [Task_GoodsReceive.VoucherId], 
            T.LocationId AS [Task_GoodsReceive.LocationId], 
            T.CompanyId AS [Task_GoodsReceive.CompanyId], 
            T.EntryBy AS [Task_GoodsReceive.EntryBy], 
            T.EntryDate AS [Task_GoodsReceive.EntryDate], 
            T.EditedBy AS [Task_GoodsReceive.EditedBy], 
            T.EditedDate AS [Task_GoodsReceive.EditedDate], 
            True AS _from0
        FROM Inventory360Entities.Task_GoodsReceive AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_GoodsReceiveDetail.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView119()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_GoodsReceiveDetail
        [BTS_OPSModel.Store.Task_GoodsReceiveDetail](T1.[Task_GoodsReceiveDetail.ReceiveDetailId], T1.[Task_GoodsReceiveDetail.ReceiveId], T1.[Task_GoodsReceiveDetail.ProductEntrySequence], T1.[Task_GoodsReceiveDetail.ProductId], T1.[Task_GoodsReceiveDetail.ProductDimensionId], T1.[Task_GoodsReceiveDetail.UnitTypeId], T1.[Task_GoodsReceiveDetail.WarehouseId], T1.[Task_GoodsReceiveDetail.Quantity], T1.[Task_GoodsReceiveDetail.FinalizedQuantity], T1.[Task_GoodsReceiveDetail.Price], T1.[Task_GoodsReceiveDetail.Price1], T1.[Task_GoodsReceiveDetail.Price2], T1.[Task_GoodsReceiveDetail.BatchNo], T1.[Task_GoodsReceiveDetail.ManufactureDate], T1.[Task_GoodsReceiveDetail.ExpireDate], T1.[Task_GoodsReceiveDetail.Discount], T1.[Task_GoodsReceiveDetail.Discount1], T1.[Task_GoodsReceiveDetail.Discount2], T1.[Task_GoodsReceiveDetail.PrimaryUnitTypeId], T1.[Task_GoodsReceiveDetail.SecondaryUnitTypeId], T1.[Task_GoodsReceiveDetail.TertiaryUnitTypeId], T1.[Task_GoodsReceiveDetail.SecondaryConversionRatio], T1.[Task_GoodsReceiveDetail.TertiaryConversionRatio], T1.[Task_GoodsReceiveDetail.ReturnedQuantity])
    FROM (
        SELECT 
            T.ReceiveDetailId AS [Task_GoodsReceiveDetail.ReceiveDetailId], 
            T.ReceiveId AS [Task_GoodsReceiveDetail.ReceiveId], 
            T.ProductEntrySequence AS [Task_GoodsReceiveDetail.ProductEntrySequence], 
            T.ProductId AS [Task_GoodsReceiveDetail.ProductId], 
            T.ProductDimensionId AS [Task_GoodsReceiveDetail.ProductDimensionId], 
            T.UnitTypeId AS [Task_GoodsReceiveDetail.UnitTypeId], 
            T.WarehouseId AS [Task_GoodsReceiveDetail.WarehouseId], 
            T.Quantity AS [Task_GoodsReceiveDetail.Quantity], 
            T.FinalizedQuantity AS [Task_GoodsReceiveDetail.FinalizedQuantity], 
            T.Price AS [Task_GoodsReceiveDetail.Price], 
            T.Price1 AS [Task_GoodsReceiveDetail.Price1], 
            T.Price2 AS [Task_GoodsReceiveDetail.Price2], 
            T.BatchNo AS [Task_GoodsReceiveDetail.BatchNo], 
            T.ManufactureDate AS [Task_GoodsReceiveDetail.ManufactureDate], 
            T.ExpireDate AS [Task_GoodsReceiveDetail.ExpireDate], 
            T.Discount AS [Task_GoodsReceiveDetail.Discount], 
            T.Discount1 AS [Task_GoodsReceiveDetail.Discount1], 
            T.Discount2 AS [Task_GoodsReceiveDetail.Discount2], 
            T.PrimaryUnitTypeId AS [Task_GoodsReceiveDetail.PrimaryUnitTypeId], 
            T.SecondaryUnitTypeId AS [Task_GoodsReceiveDetail.SecondaryUnitTypeId], 
            T.TertiaryUnitTypeId AS [Task_GoodsReceiveDetail.TertiaryUnitTypeId], 
            T.SecondaryConversionRatio AS [Task_GoodsReceiveDetail.SecondaryConversionRatio], 
            T.TertiaryConversionRatio AS [Task_GoodsReceiveDetail.TertiaryConversionRatio], 
            T.ReturnedQuantity AS [Task_GoodsReceiveDetail.ReturnedQuantity], 
            True AS _from0
        FROM Inventory360Entities.Task_GoodsReceiveDetail AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_GoodsReceiveDetailSerial.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView120()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_GoodsReceiveDetailSerial
        [BTS_OPSModel.Store.Task_GoodsReceiveDetailSerial](T1.[Task_GoodsReceiveDetailSerial.ReceiveDetailSerialId], T1.[Task_GoodsReceiveDetailSerial.ReceiveDetailId], T1.[Task_GoodsReceiveDetailSerial.Serial], T1.[Task_GoodsReceiveDetailSerial.AdditionalSerial], T1.[Task_GoodsReceiveDetailSerial.IsReturned])
    FROM (
        SELECT 
            T.ReceiveDetailSerialId AS [Task_GoodsReceiveDetailSerial.ReceiveDetailSerialId], 
            T.ReceiveDetailId AS [Task_GoodsReceiveDetailSerial.ReceiveDetailId], 
            T.Serial AS [Task_GoodsReceiveDetailSerial.Serial], 
            T.AdditionalSerial AS [Task_GoodsReceiveDetailSerial.AdditionalSerial], 
            T.IsReturned AS [Task_GoodsReceiveDetailSerial.IsReturned], 
            True AS _from0
        FROM Inventory360Entities.Task_GoodsReceiveDetailSerial AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_GoodsReceiveNos.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView121()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_GoodsReceiveNos
        [BTS_OPSModel.Store.Task_GoodsReceiveNos](T1.[Task_GoodsReceiveNos.Id], T1.[Task_GoodsReceiveNos.ReceiveNo], T1.[Task_GoodsReceiveNos.Year], T1.[Task_GoodsReceiveNos.CompanyId])
    FROM (
        SELECT 
            T.Id AS [Task_GoodsReceiveNos.Id], 
            T.ReceiveNo AS [Task_GoodsReceiveNos.ReceiveNo], 
            T.Year AS [Task_GoodsReceiveNos.Year], 
            T.CompanyId AS [Task_GoodsReceiveNos.CompanyId], 
            True AS _from0
        FROM Inventory360Entities.Task_GoodsReceiveNos AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_ImportCosting.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView122()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_ImportCosting
        [BTS_OPSModel.Store.Task_ImportCosting](T1.[Task_ImportCosting.ImportCostingId], T1.[Task_ImportCosting.ImportCostingNo], T1.[Task_ImportCosting.LCId], T1.[Task_ImportCosting.SelectedCurrency], T1.[Task_ImportCosting.Currency1Rate], T1.[Task_ImportCosting.Currency2Rate], T1.[Task_ImportCosting.Approved], T1.[Task_ImportCosting.ApprovedBy], T1.[Task_ImportCosting.ApprovedDate], T1.[Task_ImportCosting.CancelReason], T1.[Task_ImportCosting.LocationId], T1.[Task_ImportCosting.CompanyId], T1.[Task_ImportCosting.EntryBy], T1.[Task_ImportCosting.EntryDate])
    FROM (
        SELECT 
            T.ImportCostingId AS [Task_ImportCosting.ImportCostingId], 
            T.ImportCostingNo AS [Task_ImportCosting.ImportCostingNo], 
            T.LCId AS [Task_ImportCosting.LCId], 
            T.SelectedCurrency AS [Task_ImportCosting.SelectedCurrency], 
            T.Currency1Rate AS [Task_ImportCosting.Currency1Rate], 
            T.Currency2Rate AS [Task_ImportCosting.Currency2Rate], 
            T.Approved AS [Task_ImportCosting.Approved], 
            T.ApprovedBy AS [Task_ImportCosting.ApprovedBy], 
            T.ApprovedDate AS [Task_ImportCosting.ApprovedDate], 
            T.CancelReason AS [Task_ImportCosting.CancelReason], 
            T.LocationId AS [Task_ImportCosting.LocationId], 
            T.CompanyId AS [Task_ImportCosting.CompanyId], 
            T.EntryBy AS [Task_ImportCosting.EntryBy], 
            T.EntryDate AS [Task_ImportCosting.EntryDate], 
            True AS _from0
        FROM Inventory360Entities.Task_ImportCosting AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_ImportCostingDetail.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView123()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_ImportCostingDetail
        [BTS_OPSModel.Store.Task_ImportCostingDetail](T1.[Task_ImportCostingDetail.ImportCostingDetailId], T1.[Task_ImportCostingDetail.ImportCostingId], T1.[Task_ImportCostingDetail.CostingHeadId], T1.[Task_ImportCostingDetail.CostingType], T1.[Task_ImportCostingDetail.CostingValue], T1.[Task_ImportCostingDetail.CostingValue1], T1.[Task_ImportCostingDetail.CostingValue2], T1.[Task_ImportCostingDetail.CostingAmount], T1.[Task_ImportCostingDetail.CostingAmount1], T1.[Task_ImportCostingDetail.CostingAmount2])
    FROM (
        SELECT 
            T.ImportCostingDetailId AS [Task_ImportCostingDetail.ImportCostingDetailId], 
            T.ImportCostingId AS [Task_ImportCostingDetail.ImportCostingId], 
            T.CostingHeadId AS [Task_ImportCostingDetail.CostingHeadId], 
            T.CostingType AS [Task_ImportCostingDetail.CostingType], 
            T.CostingValue AS [Task_ImportCostingDetail.CostingValue], 
            T.CostingValue1 AS [Task_ImportCostingDetail.CostingValue1], 
            T.CostingValue2 AS [Task_ImportCostingDetail.CostingValue2], 
            T.CostingAmount AS [Task_ImportCostingDetail.CostingAmount], 
            T.CostingAmount1 AS [Task_ImportCostingDetail.CostingAmount1], 
            T.CostingAmount2 AS [Task_ImportCostingDetail.CostingAmount2], 
            True AS _from0
        FROM Inventory360Entities.Task_ImportCostingDetail AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_ImportCostingNos.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView124()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_ImportCostingNos
        [BTS_OPSModel.Store.Task_ImportCostingNos](T1.[Task_ImportCostingNos.Id], T1.[Task_ImportCostingNos.ImportCostingNos], T1.[Task_ImportCostingNos.Year], T1.[Task_ImportCostingNos.CompanyId])
    FROM (
        SELECT 
            T.Id AS [Task_ImportCostingNos.Id], 
            T.ImportCostingNos AS [Task_ImportCostingNos.ImportCostingNos], 
            T.Year AS [Task_ImportCostingNos.Year], 
            T.CompanyId AS [Task_ImportCostingNos.CompanyId], 
            True AS _from0
        FROM Inventory360Entities.Task_ImportCostingNos AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_ImportCostingProduct.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView125()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_ImportCostingProduct
        [BTS_OPSModel.Store.Task_ImportCostingProduct](T1.[Task_ImportCostingProduct.ImportCostingProductId], T1.[Task_ImportCostingProduct.ImportCostingId], T1.[Task_ImportCostingProduct.ProductId], T1.[Task_ImportCostingProduct.ProductDimensionId], T1.[Task_ImportCostingProduct.UnitTypeId], T1.[Task_ImportCostingProduct.Quantity], T1.[Task_ImportCostingProduct.LIMStockInQuantity], T1.[Task_ImportCostingProduct.Price], T1.[Task_ImportCostingProduct.Price1], T1.[Task_ImportCostingProduct.Price2], T1.[Task_ImportCostingProduct.WeightOrCBM], T1.[Task_ImportCostingProduct.PackingUnitTypeId], T1.[Task_ImportCostingProduct.PackingQuantity])
    FROM (
        SELECT 
            T.ImportCostingProductId AS [Task_ImportCostingProduct.ImportCostingProductId], 
            T.ImportCostingId AS [Task_ImportCostingProduct.ImportCostingId], 
            T.ProductId AS [Task_ImportCostingProduct.ProductId], 
            T.ProductDimensionId AS [Task_ImportCostingProduct.ProductDimensionId], 
            T.UnitTypeId AS [Task_ImportCostingProduct.UnitTypeId], 
            T.Quantity AS [Task_ImportCostingProduct.Quantity], 
            T.LIMStockInQuantity AS [Task_ImportCostingProduct.LIMStockInQuantity], 
            T.Price AS [Task_ImportCostingProduct.Price], 
            T.Price1 AS [Task_ImportCostingProduct.Price1], 
            T.Price2 AS [Task_ImportCostingProduct.Price2], 
            T.WeightOrCBM AS [Task_ImportCostingProduct.WeightOrCBM], 
            T.PackingUnitTypeId AS [Task_ImportCostingProduct.PackingUnitTypeId], 
            T.PackingQuantity AS [Task_ImportCostingProduct.PackingQuantity], 
            True AS _from0
        FROM Inventory360Entities.Task_ImportCostingProduct AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_ImportDocuments.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView126()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_ImportDocuments
        [BTS_OPSModel.Store.Task_ImportDocuments](T1.[Task_ImportDocuments.ImportDocumentId], T1.[Task_ImportDocuments.LCId], T1.[Task_ImportDocuments.CostingGroupId], T1.[Task_ImportDocuments.DocumentId], T1.[Task_ImportDocuments.EntryBy], T1.[Task_ImportDocuments.EntryDate])
    FROM (
        SELECT 
            T.ImportDocumentId AS [Task_ImportDocuments.ImportDocumentId], 
            T.LCId AS [Task_ImportDocuments.LCId], 
            T.CostingGroupId AS [Task_ImportDocuments.CostingGroupId], 
            T.DocumentId AS [Task_ImportDocuments.DocumentId], 
            T.EntryBy AS [Task_ImportDocuments.EntryBy], 
            T.EntryDate AS [Task_ImportDocuments.EntryDate], 
            True AS _from0
        FROM Inventory360Entities.Task_ImportDocuments AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_ImportedStockIn.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView127()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_ImportedStockIn
        [BTS_OPSModel.Store.Task_ImportedStockIn](T1.[Task_ImportedStockIn.StockInId], T1.[Task_ImportedStockIn.StockInNo], T1.[Task_ImportedStockIn.StockInDate], T1.[Task_ImportedStockIn.ImportAgainst], T1.[Task_ImportedStockIn.LIMStockInId], T1.[Task_ImportedStockIn.StockInLocationId], T1.[Task_ImportedStockIn.SelectedCurrency], T1.[Task_ImportedStockIn.Currency1Rate], T1.[Task_ImportedStockIn.Currency2Rate], T1.[Task_ImportedStockIn.ReferenceNo], T1.[Task_ImportedStockIn.ReferenceDate], T1.[Task_ImportedStockIn.Remarks], T1.[Task_ImportedStockIn.StockInAmount], T1.[Task_ImportedStockIn.StockIn1Amount], T1.[Task_ImportedStockIn.StockIn2Amount], T1.[Task_ImportedStockIn.Approved], T1.[Task_ImportedStockIn.ApprovedBy], T1.[Task_ImportedStockIn.ApprovedDate], T1.[Task_ImportedStockIn.CancelReason], T1.[Task_ImportedStockIn.LocationId], T1.[Task_ImportedStockIn.CompanyId], T1.[Task_ImportedStockIn.EntryBy], T1.[Task_ImportedStockIn.EntryDate])
    FROM (
        SELECT 
            T.StockInId AS [Task_ImportedStockIn.StockInId], 
            T.StockInNo AS [Task_ImportedStockIn.StockInNo], 
            T.StockInDate AS [Task_ImportedStockIn.StockInDate], 
            T.ImportAgainst AS [Task_ImportedStockIn.ImportAgainst], 
            T.LIMStockInId AS [Task_ImportedStockIn.LIMStockInId], 
            T.StockInLocationId AS [Task_ImportedStockIn.StockInLocationId], 
            T.SelectedCurrency AS [Task_ImportedStockIn.SelectedCurrency], 
            T.Currency1Rate AS [Task_ImportedStockIn.Currency1Rate], 
            T.Currency2Rate AS [Task_ImportedStockIn.Currency2Rate], 
            T.ReferenceNo AS [Task_ImportedStockIn.ReferenceNo], 
            T.ReferenceDate AS [Task_ImportedStockIn.ReferenceDate], 
            T.Remarks AS [Task_ImportedStockIn.Remarks], 
            T.StockInAmount AS [Task_ImportedStockIn.StockInAmount], 
            T.StockIn1Amount AS [Task_ImportedStockIn.StockIn1Amount], 
            T.StockIn2Amount AS [Task_ImportedStockIn.StockIn2Amount], 
            T.Approved AS [Task_ImportedStockIn.Approved], 
            T.ApprovedBy AS [Task_ImportedStockIn.ApprovedBy], 
            T.ApprovedDate AS [Task_ImportedStockIn.ApprovedDate], 
            T.CancelReason AS [Task_ImportedStockIn.CancelReason], 
            T.LocationId AS [Task_ImportedStockIn.LocationId], 
            T.CompanyId AS [Task_ImportedStockIn.CompanyId], 
            T.EntryBy AS [Task_ImportedStockIn.EntryBy], 
            T.EntryDate AS [Task_ImportedStockIn.EntryDate], 
            True AS _from0
        FROM Inventory360Entities.Task_ImportedStockIn AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_ImportedStockInDetail.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView128()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_ImportedStockInDetail
        [BTS_OPSModel.Store.Task_ImportedStockInDetail](T1.[Task_ImportedStockInDetail.StockInDetailId], T1.[Task_ImportedStockInDetail.StockInId], T1.[Task_ImportedStockInDetail.ProductId], T1.[Task_ImportedStockInDetail.ProductDimensionId], T1.[Task_ImportedStockInDetail.UnitTypeId], T1.[Task_ImportedStockInDetail.Quantity], T1.[Task_ImportedStockInDetail.NoCostQuantity], T1.[Task_ImportedStockInDetail.Price], T1.[Task_ImportedStockInDetail.Price1], T1.[Task_ImportedStockInDetail.Price2], T1.[Task_ImportedStockInDetail.PrimaryUnitTypeId], T1.[Task_ImportedStockInDetail.SecondaryUnitTypeId], T1.[Task_ImportedStockInDetail.TertiaryUnitTypeId], T1.[Task_ImportedStockInDetail.SecondaryConversionRatio], T1.[Task_ImportedStockInDetail.TertiaryConversionRatio], T1.[Task_ImportedStockInDetail.WareHouseId])
    FROM (
        SELECT 
            T.StockInDetailId AS [Task_ImportedStockInDetail.StockInDetailId], 
            T.StockInId AS [Task_ImportedStockInDetail.StockInId], 
            T.ProductId AS [Task_ImportedStockInDetail.ProductId], 
            T.ProductDimensionId AS [Task_ImportedStockInDetail.ProductDimensionId], 
            T.UnitTypeId AS [Task_ImportedStockInDetail.UnitTypeId], 
            T.Quantity AS [Task_ImportedStockInDetail.Quantity], 
            T.NoCostQuantity AS [Task_ImportedStockInDetail.NoCostQuantity], 
            T.Price AS [Task_ImportedStockInDetail.Price], 
            T.Price1 AS [Task_ImportedStockInDetail.Price1], 
            T.Price2 AS [Task_ImportedStockInDetail.Price2], 
            T.PrimaryUnitTypeId AS [Task_ImportedStockInDetail.PrimaryUnitTypeId], 
            T.SecondaryUnitTypeId AS [Task_ImportedStockInDetail.SecondaryUnitTypeId], 
            T.TertiaryUnitTypeId AS [Task_ImportedStockInDetail.TertiaryUnitTypeId], 
            T.SecondaryConversionRatio AS [Task_ImportedStockInDetail.SecondaryConversionRatio], 
            T.TertiaryConversionRatio AS [Task_ImportedStockInDetail.TertiaryConversionRatio], 
            T.WareHouseId AS [Task_ImportedStockInDetail.WareHouseId], 
            True AS _from0
        FROM Inventory360Entities.Task_ImportedStockInDetail AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_ImportedStockInDetailSerial.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView129()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_ImportedStockInDetailSerial
        [BTS_OPSModel.Store.Task_ImportedStockInDetailSerial](T1.[Task_ImportedStockInDetailSerial.StockInDetailSerialId], T1.[Task_ImportedStockInDetailSerial.StockInDetailId], T1.[Task_ImportedStockInDetailSerial.Serial], T1.[Task_ImportedStockInDetailSerial.AdditionalSerial])
    FROM (
        SELECT 
            T.StockInDetailSerialId AS [Task_ImportedStockInDetailSerial.StockInDetailSerialId], 
            T.StockInDetailId AS [Task_ImportedStockInDetailSerial.StockInDetailId], 
            T.Serial AS [Task_ImportedStockInDetailSerial.Serial], 
            T.AdditionalSerial AS [Task_ImportedStockInDetailSerial.AdditionalSerial], 
            True AS _from0
        FROM Inventory360Entities.Task_ImportedStockInDetailSerial AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_ImportedStockInNos.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView130()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_ImportedStockInNos
        [BTS_OPSModel.Store.Task_ImportedStockInNos](T1.[Task_ImportedStockInNos.Id], T1.[Task_ImportedStockInNos.StockInNo], T1.[Task_ImportedStockInNos.Year], T1.[Task_ImportedStockInNos.CompanyId])
    FROM (
        SELECT 
            T.Id AS [Task_ImportedStockInNos.Id], 
            T.StockInNo AS [Task_ImportedStockInNos.StockInNo], 
            T.Year AS [Task_ImportedStockInNos.Year], 
            T.CompanyId AS [Task_ImportedStockInNos.CompanyId], 
            True AS _from0
        FROM Inventory360Entities.Task_ImportedStockInNos AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_ItemRequisition.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView131()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_ItemRequisition
        [BTS_OPSModel.Store.Task_ItemRequisition](T1.[Task_ItemRequisition.RequisitionId], T1.[Task_ItemRequisition.RequisitionNo], T1.[Task_ItemRequisition.RequisitionDate], T1.[Task_ItemRequisition.RequestedBy], T1.[Task_ItemRequisition.Remarks], T1.[Task_ItemRequisition.IsSettled], T1.[Task_ItemRequisition.Approved], T1.[Task_ItemRequisition.ApprovedBy], T1.[Task_ItemRequisition.ApprovedDate], T1.[Task_ItemRequisition.CancelReason], T1.[Task_ItemRequisition.LocationId], T1.[Task_ItemRequisition.CompanyId], T1.[Task_ItemRequisition.EntryBy], T1.[Task_ItemRequisition.EntryDate])
    FROM (
        SELECT 
            T.RequisitionId AS [Task_ItemRequisition.RequisitionId], 
            T.RequisitionNo AS [Task_ItemRequisition.RequisitionNo], 
            T.RequisitionDate AS [Task_ItemRequisition.RequisitionDate], 
            T.RequestedBy AS [Task_ItemRequisition.RequestedBy], 
            T.Remarks AS [Task_ItemRequisition.Remarks], 
            T.IsSettled AS [Task_ItemRequisition.IsSettled], 
            T.Approved AS [Task_ItemRequisition.Approved], 
            T.ApprovedBy AS [Task_ItemRequisition.ApprovedBy], 
            T.ApprovedDate AS [Task_ItemRequisition.ApprovedDate], 
            T.CancelReason AS [Task_ItemRequisition.CancelReason], 
            T.LocationId AS [Task_ItemRequisition.LocationId], 
            T.CompanyId AS [Task_ItemRequisition.CompanyId], 
            T.EntryBy AS [Task_ItemRequisition.EntryBy], 
            T.EntryDate AS [Task_ItemRequisition.EntryDate], 
            True AS _from0
        FROM Inventory360Entities.Task_ItemRequisition AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_ItemRequisitionDetail.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView132()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_ItemRequisitionDetail
        [BTS_OPSModel.Store.Task_ItemRequisitionDetail](T1.[Task_ItemRequisitionDetail.RequisitionDetailId], T1.[Task_ItemRequisitionDetail.RequisitionId], T1.[Task_ItemRequisitionDetail.ProductId], T1.[Task_ItemRequisitionDetail.ProductDimensionId], T1.[Task_ItemRequisitionDetail.UnitTypeId], T1.[Task_ItemRequisitionDetail.Quantity], T1.[Task_ItemRequisitionDetail.FinalizedQuantity], T1.[Task_ItemRequisitionDetail.RequiredDate], T1.[Task_ItemRequisitionDetail.Reason])
    FROM (
        SELECT 
            T.RequisitionDetailId AS [Task_ItemRequisitionDetail.RequisitionDetailId], 
            T.RequisitionId AS [Task_ItemRequisitionDetail.RequisitionId], 
            T.ProductId AS [Task_ItemRequisitionDetail.ProductId], 
            T.ProductDimensionId AS [Task_ItemRequisitionDetail.ProductDimensionId], 
            T.UnitTypeId AS [Task_ItemRequisitionDetail.UnitTypeId], 
            T.Quantity AS [Task_ItemRequisitionDetail.Quantity], 
            T.FinalizedQuantity AS [Task_ItemRequisitionDetail.FinalizedQuantity], 
            T.RequiredDate AS [Task_ItemRequisitionDetail.RequiredDate], 
            T.Reason AS [Task_ItemRequisitionDetail.Reason], 
            True AS _from0
        FROM Inventory360Entities.Task_ItemRequisitionDetail AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_ItemRequisitionNos.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView133()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_ItemRequisitionNos
        [BTS_OPSModel.Store.Task_ItemRequisitionNos](T1.[Task_ItemRequisitionNos.Id], T1.[Task_ItemRequisitionNos.RequisitionNo], T1.[Task_ItemRequisitionNos.Year], T1.[Task_ItemRequisitionNos.CompanyId])
    FROM (
        SELECT 
            T.Id AS [Task_ItemRequisitionNos.Id], 
            T.RequisitionNo AS [Task_ItemRequisitionNos.RequisitionNo], 
            T.Year AS [Task_ItemRequisitionNos.Year], 
            T.CompanyId AS [Task_ItemRequisitionNos.CompanyId], 
            True AS _from0
        FROM Inventory360Entities.Task_ItemRequisitionNos AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_LCOpening.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView134()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_LCOpening
        [BTS_OPSModel.Store.Task_LCOpening](T1.[Task_LCOpening.LCId], T1.[Task_LCOpening.LCNo], T1.[Task_LCOpening.LCDate], T1.[Task_LCOpening.ProformaInvoiceId], T1.[Task_LCOpening.ImporterBankId], T1.[Task_LCOpening.SupplierBankId], T1.[Task_LCOpening.SupplierId], T1.[Task_LCOpening.LCSupplierId], T1.[Task_LCOpening.SelectedCurrency], T1.[Task_LCOpening.Currency1Rate], T1.[Task_LCOpening.Currency2Rate], T1.[Task_LCOpening.LCAmount], T1.[Task_LCOpening.LCAmount1], T1.[Task_LCOpening.LCAmount2], T1.[Task_LCOpening.LCMargin], T1.[Task_LCOpening.LCMarginAmount], T1.[Task_LCOpening.LCMarginAmount1], T1.[Task_LCOpening.LCMarginAmount2], T1.[Task_LCOpening.LTRAmount], T1.[Task_LCOpening.LTRAmount1], T1.[Task_LCOpening.LTRAmount2], T1.[Task_LCOpening.LTRNo], T1.[Task_LCOpening.ReferenceNo], T1.[Task_LCOpening.ReferenceDate], T1.[Task_LCOpening.IsSettledByImportCosting], T1.[Task_LCOpening.Approved], T1.[Task_LCOpening.ApprovedBy], T1.[Task_LCOpening.ApprovedDate], T1.[Task_LCOpening.CancelReason], T1.[Task_LCOpening.LocationId], T1.[Task_LCOpening.CompanyId], T1.[Task_LCOpening.EntryBy], T1.[Task_LCOpening.EntryDate])
    FROM (
        SELECT 
            T.LCId AS [Task_LCOpening.LCId], 
            T.LCNo AS [Task_LCOpening.LCNo], 
            T.LCDate AS [Task_LCOpening.LCDate], 
            T.ProformaInvoiceId AS [Task_LCOpening.ProformaInvoiceId], 
            T.ImporterBankId AS [Task_LCOpening.ImporterBankId], 
            T.SupplierBankId AS [Task_LCOpening.SupplierBankId], 
            T.SupplierId AS [Task_LCOpening.SupplierId], 
            T.LCSupplierId AS [Task_LCOpening.LCSupplierId], 
            T.SelectedCurrency AS [Task_LCOpening.SelectedCurrency], 
            T.Currency1Rate AS [Task_LCOpening.Currency1Rate], 
            T.Currency2Rate AS [Task_LCOpening.Currency2Rate], 
            T.LCAmount AS [Task_LCOpening.LCAmount], 
            T.LCAmount1 AS [Task_LCOpening.LCAmount1], 
            T.LCAmount2 AS [Task_LCOpening.LCAmount2], 
            T.LCMargin AS [Task_LCOpening.LCMargin], 
            T.LCMarginAmount AS [Task_LCOpening.LCMarginAmount], 
            T.LCMarginAmount1 AS [Task_LCOpening.LCMarginAmount1], 
            T.LCMarginAmount2 AS [Task_LCOpening.LCMarginAmount2], 
            T.LTRAmount AS [Task_LCOpening.LTRAmount], 
            T.LTRAmount1 AS [Task_LCOpening.LTRAmount1], 
            T.LTRAmount2 AS [Task_LCOpening.LTRAmount2], 
            T.LTRNo AS [Task_LCOpening.LTRNo], 
            T.ReferenceNo AS [Task_LCOpening.ReferenceNo], 
            T.ReferenceDate AS [Task_LCOpening.ReferenceDate], 
            T.IsSettledByImportCosting AS [Task_LCOpening.IsSettledByImportCosting], 
            T.Approved AS [Task_LCOpening.Approved], 
            T.ApprovedBy AS [Task_LCOpening.ApprovedBy], 
            T.ApprovedDate AS [Task_LCOpening.ApprovedDate], 
            T.CancelReason AS [Task_LCOpening.CancelReason], 
            T.LocationId AS [Task_LCOpening.LocationId], 
            T.CompanyId AS [Task_LCOpening.CompanyId], 
            T.EntryBy AS [Task_LCOpening.EntryBy], 
            T.EntryDate AS [Task_LCOpening.EntryDate], 
            True AS _from0
        FROM Inventory360Entities.Task_LCOpening AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_LCOpeningNos.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView135()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_LCOpeningNos
        [BTS_OPSModel.Store.Task_LCOpeningNos](T1.[Task_LCOpeningNos.Id], T1.[Task_LCOpeningNos.LCOpeningNo], T1.[Task_LCOpeningNos.Year], T1.[Task_LCOpeningNos.CompanyId])
    FROM (
        SELECT 
            T.Id AS [Task_LCOpeningNos.Id], 
            T.LCOpeningNo AS [Task_LCOpeningNos.LCOpeningNo], 
            T.Year AS [Task_LCOpeningNos.Year], 
            T.CompanyId AS [Task_LCOpeningNos.CompanyId], 
            True AS _from0
        FROM Inventory360Entities.Task_LCOpeningNos AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_LIMStockIn.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView136()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_LIMStockIn
        [BTS_OPSModel.Store.Task_LIMStockIn](T1.[Task_LIMStockIn.StockInId], T1.[Task_LIMStockIn.StockInNo], T1.[Task_LIMStockIn.StockInDate], T1.[Task_LIMStockIn.LIMAgainst], T1.[Task_LIMStockIn.ProformaInvoiceId], T1.[Task_LIMStockIn.PartShipmentNo], T1.[Task_LIMStockIn.SelectedCurrency], T1.[Task_LIMStockIn.Currency1Rate], T1.[Task_LIMStockIn.Currency2Rate], T1.[Task_LIMStockIn.ReferenceNo], T1.[Task_LIMStockIn.ReferenceDate], T1.[Task_LIMStockIn.Remarks], T1.[Task_LIMStockIn.StockInAmount], T1.[Task_LIMStockIn.StockIn1Amount], T1.[Task_LIMStockIn.StockIn2Amount], T1.[Task_LIMStockIn.IsSettledByImportIn], T1.[Task_LIMStockIn.Approved], T1.[Task_LIMStockIn.ApprovedBy], T1.[Task_LIMStockIn.ApprovedDate], T1.[Task_LIMStockIn.CancelReason], T1.[Task_LIMStockIn.LocationId], T1.[Task_LIMStockIn.CompanyId], T1.[Task_LIMStockIn.EntryBy], T1.[Task_LIMStockIn.EntryDate])
    FROM (
        SELECT 
            T.StockInId AS [Task_LIMStockIn.StockInId], 
            T.StockInNo AS [Task_LIMStockIn.StockInNo], 
            T.StockInDate AS [Task_LIMStockIn.StockInDate], 
            T.LIMAgainst AS [Task_LIMStockIn.LIMAgainst], 
            T.ProformaInvoiceId AS [Task_LIMStockIn.ProformaInvoiceId], 
            T.PartShipmentNo AS [Task_LIMStockIn.PartShipmentNo], 
            T.SelectedCurrency AS [Task_LIMStockIn.SelectedCurrency], 
            T.Currency1Rate AS [Task_LIMStockIn.Currency1Rate], 
            T.Currency2Rate AS [Task_LIMStockIn.Currency2Rate], 
            T.ReferenceNo AS [Task_LIMStockIn.ReferenceNo], 
            T.ReferenceDate AS [Task_LIMStockIn.ReferenceDate], 
            T.Remarks AS [Task_LIMStockIn.Remarks], 
            T.StockInAmount AS [Task_LIMStockIn.StockInAmount], 
            T.StockIn1Amount AS [Task_LIMStockIn.StockIn1Amount], 
            T.StockIn2Amount AS [Task_LIMStockIn.StockIn2Amount], 
            T.IsSettledByImportIn AS [Task_LIMStockIn.IsSettledByImportIn], 
            T.Approved AS [Task_LIMStockIn.Approved], 
            T.ApprovedBy AS [Task_LIMStockIn.ApprovedBy], 
            T.ApprovedDate AS [Task_LIMStockIn.ApprovedDate], 
            T.CancelReason AS [Task_LIMStockIn.CancelReason], 
            T.LocationId AS [Task_LIMStockIn.LocationId], 
            T.CompanyId AS [Task_LIMStockIn.CompanyId], 
            T.EntryBy AS [Task_LIMStockIn.EntryBy], 
            T.EntryDate AS [Task_LIMStockIn.EntryDate], 
            True AS _from0
        FROM Inventory360Entities.Task_LIMStockIn AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_LIMStockInDetail.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView137()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_LIMStockInDetail
        [BTS_OPSModel.Store.Task_LIMStockInDetail](T1.[Task_LIMStockInDetail.StockInDetailId], T1.[Task_LIMStockInDetail.StockInId], T1.[Task_LIMStockInDetail.PurchaseOrderNo], T1.[Task_LIMStockInDetail.ProductId], T1.[Task_LIMStockInDetail.ProductDimensionId], T1.[Task_LIMStockInDetail.UnitTypeId], T1.[Task_LIMStockInDetail.Quantity], T1.[Task_LIMStockInDetail.NoCostQuantity], T1.[Task_LIMStockInDetail.ImportInQuantity], T1.[Task_LIMStockInDetail.ImportInNoCostQuantity], T1.[Task_LIMStockInDetail.Price], T1.[Task_LIMStockInDetail.Price1], T1.[Task_LIMStockInDetail.Price2], T1.[Task_LIMStockInDetail.PrimaryUnitTypeId], T1.[Task_LIMStockInDetail.SecondaryUnitTypeId], T1.[Task_LIMStockInDetail.TertiaryUnitTypeId], T1.[Task_LIMStockInDetail.SecondaryConversionRatio], T1.[Task_LIMStockInDetail.TertiaryConversionRatio])
    FROM (
        SELECT 
            T.StockInDetailId AS [Task_LIMStockInDetail.StockInDetailId], 
            T.StockInId AS [Task_LIMStockInDetail.StockInId], 
            T.PurchaseOrderNo AS [Task_LIMStockInDetail.PurchaseOrderNo], 
            T.ProductId AS [Task_LIMStockInDetail.ProductId], 
            T.ProductDimensionId AS [Task_LIMStockInDetail.ProductDimensionId], 
            T.UnitTypeId AS [Task_LIMStockInDetail.UnitTypeId], 
            T.Quantity AS [Task_LIMStockInDetail.Quantity], 
            T.NoCostQuantity AS [Task_LIMStockInDetail.NoCostQuantity], 
            T.ImportInQuantity AS [Task_LIMStockInDetail.ImportInQuantity], 
            T.ImportInNoCostQuantity AS [Task_LIMStockInDetail.ImportInNoCostQuantity], 
            T.Price AS [Task_LIMStockInDetail.Price], 
            T.Price1 AS [Task_LIMStockInDetail.Price1], 
            T.Price2 AS [Task_LIMStockInDetail.Price2], 
            T.PrimaryUnitTypeId AS [Task_LIMStockInDetail.PrimaryUnitTypeId], 
            T.SecondaryUnitTypeId AS [Task_LIMStockInDetail.SecondaryUnitTypeId], 
            T.TertiaryUnitTypeId AS [Task_LIMStockInDetail.TertiaryUnitTypeId], 
            T.SecondaryConversionRatio AS [Task_LIMStockInDetail.SecondaryConversionRatio], 
            T.TertiaryConversionRatio AS [Task_LIMStockInDetail.TertiaryConversionRatio], 
            True AS _from0
        FROM Inventory360Entities.Task_LIMStockInDetail AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_LIMStockInNos.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView138()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_LIMStockInNos
        [BTS_OPSModel.Store.Task_LIMStockInNos](T1.[Task_LIMStockInNos.Id], T1.[Task_LIMStockInNos.StockInNo], T1.[Task_LIMStockInNos.Year], T1.[Task_LIMStockInNos.CompanyId])
    FROM (
        SELECT 
            T.Id AS [Task_LIMStockInNos.Id], 
            T.StockInNo AS [Task_LIMStockInNos.StockInNo], 
            T.Year AS [Task_LIMStockInNos.Year], 
            T.CompanyId AS [Task_LIMStockInNos.CompanyId], 
            True AS _from0
        FROM Inventory360Entities.Task_LIMStockInNos AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_PartyAdjustment.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView139()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_PartyAdjustment
        [BTS_OPSModel.Store.Task_PartyAdjustment](T1.[Task_PartyAdjustment.AdjustmentId], T1.[Task_PartyAdjustment.AdjustmentNo], T1.[Task_PartyAdjustment.AdjustmentDate], T1.[Task_PartyAdjustment.SelectedCurrency], T1.[Task_PartyAdjustment.Currency1Rate], T1.[Task_PartyAdjustment.Currency2Rate], T1.[Task_PartyAdjustment.AdjustmentFor], T1.[Task_PartyAdjustment.AdjustmentNature], T1.[Task_PartyAdjustment.AdjustmentType], T1.[Task_PartyAdjustment.TransactionFrom], T1.[Task_PartyAdjustment.ReferenceNo], T1.[Task_PartyAdjustment.Remarks], T1.[Task_PartyAdjustment.TotalAmount], T1.[Task_PartyAdjustment.TotalAmount1], T1.[Task_PartyAdjustment.TotalAmount2], T1.[Task_PartyAdjustment.Approved], T1.[Task_PartyAdjustment.ApprovedBy], T1.[Task_PartyAdjustment.ApprovedDate], T1.[Task_PartyAdjustment.CancelReason], T1.[Task_PartyAdjustment.VoucherId], T1.[Task_PartyAdjustment.LocationId], T1.[Task_PartyAdjustment.CompanyId], T1.[Task_PartyAdjustment.EntryBy], T1.[Task_PartyAdjustment.EntryDate])
    FROM (
        SELECT 
            T.AdjustmentId AS [Task_PartyAdjustment.AdjustmentId], 
            T.AdjustmentNo AS [Task_PartyAdjustment.AdjustmentNo], 
            T.AdjustmentDate AS [Task_PartyAdjustment.AdjustmentDate], 
            T.SelectedCurrency AS [Task_PartyAdjustment.SelectedCurrency], 
            T.Currency1Rate AS [Task_PartyAdjustment.Currency1Rate], 
            T.Currency2Rate AS [Task_PartyAdjustment.Currency2Rate], 
            T.AdjustmentFor AS [Task_PartyAdjustment.AdjustmentFor], 
            T.AdjustmentNature AS [Task_PartyAdjustment.AdjustmentNature], 
            T.AdjustmentType AS [Task_PartyAdjustment.AdjustmentType], 
            T.TransactionFrom AS [Task_PartyAdjustment.TransactionFrom], 
            T.ReferenceNo AS [Task_PartyAdjustment.ReferenceNo], 
            T.Remarks AS [Task_PartyAdjustment.Remarks], 
            T.TotalAmount AS [Task_PartyAdjustment.TotalAmount], 
            T.TotalAmount1 AS [Task_PartyAdjustment.TotalAmount1], 
            T.TotalAmount2 AS [Task_PartyAdjustment.TotalAmount2], 
            T.Approved AS [Task_PartyAdjustment.Approved], 
            T.ApprovedBy AS [Task_PartyAdjustment.ApprovedBy], 
            T.ApprovedDate AS [Task_PartyAdjustment.ApprovedDate], 
            T.CancelReason AS [Task_PartyAdjustment.CancelReason], 
            T.VoucherId AS [Task_PartyAdjustment.VoucherId], 
            T.LocationId AS [Task_PartyAdjustment.LocationId], 
            T.CompanyId AS [Task_PartyAdjustment.CompanyId], 
            T.EntryBy AS [Task_PartyAdjustment.EntryBy], 
            T.EntryDate AS [Task_PartyAdjustment.EntryDate], 
            True AS _from0
        FROM Inventory360Entities.Task_PartyAdjustment AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_PartyAdjustmentDetail.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView140()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_PartyAdjustmentDetail
        [BTS_OPSModel.Store.Task_PartyAdjustmentDetail](T1.[Task_PartyAdjustmentDetail.AdjustmentDetailId], T1.[Task_PartyAdjustmentDetail.AdjustmentId], T1.[Task_PartyAdjustmentDetail.CustomerId], T1.[Task_PartyAdjustmentDetail.SupplierId], T1.[Task_PartyAdjustmentDetail.Particulars], T1.[Task_PartyAdjustmentDetail.AdjustedAmount], T1.[Task_PartyAdjustmentDetail.AdjustedAmount1], T1.[Task_PartyAdjustmentDetail.AdjustedAmount2])
    FROM (
        SELECT 
            T.AdjustmentDetailId AS [Task_PartyAdjustmentDetail.AdjustmentDetailId], 
            T.AdjustmentId AS [Task_PartyAdjustmentDetail.AdjustmentId], 
            T.CustomerId AS [Task_PartyAdjustmentDetail.CustomerId], 
            T.SupplierId AS [Task_PartyAdjustmentDetail.SupplierId], 
            T.Particulars AS [Task_PartyAdjustmentDetail.Particulars], 
            T.AdjustedAmount AS [Task_PartyAdjustmentDetail.AdjustedAmount], 
            T.AdjustedAmount1 AS [Task_PartyAdjustmentDetail.AdjustedAmount1], 
            T.AdjustedAmount2 AS [Task_PartyAdjustmentDetail.AdjustedAmount2], 
            True AS _from0
        FROM Inventory360Entities.Task_PartyAdjustmentDetail AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_PartyAdjustmentNos.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView141()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_PartyAdjustmentNos
        [BTS_OPSModel.Store.Task_PartyAdjustmentNos](T1.[Task_PartyAdjustmentNos.Id], T1.[Task_PartyAdjustmentNos.AdjustmentNo], T1.[Task_PartyAdjustmentNos.Year], T1.[Task_PartyAdjustmentNos.CompanyId])
    FROM (
        SELECT 
            T.Id AS [Task_PartyAdjustmentNos.Id], 
            T.AdjustmentNo AS [Task_PartyAdjustmentNos.AdjustmentNo], 
            T.Year AS [Task_PartyAdjustmentNos.Year], 
            T.CompanyId AS [Task_PartyAdjustmentNos.CompanyId], 
            True AS _from0
        FROM Inventory360Entities.Task_PartyAdjustmentNos AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_Payment.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView142()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_Payment
        [BTS_OPSModel.Store.Task_Payment](T1.[Task_Payment.PaymentId], T1.[Task_Payment.PaymentNo], T1.[Task_Payment.PaymentDate], T1.[Task_Payment.PaymentAgainst], T1.[Task_Payment.SupplierId], T1.[Task_Payment.PaidBy], T1.[Task_Payment.SelectedCurrency], T1.[Task_Payment.Currency1Rate], T1.[Task_Payment.Currency2Rate], T1.[Task_Payment.PaidAmount], T1.[Task_Payment.PaidAmount1], T1.[Task_Payment.PaidAmount2], T1.[Task_Payment.SecurityDeposit], T1.[Task_Payment.SecurityDeposit1], T1.[Task_Payment.SecurityDeposit2], T1.[Task_Payment.RecoveryDate], T1.[Task_Payment.OthersAdjustment], T1.[Task_Payment.OthersAdjustment1], T1.[Task_Payment.OthersAdjustment2], T1.[Task_Payment.ReferenceNo], T1.[Task_Payment.Remarks], T1.[Task_Payment.OperationTypeId], T1.[Task_Payment.OperationalEventId], T1.[Task_Payment.Approved], T1.[Task_Payment.ApprovedBy], T1.[Task_Payment.ApprovedDate], T1.[Task_Payment.CancelReason], T1.[Task_Payment.VoucherId], T1.[Task_Payment.LocationId], T1.[Task_Payment.CompanyId], T1.[Task_Payment.EntryBy], T1.[Task_Payment.EntryDate], T1.[Task_Payment.EditedBy], T1.[Task_Payment.EditedDate])
    FROM (
        SELECT 
            T.PaymentId AS [Task_Payment.PaymentId], 
            T.PaymentNo AS [Task_Payment.PaymentNo], 
            T.PaymentDate AS [Task_Payment.PaymentDate], 
            T.PaymentAgainst AS [Task_Payment.PaymentAgainst], 
            T.SupplierId AS [Task_Payment.SupplierId], 
            T.PaidBy AS [Task_Payment.PaidBy], 
            T.SelectedCurrency AS [Task_Payment.SelectedCurrency], 
            T.Currency1Rate AS [Task_Payment.Currency1Rate], 
            T.Currency2Rate AS [Task_Payment.Currency2Rate], 
            T.PaidAmount AS [Task_Payment.PaidAmount], 
            T.PaidAmount1 AS [Task_Payment.PaidAmount1], 
            T.PaidAmount2 AS [Task_Payment.PaidAmount2], 
            T.SecurityDeposit AS [Task_Payment.SecurityDeposit], 
            T.SecurityDeposit1 AS [Task_Payment.SecurityDeposit1], 
            T.SecurityDeposit2 AS [Task_Payment.SecurityDeposit2], 
            T.RecoveryDate AS [Task_Payment.RecoveryDate], 
            T.OthersAdjustment AS [Task_Payment.OthersAdjustment], 
            T.OthersAdjustment1 AS [Task_Payment.OthersAdjustment1], 
            T.OthersAdjustment2 AS [Task_Payment.OthersAdjustment2], 
            T.ReferenceNo AS [Task_Payment.ReferenceNo], 
            T.Remarks AS [Task_Payment.Remarks], 
            T.OperationTypeId AS [Task_Payment.OperationTypeId], 
            T.OperationalEventId AS [Task_Payment.OperationalEventId], 
            T.Approved AS [Task_Payment.Approved], 
            T.ApprovedBy AS [Task_Payment.ApprovedBy], 
            T.ApprovedDate AS [Task_Payment.ApprovedDate], 
            T.CancelReason AS [Task_Payment.CancelReason], 
            T.VoucherId AS [Task_Payment.VoucherId], 
            T.LocationId AS [Task_Payment.LocationId], 
            T.CompanyId AS [Task_Payment.CompanyId], 
            T.EntryBy AS [Task_Payment.EntryBy], 
            T.EntryDate AS [Task_Payment.EntryDate], 
            T.EditedBy AS [Task_Payment.EditedBy], 
            T.EditedDate AS [Task_Payment.EditedDate], 
            True AS _from0
        FROM Inventory360Entities.Task_Payment AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_Payment_GovtDutyAdjustment.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView143()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_Payment_GovtDutyAdjustment
        [BTS_OPSModel.Store.Task_Payment_GovtDutyAdjustment](T1.[Task_Payment_GovtDutyAdjustment.PaymentAdjustmentId], T1.[Task_Payment_GovtDutyAdjustment.PaymentId], T1.[Task_Payment_GovtDutyAdjustment.GovtDutyAdjustmentId], T1.[Task_Payment_GovtDutyAdjustment.Amount], T1.[Task_Payment_GovtDutyAdjustment.Amount1], T1.[Task_Payment_GovtDutyAdjustment.Amount2])
    FROM (
        SELECT 
            T.PaymentAdjustmentId AS [Task_Payment_GovtDutyAdjustment.PaymentAdjustmentId], 
            T.PaymentId AS [Task_Payment_GovtDutyAdjustment.PaymentId], 
            T.GovtDutyAdjustmentId AS [Task_Payment_GovtDutyAdjustment.GovtDutyAdjustmentId], 
            T.Amount AS [Task_Payment_GovtDutyAdjustment.Amount], 
            T.Amount1 AS [Task_Payment_GovtDutyAdjustment.Amount1], 
            T.Amount2 AS [Task_Payment_GovtDutyAdjustment.Amount2], 
            True AS _from0
        FROM Inventory360Entities.Task_Payment_GovtDutyAdjustment AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_PaymentDetail.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView144()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_PaymentDetail
        [BTS_OPSModel.Store.Task_PaymentDetail](T1.[Task_PaymentDetail.PaymentDetailId], T1.[Task_PaymentDetail.PaymentId], T1.[Task_PaymentDetail.PaymentModeId], T1.[Task_PaymentDetail.Amount], T1.[Task_PaymentDetail.Amount1], T1.[Task_PaymentDetail.Amount2], T1.[Task_PaymentDetail.VoucherId])
    FROM (
        SELECT 
            T.PaymentDetailId AS [Task_PaymentDetail.PaymentDetailId], 
            T.PaymentId AS [Task_PaymentDetail.PaymentId], 
            T.PaymentModeId AS [Task_PaymentDetail.PaymentModeId], 
            T.Amount AS [Task_PaymentDetail.Amount], 
            T.Amount1 AS [Task_PaymentDetail.Amount1], 
            T.Amount2 AS [Task_PaymentDetail.Amount2], 
            T.VoucherId AS [Task_PaymentDetail.VoucherId], 
            True AS _from0
        FROM Inventory360Entities.Task_PaymentDetail AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_PaymentMapping.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView145()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_PaymentMapping
        [BTS_OPSModel.Store.Task_PaymentMapping](T1.[Task_PaymentMapping.MappingId], T1.[Task_PaymentMapping.PaymentId], T1.[Task_PaymentMapping.OrderId], T1.[Task_PaymentMapping.ReceiveId], T1.[Task_PaymentMapping.FinalizeId], T1.[Task_PaymentMapping.Amount], T1.[Task_PaymentMapping.Amount1], T1.[Task_PaymentMapping.Amount2])
    FROM (
        SELECT 
            T.MappingId AS [Task_PaymentMapping.MappingId], 
            T.PaymentId AS [Task_PaymentMapping.PaymentId], 
            T.OrderId AS [Task_PaymentMapping.OrderId], 
            T.ReceiveId AS [Task_PaymentMapping.ReceiveId], 
            T.FinalizeId AS [Task_PaymentMapping.FinalizeId], 
            T.Amount AS [Task_PaymentMapping.Amount], 
            T.Amount1 AS [Task_PaymentMapping.Amount1], 
            T.Amount2 AS [Task_PaymentMapping.Amount2], 
            True AS _from0
        FROM Inventory360Entities.Task_PaymentMapping AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_PaymentNos.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView146()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_PaymentNos
        [BTS_OPSModel.Store.Task_PaymentNos](T1.[Task_PaymentNos.Id], T1.[Task_PaymentNos.PaymentNo], T1.[Task_PaymentNos.Year], T1.[Task_PaymentNos.CompanyId])
    FROM (
        SELECT 
            T.Id AS [Task_PaymentNos.Id], 
            T.PaymentNo AS [Task_PaymentNos.PaymentNo], 
            T.Year AS [Task_PaymentNos.Year], 
            T.CompanyId AS [Task_PaymentNos.CompanyId], 
            True AS _from0
        FROM Inventory360Entities.Task_PaymentNos AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_PostedVoucher.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView147()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_PostedVoucher
        [BTS_OPSModel.Store.Task_PostedVoucher](T1.[Task_PostedVoucher.PostedVoucherId], T1.[Task_PostedVoucher.Date], T1.[Task_PostedVoucher.VoucherDetailId], T1.[Task_PostedVoucher.VoucherType], T1.[Task_PostedVoucher.AccountsId], T1.[Task_PostedVoucher.ProjectId], T1.[Task_PostedVoucher.Amount], T1.[Task_PostedVoucher.Currency1Rate], T1.[Task_PostedVoucher.Currency1Amount], T1.[Task_PostedVoucher.Currency2Rate], T1.[Task_PostedVoucher.Currency2Amount], T1.[Task_PostedVoucher.OperationalEventId], T1.[Task_PostedVoucher.LocationId], T1.[Task_PostedVoucher.CompanyId], T1.[Task_PostedVoucher.EntryBy], T1.[Task_PostedVoucher.EntryDate])
    FROM (
        SELECT 
            T.PostedVoucherId AS [Task_PostedVoucher.PostedVoucherId], 
            T.Date AS [Task_PostedVoucher.Date], 
            T.VoucherDetailId AS [Task_PostedVoucher.VoucherDetailId], 
            T.VoucherType AS [Task_PostedVoucher.VoucherType], 
            T.AccountsId AS [Task_PostedVoucher.AccountsId], 
            T.ProjectId AS [Task_PostedVoucher.ProjectId], 
            T.Amount AS [Task_PostedVoucher.Amount], 
            T.Currency1Rate AS [Task_PostedVoucher.Currency1Rate], 
            T.Currency1Amount AS [Task_PostedVoucher.Currency1Amount], 
            T.Currency2Rate AS [Task_PostedVoucher.Currency2Rate], 
            T.Currency2Amount AS [Task_PostedVoucher.Currency2Amount], 
            T.OperationalEventId AS [Task_PostedVoucher.OperationalEventId], 
            T.LocationId AS [Task_PostedVoucher.LocationId], 
            T.CompanyId AS [Task_PostedVoucher.CompanyId], 
            T.EntryBy AS [Task_PostedVoucher.EntryBy], 
            T.EntryDate AS [Task_PostedVoucher.EntryDate], 
            True AS _from0
        FROM Inventory360Entities.Task_PostedVoucher AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_ProformaInvoice.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView148()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_ProformaInvoice
        [BTS_OPSModel.Store.Task_ProformaInvoice](T1.[Task_ProformaInvoice.InvoiceId], T1.[Task_ProformaInvoice.InvoiceNo], T1.[Task_ProformaInvoice.InvoiceDate], T1.[Task_ProformaInvoice.SupplierId], T1.[Task_ProformaInvoice.SelectedCurrency], T1.[Task_ProformaInvoice.Currency1Rate], T1.[Task_ProformaInvoice.Currency2Rate], T1.[Task_ProformaInvoice.AmendmentNo], T1.[Task_ProformaInvoice.ShipmentMode], T1.[Task_ProformaInvoice.Incoterms], T1.[Task_ProformaInvoice.ReferenceNo], T1.[Task_ProformaInvoice.OperationTypeId], T1.[Task_ProformaInvoice.PortOfLoadingId], T1.[Task_ProformaInvoice.PortOfDischargeId], T1.[Task_ProformaInvoice.InvoiceAmount], T1.[Task_ProformaInvoice.Invoice1Amount], T1.[Task_ProformaInvoice.Invoice2Amount], T1.[Task_ProformaInvoice.TermsAndConditionsId], T1.[Task_ProformaInvoice.TermsAndConditionsDetail], T1.[Task_ProformaInvoice.IsSettledByLCOpening], T1.[Task_ProformaInvoice.Approved], T1.[Task_ProformaInvoice.ApprovedBy], T1.[Task_ProformaInvoice.ApprovedDate], T1.[Task_ProformaInvoice.CancelReason], T1.[Task_ProformaInvoice.LocationId], T1.[Task_ProformaInvoice.CompanyId], T1.[Task_ProformaInvoice.EntryBy], T1.[Task_ProformaInvoice.EntryDate])
    FROM (
        SELECT 
            T.InvoiceId AS [Task_ProformaInvoice.InvoiceId], 
            T.InvoiceNo AS [Task_ProformaInvoice.InvoiceNo], 
            T.InvoiceDate AS [Task_ProformaInvoice.InvoiceDate], 
            T.SupplierId AS [Task_ProformaInvoice.SupplierId], 
            T.SelectedCurrency AS [Task_ProformaInvoice.SelectedCurrency], 
            T.Currency1Rate AS [Task_ProformaInvoice.Currency1Rate], 
            T.Currency2Rate AS [Task_ProformaInvoice.Currency2Rate], 
            T.AmendmentNo AS [Task_ProformaInvoice.AmendmentNo], 
            T.ShipmentMode AS [Task_ProformaInvoice.ShipmentMode], 
            T.Incoterms AS [Task_ProformaInvoice.Incoterms], 
            T.ReferenceNo AS [Task_ProformaInvoice.ReferenceNo], 
            T.OperationTypeId AS [Task_ProformaInvoice.OperationTypeId], 
            T.PortOfLoadingId AS [Task_ProformaInvoice.PortOfLoadingId], 
            T.PortOfDischargeId AS [Task_ProformaInvoice.PortOfDischargeId], 
            T.InvoiceAmount AS [Task_ProformaInvoice.InvoiceAmount], 
            T.Invoice1Amount AS [Task_ProformaInvoice.Invoice1Amount], 
            T.Invoice2Amount AS [Task_ProformaInvoice.Invoice2Amount], 
            T.TermsAndConditionsId AS [Task_ProformaInvoice.TermsAndConditionsId], 
            T.TermsAndConditionsDetail AS [Task_ProformaInvoice.TermsAndConditionsDetail], 
            T.IsSettledByLCOpening AS [Task_ProformaInvoice.IsSettledByLCOpening], 
            T.Approved AS [Task_ProformaInvoice.Approved], 
            T.ApprovedBy AS [Task_ProformaInvoice.ApprovedBy], 
            T.ApprovedDate AS [Task_ProformaInvoice.ApprovedDate], 
            T.CancelReason AS [Task_ProformaInvoice.CancelReason], 
            T.LocationId AS [Task_ProformaInvoice.LocationId], 
            T.CompanyId AS [Task_ProformaInvoice.CompanyId], 
            T.EntryBy AS [Task_ProformaInvoice.EntryBy], 
            T.EntryDate AS [Task_ProformaInvoice.EntryDate], 
            True AS _from0
        FROM Inventory360Entities.Task_ProformaInvoice AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_ProformaInvoiceDetail.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView149()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_ProformaInvoiceDetail
        [BTS_OPSModel.Store.Task_ProformaInvoiceDetail](T1.[Task_ProformaInvoiceDetail.InvoiceDetailId], T1.[Task_ProformaInvoiceDetail.InvoiceId], T1.[Task_ProformaInvoiceDetail.PurchaseOrderId], T1.[Task_ProformaInvoiceDetail.ProductId], T1.[Task_ProformaInvoiceDetail.ProductDimensionId], T1.[Task_ProformaInvoiceDetail.UnitTypeId], T1.[Task_ProformaInvoiceDetail.Quantity], T1.[Task_ProformaInvoiceDetail.LIMStockInQuantity], T1.[Task_ProformaInvoiceDetail.Price], T1.[Task_ProformaInvoiceDetail.Price1], T1.[Task_ProformaInvoiceDetail.Price2], T1.[Task_ProformaInvoiceDetail.WeightOrCBM], T1.[Task_ProformaInvoiceDetail.PackingUnitTypeId], T1.[Task_ProformaInvoiceDetail.PackingQuantity])
    FROM (
        SELECT 
            T.InvoiceDetailId AS [Task_ProformaInvoiceDetail.InvoiceDetailId], 
            T.InvoiceId AS [Task_ProformaInvoiceDetail.InvoiceId], 
            T.PurchaseOrderId AS [Task_ProformaInvoiceDetail.PurchaseOrderId], 
            T.ProductId AS [Task_ProformaInvoiceDetail.ProductId], 
            T.ProductDimensionId AS [Task_ProformaInvoiceDetail.ProductDimensionId], 
            T.UnitTypeId AS [Task_ProformaInvoiceDetail.UnitTypeId], 
            T.Quantity AS [Task_ProformaInvoiceDetail.Quantity], 
            T.LIMStockInQuantity AS [Task_ProformaInvoiceDetail.LIMStockInQuantity], 
            T.Price AS [Task_ProformaInvoiceDetail.Price], 
            T.Price1 AS [Task_ProformaInvoiceDetail.Price1], 
            T.Price2 AS [Task_ProformaInvoiceDetail.Price2], 
            T.WeightOrCBM AS [Task_ProformaInvoiceDetail.WeightOrCBM], 
            T.PackingUnitTypeId AS [Task_ProformaInvoiceDetail.PackingUnitTypeId], 
            T.PackingQuantity AS [Task_ProformaInvoiceDetail.PackingQuantity], 
            True AS _from0
        FROM Inventory360Entities.Task_ProformaInvoiceDetail AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_ProformaInvoiceNos.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView150()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_ProformaInvoiceNos
        [BTS_OPSModel.Store.Task_ProformaInvoiceNos](T1.[Task_ProformaInvoiceNos.Id], T1.[Task_ProformaInvoiceNos.InvoiceNo], T1.[Task_ProformaInvoiceNos.Year], T1.[Task_ProformaInvoiceNos.CompanyId])
    FROM (
        SELECT 
            T.Id AS [Task_ProformaInvoiceNos.Id], 
            T.InvoiceNo AS [Task_ProformaInvoiceNos.InvoiceNo], 
            T.Year AS [Task_ProformaInvoiceNos.Year], 
            T.CompanyId AS [Task_ProformaInvoiceNos.CompanyId], 
            True AS _from0
        FROM Inventory360Entities.Task_ProformaInvoiceNos AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_PurchaseOrder.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView151()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_PurchaseOrder
        [BTS_OPSModel.Store.Task_PurchaseOrder](T1.[Task_PurchaseOrder.OrderId], T1.[Task_PurchaseOrder.OrderNo], T1.[Task_PurchaseOrder.OrderDate], T1.[Task_PurchaseOrder.PurchaseType], T1.[Task_PurchaseOrder.SelectedCurrency], T1.[Task_PurchaseOrder.Currency1Rate], T1.[Task_PurchaseOrder.Currency2Rate], T1.[Task_PurchaseOrder.SupplierId], T1.[Task_PurchaseOrder.ReferenceNo], T1.[Task_PurchaseOrder.ReferenceDate], T1.[Task_PurchaseOrder.PaymentModeId], T1.[Task_PurchaseOrder.Remarks], T1.[Task_PurchaseOrder.TermsAndConditionsId], T1.[Task_PurchaseOrder.TermsAndConditionsDetail], T1.[Task_PurchaseOrder.PaymentTermsId], T1.[Task_PurchaseOrder.PaymentTermsDetail], T1.[Task_PurchaseOrder.ShipmentType], T1.[Task_PurchaseOrder.DeliveryTo], T1.[Task_PurchaseOrder.DeliveryContactNo], T1.[Task_PurchaseOrder.DeliveryDate], T1.[Task_PurchaseOrder.IsSettledByGoodsReceive], T1.[Task_PurchaseOrder.Approved], T1.[Task_PurchaseOrder.ApprovedBy], T1.[Task_PurchaseOrder.ApprovedDate], T1.[Task_PurchaseOrder.CancelReason], T1.[Task_PurchaseOrder.OrderAmount], T1.[Task_PurchaseOrder.Order1Amount], T1.[Task_PurchaseOrder.Order2Amount], T1.[Task_PurchaseOrder.PaidAmount], T1.[Task_PurchaseOrder.Paid1Amount], T1.[Task_PurchaseOrder.Paid2Amount], T1.[Task_PurchaseOrder.DiscountType], T1.[Task_PurchaseOrder.DiscountValue], T1.[Task_PurchaseOrder.Discount1Value], T1.[Task_PurchaseOrder.Discount2Value], T1.[Task_PurchaseOrder.DiscountAmount], T1.[Task_PurchaseOrder.Discount1Amount], T1.[Task_PurchaseOrder.Discount2Amount], T1.[Task_PurchaseOrder.LocationId], T1.[Task_PurchaseOrder.CompanyId], T1.[Task_PurchaseOrder.EntryBy], T1.[Task_PurchaseOrder.EntryDate])
    FROM (
        SELECT 
            T.OrderId AS [Task_PurchaseOrder.OrderId], 
            T.OrderNo AS [Task_PurchaseOrder.OrderNo], 
            T.OrderDate AS [Task_PurchaseOrder.OrderDate], 
            T.PurchaseType AS [Task_PurchaseOrder.PurchaseType], 
            T.SelectedCurrency AS [Task_PurchaseOrder.SelectedCurrency], 
            T.Currency1Rate AS [Task_PurchaseOrder.Currency1Rate], 
            T.Currency2Rate AS [Task_PurchaseOrder.Currency2Rate], 
            T.SupplierId AS [Task_PurchaseOrder.SupplierId], 
            T.ReferenceNo AS [Task_PurchaseOrder.ReferenceNo], 
            T.ReferenceDate AS [Task_PurchaseOrder.ReferenceDate], 
            T.PaymentModeId AS [Task_PurchaseOrder.PaymentModeId], 
            T.Remarks AS [Task_PurchaseOrder.Remarks], 
            T.TermsAndConditionsId AS [Task_PurchaseOrder.TermsAndConditionsId], 
            T.TermsAndConditionsDetail AS [Task_PurchaseOrder.TermsAndConditionsDetail], 
            T.PaymentTermsId AS [Task_PurchaseOrder.PaymentTermsId], 
            T.PaymentTermsDetail AS [Task_PurchaseOrder.PaymentTermsDetail], 
            T.ShipmentType AS [Task_PurchaseOrder.ShipmentType], 
            T.DeliveryTo AS [Task_PurchaseOrder.DeliveryTo], 
            T.DeliveryContactNo AS [Task_PurchaseOrder.DeliveryContactNo], 
            T.DeliveryDate AS [Task_PurchaseOrder.DeliveryDate], 
            T.IsSettledByGoodsReceive AS [Task_PurchaseOrder.IsSettledByGoodsReceive], 
            T.Approved AS [Task_PurchaseOrder.Approved], 
            T.ApprovedBy AS [Task_PurchaseOrder.ApprovedBy], 
            T.ApprovedDate AS [Task_PurchaseOrder.ApprovedDate], 
            T.CancelReason AS [Task_PurchaseOrder.CancelReason], 
            T.OrderAmount AS [Task_PurchaseOrder.OrderAmount], 
            T.Order1Amount AS [Task_PurchaseOrder.Order1Amount], 
            T.Order2Amount AS [Task_PurchaseOrder.Order2Amount], 
            T.PaidAmount AS [Task_PurchaseOrder.PaidAmount], 
            T.Paid1Amount AS [Task_PurchaseOrder.Paid1Amount], 
            T.Paid2Amount AS [Task_PurchaseOrder.Paid2Amount], 
            T.DiscountType AS [Task_PurchaseOrder.DiscountType], 
            T.DiscountValue AS [Task_PurchaseOrder.DiscountValue], 
            T.Discount1Value AS [Task_PurchaseOrder.Discount1Value], 
            T.Discount2Value AS [Task_PurchaseOrder.Discount2Value], 
            T.DiscountAmount AS [Task_PurchaseOrder.DiscountAmount], 
            T.Discount1Amount AS [Task_PurchaseOrder.Discount1Amount], 
            T.Discount2Amount AS [Task_PurchaseOrder.Discount2Amount], 
            T.LocationId AS [Task_PurchaseOrder.LocationId], 
            T.CompanyId AS [Task_PurchaseOrder.CompanyId], 
            T.EntryBy AS [Task_PurchaseOrder.EntryBy], 
            T.EntryDate AS [Task_PurchaseOrder.EntryDate], 
            True AS _from0
        FROM Inventory360Entities.Task_PurchaseOrder AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_PurchaseOrderDetail.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView152()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_PurchaseOrderDetail
        [BTS_OPSModel.Store.Task_PurchaseOrderDetail](T1.[Task_PurchaseOrderDetail.OrderDetailId], T1.[Task_PurchaseOrderDetail.OrderId], T1.[Task_PurchaseOrderDetail.RequisitionId], T1.[Task_PurchaseOrderDetail.ProductId], T1.[Task_PurchaseOrderDetail.ProductDimensionId], T1.[Task_PurchaseOrderDetail.UnitTypeId], T1.[Task_PurchaseOrderDetail.Quantity], T1.[Task_PurchaseOrderDetail.ReceivedQuantity], T1.[Task_PurchaseOrderDetail.Price], T1.[Task_PurchaseOrderDetail.Price1], T1.[Task_PurchaseOrderDetail.Price2], T1.[Task_PurchaseOrderDetail.Discount], T1.[Task_PurchaseOrderDetail.Discount1], T1.[Task_PurchaseOrderDetail.Discount2], T1.[Task_PurchaseOrderDetail.PrimaryUnitTypeId], T1.[Task_PurchaseOrderDetail.SecondaryUnitTypeId], T1.[Task_PurchaseOrderDetail.TertiaryUnitTypeId], T1.[Task_PurchaseOrderDetail.SecondaryConversionRatio], T1.[Task_PurchaseOrderDetail.TertiaryConversionRatio])
    FROM (
        SELECT 
            T.OrderDetailId AS [Task_PurchaseOrderDetail.OrderDetailId], 
            T.OrderId AS [Task_PurchaseOrderDetail.OrderId], 
            T.RequisitionId AS [Task_PurchaseOrderDetail.RequisitionId], 
            T.ProductId AS [Task_PurchaseOrderDetail.ProductId], 
            T.ProductDimensionId AS [Task_PurchaseOrderDetail.ProductDimensionId], 
            T.UnitTypeId AS [Task_PurchaseOrderDetail.UnitTypeId], 
            T.Quantity AS [Task_PurchaseOrderDetail.Quantity], 
            T.ReceivedQuantity AS [Task_PurchaseOrderDetail.ReceivedQuantity], 
            T.Price AS [Task_PurchaseOrderDetail.Price], 
            T.Price1 AS [Task_PurchaseOrderDetail.Price1], 
            T.Price2 AS [Task_PurchaseOrderDetail.Price2], 
            T.Discount AS [Task_PurchaseOrderDetail.Discount], 
            T.Discount1 AS [Task_PurchaseOrderDetail.Discount1], 
            T.Discount2 AS [Task_PurchaseOrderDetail.Discount2], 
            T.PrimaryUnitTypeId AS [Task_PurchaseOrderDetail.PrimaryUnitTypeId], 
            T.SecondaryUnitTypeId AS [Task_PurchaseOrderDetail.SecondaryUnitTypeId], 
            T.TertiaryUnitTypeId AS [Task_PurchaseOrderDetail.TertiaryUnitTypeId], 
            T.SecondaryConversionRatio AS [Task_PurchaseOrderDetail.SecondaryConversionRatio], 
            T.TertiaryConversionRatio AS [Task_PurchaseOrderDetail.TertiaryConversionRatio], 
            True AS _from0
        FROM Inventory360Entities.Task_PurchaseOrderDetail AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_PurchaseOrderNos.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView153()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_PurchaseOrderNos
        [BTS_OPSModel.Store.Task_PurchaseOrderNos](T1.[Task_PurchaseOrderNos.Id], T1.[Task_PurchaseOrderNos.OrderNo], T1.[Task_PurchaseOrderNos.Year], T1.[Task_PurchaseOrderNos.CompanyId])
    FROM (
        SELECT 
            T.Id AS [Task_PurchaseOrderNos.Id], 
            T.OrderNo AS [Task_PurchaseOrderNos.OrderNo], 
            T.Year AS [Task_PurchaseOrderNos.Year], 
            T.CompanyId AS [Task_PurchaseOrderNos.CompanyId], 
            True AS _from0
        FROM Inventory360Entities.Task_PurchaseOrderNos AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_PurchaseReturn.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView154()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_PurchaseReturn
        [BTS_OPSModel.Store.Task_PurchaseReturn](T1.[Task_PurchaseReturn.ReturnId], T1.[Task_PurchaseReturn.ReturnNo], T1.[Task_PurchaseReturn.ReturnDate], T1.[Task_PurchaseReturn.AgainstPreviousPurchase], T1.[Task_PurchaseReturn.SupplierId], T1.[Task_PurchaseReturn.SelectedCurrency], T1.[Task_PurchaseReturn.Currency1Rate], T1.[Task_PurchaseReturn.Currency2Rate], T1.[Task_PurchaseReturn.ReturnAmount], T1.[Task_PurchaseReturn.Return1Amount], T1.[Task_PurchaseReturn.Return2Amount], T1.[Task_PurchaseReturn.Approved], T1.[Task_PurchaseReturn.ApprovedBy], T1.[Task_PurchaseReturn.ApprovedDate], T1.[Task_PurchaseReturn.CancelReason], T1.[Task_PurchaseReturn.Remarks], T1.[Task_PurchaseReturn.Reason], T1.[Task_PurchaseReturn.VoucherId], T1.[Task_PurchaseReturn.LocationId], T1.[Task_PurchaseReturn.CompanyId], T1.[Task_PurchaseReturn.EntryBy], T1.[Task_PurchaseReturn.EntryDate])
    FROM (
        SELECT 
            T.ReturnId AS [Task_PurchaseReturn.ReturnId], 
            T.ReturnNo AS [Task_PurchaseReturn.ReturnNo], 
            T.ReturnDate AS [Task_PurchaseReturn.ReturnDate], 
            T.AgainstPreviousPurchase AS [Task_PurchaseReturn.AgainstPreviousPurchase], 
            T.SupplierId AS [Task_PurchaseReturn.SupplierId], 
            T.SelectedCurrency AS [Task_PurchaseReturn.SelectedCurrency], 
            T.Currency1Rate AS [Task_PurchaseReturn.Currency1Rate], 
            T.Currency2Rate AS [Task_PurchaseReturn.Currency2Rate], 
            T.ReturnAmount AS [Task_PurchaseReturn.ReturnAmount], 
            T.Return1Amount AS [Task_PurchaseReturn.Return1Amount], 
            T.Return2Amount AS [Task_PurchaseReturn.Return2Amount], 
            T.Approved AS [Task_PurchaseReturn.Approved], 
            T.ApprovedBy AS [Task_PurchaseReturn.ApprovedBy], 
            T.ApprovedDate AS [Task_PurchaseReturn.ApprovedDate], 
            T.CancelReason AS [Task_PurchaseReturn.CancelReason], 
            T.Remarks AS [Task_PurchaseReturn.Remarks], 
            T.Reason AS [Task_PurchaseReturn.Reason], 
            T.VoucherId AS [Task_PurchaseReturn.VoucherId], 
            T.LocationId AS [Task_PurchaseReturn.LocationId], 
            T.CompanyId AS [Task_PurchaseReturn.CompanyId], 
            T.EntryBy AS [Task_PurchaseReturn.EntryBy], 
            T.EntryDate AS [Task_PurchaseReturn.EntryDate], 
            True AS _from0
        FROM Inventory360Entities.Task_PurchaseReturn AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_PurchaseReturnDetail.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView155()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_PurchaseReturnDetail
        [BTS_OPSModel.Store.Task_PurchaseReturnDetail](T1.[Task_PurchaseReturnDetail.ReturnDetailId], T1.[Task_PurchaseReturnDetail.ReturnId], T1.[Task_PurchaseReturnDetail.ReceiveId], T1.[Task_PurchaseReturnDetail.ProductId], T1.[Task_PurchaseReturnDetail.ProductDimensionId], T1.[Task_PurchaseReturnDetail.UnitTypeId], T1.[Task_PurchaseReturnDetail.Quantity], T1.[Task_PurchaseReturnDetail.Price], T1.[Task_PurchaseReturnDetail.Price1], T1.[Task_PurchaseReturnDetail.Price2], T1.[Task_PurchaseReturnDetail.PurchasedPrice], T1.[Task_PurchaseReturnDetail.PurchasedPrice1], T1.[Task_PurchaseReturnDetail.PurchasedPrice2], T1.[Task_PurchaseReturnDetail.DiscountAtPurchase], T1.[Task_PurchaseReturnDetail.Discount1AtPurchase], T1.[Task_PurchaseReturnDetail.Discount2AtPurchase], T1.[Task_PurchaseReturnDetail.GoodsReceiveDiscountAtPurchase], T1.[Task_PurchaseReturnDetail.GoodsReceiveDiscount1AtPurchase], T1.[Task_PurchaseReturnDetail.GoodsReceiveDiscount2AtPurchase], T1.[Task_PurchaseReturnDetail.Cost], T1.[Task_PurchaseReturnDetail.Cost1], T1.[Task_PurchaseReturnDetail.Cost2], T1.[Task_PurchaseReturnDetail.LossOrGainAmount], T1.[Task_PurchaseReturnDetail.LossOrGainAmount1], T1.[Task_PurchaseReturnDetail.LossOrGainAmount2], T1.[Task_PurchaseReturnDetail.PrimaryUnitTypeId], T1.[Task_PurchaseReturnDetail.SecondaryUnitTypeId], T1.[Task_PurchaseReturnDetail.TertiaryUnitTypeId], T1.[Task_PurchaseReturnDetail.SecondaryConversionRatio], T1.[Task_PurchaseReturnDetail.TertiaryConversionRatio], T1.[Task_PurchaseReturnDetail.WarehouseId])
    FROM (
        SELECT 
            T.ReturnDetailId AS [Task_PurchaseReturnDetail.ReturnDetailId], 
            T.ReturnId AS [Task_PurchaseReturnDetail.ReturnId], 
            T.ReceiveId AS [Task_PurchaseReturnDetail.ReceiveId], 
            T.ProductId AS [Task_PurchaseReturnDetail.ProductId], 
            T.ProductDimensionId AS [Task_PurchaseReturnDetail.ProductDimensionId], 
            T.UnitTypeId AS [Task_PurchaseReturnDetail.UnitTypeId], 
            T.Quantity AS [Task_PurchaseReturnDetail.Quantity], 
            T.Price AS [Task_PurchaseReturnDetail.Price], 
            T.Price1 AS [Task_PurchaseReturnDetail.Price1], 
            T.Price2 AS [Task_PurchaseReturnDetail.Price2], 
            T.PurchasedPrice AS [Task_PurchaseReturnDetail.PurchasedPrice], 
            T.PurchasedPrice1 AS [Task_PurchaseReturnDetail.PurchasedPrice1], 
            T.PurchasedPrice2 AS [Task_PurchaseReturnDetail.PurchasedPrice2], 
            T.DiscountAtPurchase AS [Task_PurchaseReturnDetail.DiscountAtPurchase], 
            T.Discount1AtPurchase AS [Task_PurchaseReturnDetail.Discount1AtPurchase], 
            T.Discount2AtPurchase AS [Task_PurchaseReturnDetail.Discount2AtPurchase], 
            T.GoodsReceiveDiscountAtPurchase AS [Task_PurchaseReturnDetail.GoodsReceiveDiscountAtPurchase], 
            T.GoodsReceiveDiscount1AtPurchase AS [Task_PurchaseReturnDetail.GoodsReceiveDiscount1AtPurchase], 
            T.GoodsReceiveDiscount2AtPurchase AS [Task_PurchaseReturnDetail.GoodsReceiveDiscount2AtPurchase], 
            T.Cost AS [Task_PurchaseReturnDetail.Cost], 
            T.Cost1 AS [Task_PurchaseReturnDetail.Cost1], 
            T.Cost2 AS [Task_PurchaseReturnDetail.Cost2], 
            T.LossOrGainAmount AS [Task_PurchaseReturnDetail.LossOrGainAmount], 
            T.LossOrGainAmount1 AS [Task_PurchaseReturnDetail.LossOrGainAmount1], 
            T.LossOrGainAmount2 AS [Task_PurchaseReturnDetail.LossOrGainAmount2], 
            T.PrimaryUnitTypeId AS [Task_PurchaseReturnDetail.PrimaryUnitTypeId], 
            T.SecondaryUnitTypeId AS [Task_PurchaseReturnDetail.SecondaryUnitTypeId], 
            T.TertiaryUnitTypeId AS [Task_PurchaseReturnDetail.TertiaryUnitTypeId], 
            T.SecondaryConversionRatio AS [Task_PurchaseReturnDetail.SecondaryConversionRatio], 
            T.TertiaryConversionRatio AS [Task_PurchaseReturnDetail.TertiaryConversionRatio], 
            T.WarehouseId AS [Task_PurchaseReturnDetail.WarehouseId], 
            True AS _from0
        FROM Inventory360Entities.Task_PurchaseReturnDetail AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_PurchaseReturnDetailSerial.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView156()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_PurchaseReturnDetailSerial
        [BTS_OPSModel.Store.Task_PurchaseReturnDetailSerial](T1.[Task_PurchaseReturnDetailSerial.ReturnDetailSerialId], T1.[Task_PurchaseReturnDetailSerial.ReturnDetailId], T1.[Task_PurchaseReturnDetailSerial.Serial], T1.[Task_PurchaseReturnDetailSerial.AdditionalSerial])
    FROM (
        SELECT 
            T.ReturnDetailSerialId AS [Task_PurchaseReturnDetailSerial.ReturnDetailSerialId], 
            T.ReturnDetailId AS [Task_PurchaseReturnDetailSerial.ReturnDetailId], 
            T.Serial AS [Task_PurchaseReturnDetailSerial.Serial], 
            T.AdditionalSerial AS [Task_PurchaseReturnDetailSerial.AdditionalSerial], 
            True AS _from0
        FROM Inventory360Entities.Task_PurchaseReturnDetailSerial AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_PurchaseReturnNos.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView157()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_PurchaseReturnNos
        [BTS_OPSModel.Store.Task_PurchaseReturnNos](T1.[Task_PurchaseReturnNos.Id], T1.[Task_PurchaseReturnNos.ReturnNo], T1.[Task_PurchaseReturnNos.Year], T1.[Task_PurchaseReturnNos.CompanyId])
    FROM (
        SELECT 
            T.Id AS [Task_PurchaseReturnNos.Id], 
            T.ReturnNo AS [Task_PurchaseReturnNos.ReturnNo], 
            T.Year AS [Task_PurchaseReturnNos.Year], 
            T.CompanyId AS [Task_PurchaseReturnNos.CompanyId], 
            True AS _from0
        FROM Inventory360Entities.Task_PurchaseReturnNos AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_ReceiveFinalize.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView158()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_ReceiveFinalize
        [BTS_OPSModel.Store.Task_ReceiveFinalize](T1.[Task_ReceiveFinalize.FinalizeId], T1.[Task_ReceiveFinalize.FinalizeNo], T1.[Task_ReceiveFinalize.FinalizeDate], T1.[Task_ReceiveFinalize.SupplierId], T1.[Task_ReceiveFinalize.SelectedCurrency], T1.[Task_ReceiveFinalize.Currency1Rate], T1.[Task_ReceiveFinalize.Currency2Rate], T1.[Task_ReceiveFinalize.FinalizeAmount], T1.[Task_ReceiveFinalize.Finalize1Amount], T1.[Task_ReceiveFinalize.Finalize2Amount], T1.[Task_ReceiveFinalize.Approved], T1.[Task_ReceiveFinalize.ApprovedBy], T1.[Task_ReceiveFinalize.ApprovedDate], T1.[Task_ReceiveFinalize.CancelReason], T1.[Task_ReceiveFinalize.IsSettledByPayment], T1.[Task_ReceiveFinalize.PaidAmount], T1.[Task_ReceiveFinalize.Paid1Amount], T1.[Task_ReceiveFinalize.Paid2Amount], T1.[Task_ReceiveFinalize.PurchaseOperationType], T1.[Task_ReceiveFinalize.TermsAndConditionsId], T1.[Task_ReceiveFinalize.TermsAndConditionsDetail], T1.[Task_ReceiveFinalize.PaymentTermsId], T1.[Task_ReceiveFinalize.PaymentTermsDetail], T1.[Task_ReceiveFinalize.DiscountType], T1.[Task_ReceiveFinalize.DiscountValue], T1.[Task_ReceiveFinalize.Discount1Value], T1.[Task_ReceiveFinalize.Discount2Value], T1.[Task_ReceiveFinalize.DiscountAmount], T1.[Task_ReceiveFinalize.Discount1Amount], T1.[Task_ReceiveFinalize.Discount2Amount], T1.[Task_ReceiveFinalize.VoucherId], T1.[Task_ReceiveFinalize.LocationId], T1.[Task_ReceiveFinalize.CompanyId], T1.[Task_ReceiveFinalize.EntryBy], T1.[Task_ReceiveFinalize.EntryDate])
    FROM (
        SELECT 
            T.FinalizeId AS [Task_ReceiveFinalize.FinalizeId], 
            T.FinalizeNo AS [Task_ReceiveFinalize.FinalizeNo], 
            T.FinalizeDate AS [Task_ReceiveFinalize.FinalizeDate], 
            T.SupplierId AS [Task_ReceiveFinalize.SupplierId], 
            T.SelectedCurrency AS [Task_ReceiveFinalize.SelectedCurrency], 
            T.Currency1Rate AS [Task_ReceiveFinalize.Currency1Rate], 
            T.Currency2Rate AS [Task_ReceiveFinalize.Currency2Rate], 
            T.FinalizeAmount AS [Task_ReceiveFinalize.FinalizeAmount], 
            T.Finalize1Amount AS [Task_ReceiveFinalize.Finalize1Amount], 
            T.Finalize2Amount AS [Task_ReceiveFinalize.Finalize2Amount], 
            T.Approved AS [Task_ReceiveFinalize.Approved], 
            T.ApprovedBy AS [Task_ReceiveFinalize.ApprovedBy], 
            T.ApprovedDate AS [Task_ReceiveFinalize.ApprovedDate], 
            T.CancelReason AS [Task_ReceiveFinalize.CancelReason], 
            T.IsSettledByPayment AS [Task_ReceiveFinalize.IsSettledByPayment], 
            T.PaidAmount AS [Task_ReceiveFinalize.PaidAmount], 
            T.Paid1Amount AS [Task_ReceiveFinalize.Paid1Amount], 
            T.Paid2Amount AS [Task_ReceiveFinalize.Paid2Amount], 
            T.PurchaseOperationType AS [Task_ReceiveFinalize.PurchaseOperationType], 
            T.TermsAndConditionsId AS [Task_ReceiveFinalize.TermsAndConditionsId], 
            T.TermsAndConditionsDetail AS [Task_ReceiveFinalize.TermsAndConditionsDetail], 
            T.PaymentTermsId AS [Task_ReceiveFinalize.PaymentTermsId], 
            T.PaymentTermsDetail AS [Task_ReceiveFinalize.PaymentTermsDetail], 
            T.DiscountType AS [Task_ReceiveFinalize.DiscountType], 
            T.DiscountValue AS [Task_ReceiveFinalize.DiscountValue], 
            T.Discount1Value AS [Task_ReceiveFinalize.Discount1Value], 
            T.Discount2Value AS [Task_ReceiveFinalize.Discount2Value], 
            T.DiscountAmount AS [Task_ReceiveFinalize.DiscountAmount], 
            T.Discount1Amount AS [Task_ReceiveFinalize.Discount1Amount], 
            T.Discount2Amount AS [Task_ReceiveFinalize.Discount2Amount], 
            T.VoucherId AS [Task_ReceiveFinalize.VoucherId], 
            T.LocationId AS [Task_ReceiveFinalize.LocationId], 
            T.CompanyId AS [Task_ReceiveFinalize.CompanyId], 
            T.EntryBy AS [Task_ReceiveFinalize.EntryBy], 
            T.EntryDate AS [Task_ReceiveFinalize.EntryDate], 
            True AS _from0
        FROM Inventory360Entities.Task_ReceiveFinalize AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_ReceiveFinalizeDetail.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView159()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_ReceiveFinalizeDetail
        [BTS_OPSModel.Store.Task_ReceiveFinalizeDetail](T1.[Task_ReceiveFinalizeDetail.FinalizeDetailId], T1.[Task_ReceiveFinalizeDetail.FinalizeId], T1.[Task_ReceiveFinalizeDetail.ReceiveId], T1.[Task_ReceiveFinalizeDetail.ProductId], T1.[Task_ReceiveFinalizeDetail.ProductDimensionId], T1.[Task_ReceiveFinalizeDetail.UnitTypeId], T1.[Task_ReceiveFinalizeDetail.Quantity], T1.[Task_ReceiveFinalizeDetail.Price], T1.[Task_ReceiveFinalizeDetail.Price1], T1.[Task_ReceiveFinalizeDetail.Price2], T1.[Task_ReceiveFinalizeDetail.Discount], T1.[Task_ReceiveFinalizeDetail.Discount1], T1.[Task_ReceiveFinalizeDetail.Discount2], T1.[Task_ReceiveFinalizeDetail.PrimaryUnitTypeId], T1.[Task_ReceiveFinalizeDetail.SecondaryUnitTypeId], T1.[Task_ReceiveFinalizeDetail.TertiaryUnitTypeId], T1.[Task_ReceiveFinalizeDetail.SecondaryConversionRatio], T1.[Task_ReceiveFinalizeDetail.TertiaryConversionRatio])
    FROM (
        SELECT 
            T.FinalizeDetailId AS [Task_ReceiveFinalizeDetail.FinalizeDetailId], 
            T.FinalizeId AS [Task_ReceiveFinalizeDetail.FinalizeId], 
            T.ReceiveId AS [Task_ReceiveFinalizeDetail.ReceiveId], 
            T.ProductId AS [Task_ReceiveFinalizeDetail.ProductId], 
            T.ProductDimensionId AS [Task_ReceiveFinalizeDetail.ProductDimensionId], 
            T.UnitTypeId AS [Task_ReceiveFinalizeDetail.UnitTypeId], 
            T.Quantity AS [Task_ReceiveFinalizeDetail.Quantity], 
            T.Price AS [Task_ReceiveFinalizeDetail.Price], 
            T.Price1 AS [Task_ReceiveFinalizeDetail.Price1], 
            T.Price2 AS [Task_ReceiveFinalizeDetail.Price2], 
            T.Discount AS [Task_ReceiveFinalizeDetail.Discount], 
            T.Discount1 AS [Task_ReceiveFinalizeDetail.Discount1], 
            T.Discount2 AS [Task_ReceiveFinalizeDetail.Discount2], 
            T.PrimaryUnitTypeId AS [Task_ReceiveFinalizeDetail.PrimaryUnitTypeId], 
            T.SecondaryUnitTypeId AS [Task_ReceiveFinalizeDetail.SecondaryUnitTypeId], 
            T.TertiaryUnitTypeId AS [Task_ReceiveFinalizeDetail.TertiaryUnitTypeId], 
            T.SecondaryConversionRatio AS [Task_ReceiveFinalizeDetail.SecondaryConversionRatio], 
            T.TertiaryConversionRatio AS [Task_ReceiveFinalizeDetail.TertiaryConversionRatio], 
            True AS _from0
        FROM Inventory360Entities.Task_ReceiveFinalizeDetail AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_ReceiveFinalizeDetailSerial.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView160()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_ReceiveFinalizeDetailSerial
        [BTS_OPSModel.Store.Task_ReceiveFinalizeDetailSerial](T1.[Task_ReceiveFinalizeDetailSerial.FinalizeDetailSerialId], T1.[Task_ReceiveFinalizeDetailSerial.FinalizeDetailId], T1.[Task_ReceiveFinalizeDetailSerial.Serial], T1.[Task_ReceiveFinalizeDetailSerial.AdditionalSerial])
    FROM (
        SELECT 
            T.FinalizeDetailSerialId AS [Task_ReceiveFinalizeDetailSerial.FinalizeDetailSerialId], 
            T.FinalizeDetailId AS [Task_ReceiveFinalizeDetailSerial.FinalizeDetailId], 
            T.Serial AS [Task_ReceiveFinalizeDetailSerial.Serial], 
            T.AdditionalSerial AS [Task_ReceiveFinalizeDetailSerial.AdditionalSerial], 
            True AS _from0
        FROM Inventory360Entities.Task_ReceiveFinalizeDetailSerial AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_ReceiveFinalizeNos.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView161()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_ReceiveFinalizeNos
        [BTS_OPSModel.Store.Task_ReceiveFinalizeNos](T1.[Task_ReceiveFinalizeNos.Id], T1.[Task_ReceiveFinalizeNos.FinalizeNo], T1.[Task_ReceiveFinalizeNos.Year], T1.[Task_ReceiveFinalizeNos.CompanyId])
    FROM (
        SELECT 
            T.Id AS [Task_ReceiveFinalizeNos.Id], 
            T.FinalizeNo AS [Task_ReceiveFinalizeNos.FinalizeNo], 
            T.Year AS [Task_ReceiveFinalizeNos.Year], 
            T.CompanyId AS [Task_ReceiveFinalizeNos.CompanyId], 
            True AS _from0
        FROM Inventory360Entities.Task_ReceiveFinalizeNos AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_ReplacementClaim.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView162()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_ReplacementClaim
        [BTS_OPSModel.Store.Task_ReplacementClaim](T1.[Task_ReplacementClaim.ClaimId], T1.[Task_ReplacementClaim.ClaimNo], T1.[Task_ReplacementClaim.ClaimDate], T1.[Task_ReplacementClaim.SelectedCurrency], T1.[Task_ReplacementClaim.Currency1Rate], T1.[Task_ReplacementClaim.Currency2Rate], T1.[Task_ReplacementClaim.RequestedBy], T1.[Task_ReplacementClaim.SupplierId], T1.[Task_ReplacementClaim.Remarks], T1.[Task_ReplacementClaim.IsSettledByReplacementReceive], T1.[Task_ReplacementClaim.Approved], T1.[Task_ReplacementClaim.ApprovedBy], T1.[Task_ReplacementClaim.ApprovedDate], T1.[Task_ReplacementClaim.CancelReason], T1.[Task_ReplacementClaim.VoucherId], T1.[Task_ReplacementClaim.LocationId], T1.[Task_ReplacementClaim.CompanyId], T1.[Task_ReplacementClaim.EntryBy], T1.[Task_ReplacementClaim.EntryDate])
    FROM (
        SELECT 
            T.ClaimId AS [Task_ReplacementClaim.ClaimId], 
            T.ClaimNo AS [Task_ReplacementClaim.ClaimNo], 
            T.ClaimDate AS [Task_ReplacementClaim.ClaimDate], 
            T.SelectedCurrency AS [Task_ReplacementClaim.SelectedCurrency], 
            T.Currency1Rate AS [Task_ReplacementClaim.Currency1Rate], 
            T.Currency2Rate AS [Task_ReplacementClaim.Currency2Rate], 
            T.RequestedBy AS [Task_ReplacementClaim.RequestedBy], 
            T.SupplierId AS [Task_ReplacementClaim.SupplierId], 
            T.Remarks AS [Task_ReplacementClaim.Remarks], 
            T.IsSettledByReplacementReceive AS [Task_ReplacementClaim.IsSettledByReplacementReceive], 
            T.Approved AS [Task_ReplacementClaim.Approved], 
            T.ApprovedBy AS [Task_ReplacementClaim.ApprovedBy], 
            T.ApprovedDate AS [Task_ReplacementClaim.ApprovedDate], 
            T.CancelReason AS [Task_ReplacementClaim.CancelReason], 
            T.VoucherId AS [Task_ReplacementClaim.VoucherId], 
            T.LocationId AS [Task_ReplacementClaim.LocationId], 
            T.CompanyId AS [Task_ReplacementClaim.CompanyId], 
            T.EntryBy AS [Task_ReplacementClaim.EntryBy], 
            T.EntryDate AS [Task_ReplacementClaim.EntryDate], 
            True AS _from0
        FROM Inventory360Entities.Task_ReplacementClaim AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_ReplacementClaimDetail.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView163()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_ReplacementClaimDetail
        [BTS_OPSModel.Store.Task_ReplacementClaimDetail](T1.[Task_ReplacementClaimDetail.ClaimDetailId], T1.[Task_ReplacementClaimDetail.ClaimId], T1.[Task_ReplacementClaimDetail.ComplainReceiveId], T1.[Task_ReplacementClaimDetail.ProductId], T1.[Task_ReplacementClaimDetail.ProductDimensionId], T1.[Task_ReplacementClaimDetail.UnitTypeId], T1.[Task_ReplacementClaimDetail.Serial], T1.[Task_ReplacementClaimDetail.AdditionalSerial], T1.[Task_ReplacementClaimDetail.ReceivedSerialNo], T1.[Task_ReplacementClaimDetail.ReceivedAdditionalSerial], T1.[Task_ReplacementClaimDetail.IsSettled], T1.[Task_ReplacementClaimDetail.StockInBy], T1.[Task_ReplacementClaimDetail.StockInRefNo], T1.[Task_ReplacementClaimDetail.StockInRefDate], T1.[Task_ReplacementClaimDetail.LCOrReferenceNo], T1.[Task_ReplacementClaimDetail.LCOrReferenceDate], T1.[Task_ReplacementClaimDetail.ProformaInvoiceNo], T1.[Task_ReplacementClaimDetail.ProformaInvoiceDate], T1.[Task_ReplacementClaimDetail.Cost], T1.[Task_ReplacementClaimDetail.Cost1], T1.[Task_ReplacementClaimDetail.Cost2])
    FROM (
        SELECT 
            T.ClaimDetailId AS [Task_ReplacementClaimDetail.ClaimDetailId], 
            T.ClaimId AS [Task_ReplacementClaimDetail.ClaimId], 
            T.ComplainReceiveId AS [Task_ReplacementClaimDetail.ComplainReceiveId], 
            T.ProductId AS [Task_ReplacementClaimDetail.ProductId], 
            T.ProductDimensionId AS [Task_ReplacementClaimDetail.ProductDimensionId], 
            T.UnitTypeId AS [Task_ReplacementClaimDetail.UnitTypeId], 
            T.Serial AS [Task_ReplacementClaimDetail.Serial], 
            T.AdditionalSerial AS [Task_ReplacementClaimDetail.AdditionalSerial], 
            T.ReceivedSerialNo AS [Task_ReplacementClaimDetail.ReceivedSerialNo], 
            T.ReceivedAdditionalSerial AS [Task_ReplacementClaimDetail.ReceivedAdditionalSerial], 
            T.IsSettled AS [Task_ReplacementClaimDetail.IsSettled], 
            T.StockInBy AS [Task_ReplacementClaimDetail.StockInBy], 
            T.StockInRefNo AS [Task_ReplacementClaimDetail.StockInRefNo], 
            T.StockInRefDate AS [Task_ReplacementClaimDetail.StockInRefDate], 
            T.LCOrReferenceNo AS [Task_ReplacementClaimDetail.LCOrReferenceNo], 
            T.LCOrReferenceDate AS [Task_ReplacementClaimDetail.LCOrReferenceDate], 
            T.ProformaInvoiceNo AS [Task_ReplacementClaimDetail.ProformaInvoiceNo], 
            T.ProformaInvoiceDate AS [Task_ReplacementClaimDetail.ProformaInvoiceDate], 
            T.Cost AS [Task_ReplacementClaimDetail.Cost], 
            T.Cost1 AS [Task_ReplacementClaimDetail.Cost1], 
            T.Cost2 AS [Task_ReplacementClaimDetail.Cost2], 
            True AS _from0
        FROM Inventory360Entities.Task_ReplacementClaimDetail AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_ReplacementClaimDetail_Problem.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView164()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_ReplacementClaimDetail_Problem
        [BTS_OPSModel.Store.Task_ReplacementClaimDetail_Problem](T1.[Task_ReplacementClaimDetail_Problem.ClaimDetailProblemId], T1.[Task_ReplacementClaimDetail_Problem.ClaimDetailId], T1.[Task_ReplacementClaimDetail_Problem.ProblemId], T1.[Task_ReplacementClaimDetail_Problem.Note])
    FROM (
        SELECT 
            T.ClaimDetailProblemId AS [Task_ReplacementClaimDetail_Problem.ClaimDetailProblemId], 
            T.ClaimDetailId AS [Task_ReplacementClaimDetail_Problem.ClaimDetailId], 
            T.ProblemId AS [Task_ReplacementClaimDetail_Problem.ProblemId], 
            T.Note AS [Task_ReplacementClaimDetail_Problem.Note], 
            True AS _from0
        FROM Inventory360Entities.Task_ReplacementClaimDetail_Problem AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_ReplacementClaimNos.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView165()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_ReplacementClaimNos
        [BTS_OPSModel.Store.Task_ReplacementClaimNos](T1.[Task_ReplacementClaimNos.Id], T1.[Task_ReplacementClaimNos.ClaimNo], T1.[Task_ReplacementClaimNos.Year], T1.[Task_ReplacementClaimNos.CompanyId])
    FROM (
        SELECT 
            T.Id AS [Task_ReplacementClaimNos.Id], 
            T.ClaimNo AS [Task_ReplacementClaimNos.ClaimNo], 
            T.Year AS [Task_ReplacementClaimNos.Year], 
            T.CompanyId AS [Task_ReplacementClaimNos.CompanyId], 
            True AS _from0
        FROM Inventory360Entities.Task_ReplacementClaimNos AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_ReplacementReceive.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView166()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_ReplacementReceive
        [BTS_OPSModel.Store.Task_ReplacementReceive](T1.[Task_ReplacementReceive.ReceiveId], T1.[Task_ReplacementReceive.ReceiveNo], T1.[Task_ReplacementReceive.ReceiveDate], T1.[Task_ReplacementReceive.SelectedCurrency], T1.[Task_ReplacementReceive.Currency1Rate], T1.[Task_ReplacementReceive.Currency2Rate], T1.[Task_ReplacementReceive.RequestedBy], T1.[Task_ReplacementReceive.Remarks], T1.[Task_ReplacementReceive.Approved], T1.[Task_ReplacementReceive.ApprovedBy], T1.[Task_ReplacementReceive.ApprovedDate], T1.[Task_ReplacementReceive.CancelReason], T1.[Task_ReplacementReceive.TotalChargeAmount], T1.[Task_ReplacementReceive.TotalChargeAmount1], T1.[Task_ReplacementReceive.TotalChargeAmount2], T1.[Task_ReplacementReceive.TotalDiscount], T1.[Task_ReplacementReceive.TotalDiscount1], T1.[Task_ReplacementReceive.TotalDiscount2], T1.[Task_ReplacementReceive.VoucherId], T1.[Task_ReplacementReceive.LocationId], T1.[Task_ReplacementReceive.CompanyId], T1.[Task_ReplacementReceive.EntryBy], T1.[Task_ReplacementReceive.EntryDate])
    FROM (
        SELECT 
            T.ReceiveId AS [Task_ReplacementReceive.ReceiveId], 
            T.ReceiveNo AS [Task_ReplacementReceive.ReceiveNo], 
            T.ReceiveDate AS [Task_ReplacementReceive.ReceiveDate], 
            T.SelectedCurrency AS [Task_ReplacementReceive.SelectedCurrency], 
            T.Currency1Rate AS [Task_ReplacementReceive.Currency1Rate], 
            T.Currency2Rate AS [Task_ReplacementReceive.Currency2Rate], 
            T.RequestedBy AS [Task_ReplacementReceive.RequestedBy], 
            T.Remarks AS [Task_ReplacementReceive.Remarks], 
            T.Approved AS [Task_ReplacementReceive.Approved], 
            T.ApprovedBy AS [Task_ReplacementReceive.ApprovedBy], 
            T.ApprovedDate AS [Task_ReplacementReceive.ApprovedDate], 
            T.CancelReason AS [Task_ReplacementReceive.CancelReason], 
            T.TotalChargeAmount AS [Task_ReplacementReceive.TotalChargeAmount], 
            T.TotalChargeAmount1 AS [Task_ReplacementReceive.TotalChargeAmount1], 
            T.TotalChargeAmount2 AS [Task_ReplacementReceive.TotalChargeAmount2], 
            T.TotalDiscount AS [Task_ReplacementReceive.TotalDiscount], 
            T.TotalDiscount1 AS [Task_ReplacementReceive.TotalDiscount1], 
            T.TotalDiscount2 AS [Task_ReplacementReceive.TotalDiscount2], 
            T.VoucherId AS [Task_ReplacementReceive.VoucherId], 
            T.LocationId AS [Task_ReplacementReceive.LocationId], 
            T.CompanyId AS [Task_ReplacementReceive.CompanyId], 
            T.EntryBy AS [Task_ReplacementReceive.EntryBy], 
            T.EntryDate AS [Task_ReplacementReceive.EntryDate], 
            True AS _from0
        FROM Inventory360Entities.Task_ReplacementReceive AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_ReplacementReceive_Charge.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView167()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_ReplacementReceive_Charge
        [BTS_OPSModel.Store.Task_ReplacementReceive_Charge](T1.[Task_ReplacementReceive_Charge.ReceiveChargeId], T1.[Task_ReplacementReceive_Charge.ReceiveId], T1.[Task_ReplacementReceive_Charge.ChargeEventId], T1.[Task_ReplacementReceive_Charge.ChargeAmount], T1.[Task_ReplacementReceive_Charge.Charge1Amount], T1.[Task_ReplacementReceive_Charge.Charge2Amount])
    FROM (
        SELECT 
            T.ReceiveChargeId AS [Task_ReplacementReceive_Charge.ReceiveChargeId], 
            T.ReceiveId AS [Task_ReplacementReceive_Charge.ReceiveId], 
            T.ChargeEventId AS [Task_ReplacementReceive_Charge.ChargeEventId], 
            T.ChargeAmount AS [Task_ReplacementReceive_Charge.ChargeAmount], 
            T.Charge1Amount AS [Task_ReplacementReceive_Charge.Charge1Amount], 
            T.Charge2Amount AS [Task_ReplacementReceive_Charge.Charge2Amount], 
            True AS _from0
        FROM Inventory360Entities.Task_ReplacementReceive_Charge AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_ReplacementReceiveDetail.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView168()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_ReplacementReceiveDetail
        [BTS_OPSModel.Store.Task_ReplacementReceiveDetail](T1.[Task_ReplacementReceiveDetail.ReceiveDetailId], T1.[Task_ReplacementReceiveDetail.ReceiveId], T1.[Task_ReplacementReceiveDetail.ReplacementClaimId], T1.[Task_ReplacementReceiveDetail.PreviousProductId], T1.[Task_ReplacementReceiveDetail.PreviousProductDimensionId], T1.[Task_ReplacementReceiveDetail.PreviousUnitTypeId], T1.[Task_ReplacementReceiveDetail.PreviousSerial], T1.[Task_ReplacementReceiveDetail.NewProductId], T1.[Task_ReplacementReceiveDetail.NewProductDimensionId], T1.[Task_ReplacementReceiveDetail.NewUnitTypeId], T1.[Task_ReplacementReceiveDetail.NewSerial], T1.[Task_ReplacementReceiveDetail.Cost], T1.[Task_ReplacementReceiveDetail.Cost1], T1.[Task_ReplacementReceiveDetail.Cost2], T1.[Task_ReplacementReceiveDetail.ReplacementType], T1.[Task_ReplacementReceiveDetail.AdjustmentType], T1.[Task_ReplacementReceiveDetail.AdjustedAmount], T1.[Task_ReplacementReceiveDetail.AdjustedAmount1], T1.[Task_ReplacementReceiveDetail.AdjustedAmount2])
    FROM (
        SELECT 
            T.ReceiveDetailId AS [Task_ReplacementReceiveDetail.ReceiveDetailId], 
            T.ReceiveId AS [Task_ReplacementReceiveDetail.ReceiveId], 
            T.ReplacementClaimId AS [Task_ReplacementReceiveDetail.ReplacementClaimId], 
            T.PreviousProductId AS [Task_ReplacementReceiveDetail.PreviousProductId], 
            T.PreviousProductDimensionId AS [Task_ReplacementReceiveDetail.PreviousProductDimensionId], 
            T.PreviousUnitTypeId AS [Task_ReplacementReceiveDetail.PreviousUnitTypeId], 
            T.PreviousSerial AS [Task_ReplacementReceiveDetail.PreviousSerial], 
            T.NewProductId AS [Task_ReplacementReceiveDetail.NewProductId], 
            T.NewProductDimensionId AS [Task_ReplacementReceiveDetail.NewProductDimensionId], 
            T.NewUnitTypeId AS [Task_ReplacementReceiveDetail.NewUnitTypeId], 
            T.NewSerial AS [Task_ReplacementReceiveDetail.NewSerial], 
            T.Cost AS [Task_ReplacementReceiveDetail.Cost], 
            T.Cost1 AS [Task_ReplacementReceiveDetail.Cost1], 
            T.Cost2 AS [Task_ReplacementReceiveDetail.Cost2], 
            T.ReplacementType AS [Task_ReplacementReceiveDetail.ReplacementType], 
            T.AdjustmentType AS [Task_ReplacementReceiveDetail.AdjustmentType], 
            T.AdjustedAmount AS [Task_ReplacementReceiveDetail.AdjustedAmount], 
            T.AdjustedAmount1 AS [Task_ReplacementReceiveDetail.AdjustedAmount1], 
            T.AdjustedAmount2 AS [Task_ReplacementReceiveDetail.AdjustedAmount2], 
            True AS _from0
        FROM Inventory360Entities.Task_ReplacementReceiveDetail AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_ReplacementReceiveNos.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView169()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_ReplacementReceiveNos
        [BTS_OPSModel.Store.Task_ReplacementReceiveNos](T1.[Task_ReplacementReceiveNos.Id], T1.[Task_ReplacementReceiveNos.ReceiveNo], T1.[Task_ReplacementReceiveNos.Year], T1.[Task_ReplacementReceiveNos.CompanyId])
    FROM (
        SELECT 
            T.Id AS [Task_ReplacementReceiveNos.Id], 
            T.ReceiveNo AS [Task_ReplacementReceiveNos.ReceiveNo], 
            T.Year AS [Task_ReplacementReceiveNos.Year], 
            T.CompanyId AS [Task_ReplacementReceiveNos.CompanyId], 
            True AS _from0
        FROM Inventory360Entities.Task_ReplacementReceiveNos AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_RequisitionFinalize.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView170()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_RequisitionFinalize
        [BTS_OPSModel.Store.Task_RequisitionFinalize](T1.[Task_RequisitionFinalize.RequisitionId], T1.[Task_RequisitionFinalize.RequisitionNo], T1.[Task_RequisitionFinalize.RequisitionDate], T1.[Task_RequisitionFinalize.RequisitionBy], T1.[Task_RequisitionFinalize.Remarks], T1.[Task_RequisitionFinalize.IsSettled], T1.[Task_RequisitionFinalize.Approved], T1.[Task_RequisitionFinalize.ApprovedBy], T1.[Task_RequisitionFinalize.ApprovedDate], T1.[Task_RequisitionFinalize.CancelReason], T1.[Task_RequisitionFinalize.LocationId], T1.[Task_RequisitionFinalize.CompanyId], T1.[Task_RequisitionFinalize.EntryBy], T1.[Task_RequisitionFinalize.EntryDate])
    FROM (
        SELECT 
            T.RequisitionId AS [Task_RequisitionFinalize.RequisitionId], 
            T.RequisitionNo AS [Task_RequisitionFinalize.RequisitionNo], 
            T.RequisitionDate AS [Task_RequisitionFinalize.RequisitionDate], 
            T.RequisitionBy AS [Task_RequisitionFinalize.RequisitionBy], 
            T.Remarks AS [Task_RequisitionFinalize.Remarks], 
            T.IsSettled AS [Task_RequisitionFinalize.IsSettled], 
            T.Approved AS [Task_RequisitionFinalize.Approved], 
            T.ApprovedBy AS [Task_RequisitionFinalize.ApprovedBy], 
            T.ApprovedDate AS [Task_RequisitionFinalize.ApprovedDate], 
            T.CancelReason AS [Task_RequisitionFinalize.CancelReason], 
            T.LocationId AS [Task_RequisitionFinalize.LocationId], 
            T.CompanyId AS [Task_RequisitionFinalize.CompanyId], 
            T.EntryBy AS [Task_RequisitionFinalize.EntryBy], 
            T.EntryDate AS [Task_RequisitionFinalize.EntryDate], 
            True AS _from0
        FROM Inventory360Entities.Task_RequisitionFinalize AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_RequisitionFinalizeDetail.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView171()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_RequisitionFinalizeDetail
        [BTS_OPSModel.Store.Task_RequisitionFinalizeDetail](T1.[Task_RequisitionFinalizeDetail.RequisitionDetailId], T1.[Task_RequisitionFinalizeDetail.RequisitionId], T1.[Task_RequisitionFinalizeDetail.ItemRequisitionId], T1.[Task_RequisitionFinalizeDetail.ProductId], T1.[Task_RequisitionFinalizeDetail.ProductDimensionId], T1.[Task_RequisitionFinalizeDetail.UnitTypeId], T1.[Task_RequisitionFinalizeDetail.Quantity], T1.[Task_RequisitionFinalizeDetail.OrderedQuantity])
    FROM (
        SELECT 
            T.RequisitionDetailId AS [Task_RequisitionFinalizeDetail.RequisitionDetailId], 
            T.RequisitionId AS [Task_RequisitionFinalizeDetail.RequisitionId], 
            T.ItemRequisitionId AS [Task_RequisitionFinalizeDetail.ItemRequisitionId], 
            T.ProductId AS [Task_RequisitionFinalizeDetail.ProductId], 
            T.ProductDimensionId AS [Task_RequisitionFinalizeDetail.ProductDimensionId], 
            T.UnitTypeId AS [Task_RequisitionFinalizeDetail.UnitTypeId], 
            T.Quantity AS [Task_RequisitionFinalizeDetail.Quantity], 
            T.OrderedQuantity AS [Task_RequisitionFinalizeDetail.OrderedQuantity], 
            True AS _from0
        FROM Inventory360Entities.Task_RequisitionFinalizeDetail AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_RequisitionFinalizeNos.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView172()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_RequisitionFinalizeNos
        [BTS_OPSModel.Store.Task_RequisitionFinalizeNos](T1.[Task_RequisitionFinalizeNos.Id], T1.[Task_RequisitionFinalizeNos.RequisitionNo], T1.[Task_RequisitionFinalizeNos.Year], T1.[Task_RequisitionFinalizeNos.CompanyId])
    FROM (
        SELECT 
            T.Id AS [Task_RequisitionFinalizeNos.Id], 
            T.RequisitionNo AS [Task_RequisitionFinalizeNos.RequisitionNo], 
            T.Year AS [Task_RequisitionFinalizeNos.Year], 
            T.CompanyId AS [Task_RequisitionFinalizeNos.CompanyId], 
            True AS _from0
        FROM Inventory360Entities.Task_RequisitionFinalizeNos AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_SalesInvoice.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView173()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_SalesInvoice
        [BTS_OPSModel.Store.Task_SalesInvoice](T1.[Task_SalesInvoice.InvoiceId], T1.[Task_SalesInvoice.InvoiceNo], T1.[Task_SalesInvoice.InvoiceDate], T1.[Task_SalesInvoice.CustomerId], T1.[Task_SalesInvoice.CustomerDetail], T1.[Task_SalesInvoice.BuyerId], T1.[Task_SalesInvoice.SelectedCurrency], T1.[Task_SalesInvoice.Currency1Rate], T1.[Task_SalesInvoice.Currency2Rate], T1.[Task_SalesInvoice.InvoiceDiscountType], T1.[Task_SalesInvoice.InvoiceDiscountValue], T1.[Task_SalesInvoice.InvoiceDiscount1Value], T1.[Task_SalesInvoice.InvoiceDiscount2Value], T1.[Task_SalesInvoice.InvoiceDiscount], T1.[Task_SalesInvoice.Invoice1Discount], T1.[Task_SalesInvoice.Invoice2Discount], T1.[Task_SalesInvoice.InvoiceAmount], T1.[Task_SalesInvoice.Invoice1Amount], T1.[Task_SalesInvoice.Invoice2Amount], T1.[Task_SalesInvoice.CommissionType], T1.[Task_SalesInvoice.CommissionValue], T1.[Task_SalesInvoice.Commission1Value], T1.[Task_SalesInvoice.Commission2Value], T1.[Task_SalesInvoice.CommissionAmount], T1.[Task_SalesInvoice.Commission1Amount], T1.[Task_SalesInvoice.Commission2Amount], T1.[Task_SalesInvoice.GovtDutyAmount], T1.[Task_SalesInvoice.GovtDuty1Amount], T1.[Task_SalesInvoice.GovtDuty2Amount], T1.[Task_SalesInvoice.TotalChargeAmount], T1.[Task_SalesInvoice.TotalChargeAmount1], T1.[Task_SalesInvoice.TotalChargeAmount2], T1.[Task_SalesInvoice.IsSettledByCollection], T1.[Task_SalesInvoice.CollectedAmount], T1.[Task_SalesInvoice.Collected1Amount], T1.[Task_SalesInvoice.Collected2Amount], T1.[Task_SalesInvoice.IsFullPaid], T1.[Task_SalesInvoice.ApprovedCollectedAmount], T1.[Task_SalesInvoice.ApprovedCollected1Amount], T1.[Task_SalesInvoice.ApprovedCollected2Amount], T1.[Task_SalesInvoice.Approved], T1.[Task_SalesInvoice.ApprovedBy], T1.[Task_SalesInvoice.ApprovedDate], T1.[Task_SalesInvoice.CancelReason], T1.[Task_SalesInvoice.InvoiceOperationType], T1.[Task_SalesInvoice.TermsAndConditionsId], T1.[Task_SalesInvoice.TermsAndConditionsDetail], T1.[Task_SalesInvoice.ReferenceNo], T1.[Task_SalesInvoice.ReferenceDate], T1.[Task_SalesInvoice.Remarks], T1.[Task_SalesInvoice.TransactionFrom], T1.[Task_SalesInvoice.IsSalesModeCash], T1.[Task_SalesInvoice.IsSettledByReturn], T1.[Task_SalesInvoice.VoucherId], T1.[Task_SalesInvoice.GovtDutyChallanNo], T1.[Task_SalesInvoice.DeliveryPlace], T1.[Task_SalesInvoice.TransportTypeId], T1.[Task_SalesInvoice.LocationId], T1.[Task_SalesInvoice.CompanyId], T1.[Task_SalesInvoice.EntryBy], T1.[Task_SalesInvoice.EntryDate], T1.[Task_SalesInvoice.EditedBy], T1.[Task_SalesInvoice.EditedDate])
    FROM (
        SELECT 
            T.InvoiceId AS [Task_SalesInvoice.InvoiceId], 
            T.InvoiceNo AS [Task_SalesInvoice.InvoiceNo], 
            T.InvoiceDate AS [Task_SalesInvoice.InvoiceDate], 
            T.CustomerId AS [Task_SalesInvoice.CustomerId], 
            T.CustomerDetail AS [Task_SalesInvoice.CustomerDetail], 
            T.BuyerId AS [Task_SalesInvoice.BuyerId], 
            T.SelectedCurrency AS [Task_SalesInvoice.SelectedCurrency], 
            T.Currency1Rate AS [Task_SalesInvoice.Currency1Rate], 
            T.Currency2Rate AS [Task_SalesInvoice.Currency2Rate], 
            T.InvoiceDiscountType AS [Task_SalesInvoice.InvoiceDiscountType], 
            T.InvoiceDiscountValue AS [Task_SalesInvoice.InvoiceDiscountValue], 
            T.InvoiceDiscount1Value AS [Task_SalesInvoice.InvoiceDiscount1Value], 
            T.InvoiceDiscount2Value AS [Task_SalesInvoice.InvoiceDiscount2Value], 
            T.InvoiceDiscount AS [Task_SalesInvoice.InvoiceDiscount], 
            T.Invoice1Discount AS [Task_SalesInvoice.Invoice1Discount], 
            T.Invoice2Discount AS [Task_SalesInvoice.Invoice2Discount], 
            T.InvoiceAmount AS [Task_SalesInvoice.InvoiceAmount], 
            T.Invoice1Amount AS [Task_SalesInvoice.Invoice1Amount], 
            T.Invoice2Amount AS [Task_SalesInvoice.Invoice2Amount], 
            T.CommissionType AS [Task_SalesInvoice.CommissionType], 
            T.CommissionValue AS [Task_SalesInvoice.CommissionValue], 
            T.Commission1Value AS [Task_SalesInvoice.Commission1Value], 
            T.Commission2Value AS [Task_SalesInvoice.Commission2Value], 
            T.CommissionAmount AS [Task_SalesInvoice.CommissionAmount], 
            T.Commission1Amount AS [Task_SalesInvoice.Commission1Amount], 
            T.Commission2Amount AS [Task_SalesInvoice.Commission2Amount], 
            T.GovtDutyAmount AS [Task_SalesInvoice.GovtDutyAmount], 
            T.GovtDuty1Amount AS [Task_SalesInvoice.GovtDuty1Amount], 
            T.GovtDuty2Amount AS [Task_SalesInvoice.GovtDuty2Amount], 
            T.TotalChargeAmount AS [Task_SalesInvoice.TotalChargeAmount], 
            T.TotalChargeAmount1 AS [Task_SalesInvoice.TotalChargeAmount1], 
            T.TotalChargeAmount2 AS [Task_SalesInvoice.TotalChargeAmount2], 
            T.IsSettledByCollection AS [Task_SalesInvoice.IsSettledByCollection], 
            T.CollectedAmount AS [Task_SalesInvoice.CollectedAmount], 
            T.Collected1Amount AS [Task_SalesInvoice.Collected1Amount], 
            T.Collected2Amount AS [Task_SalesInvoice.Collected2Amount], 
            T.IsFullPaid AS [Task_SalesInvoice.IsFullPaid], 
            T.ApprovedCollectedAmount AS [Task_SalesInvoice.ApprovedCollectedAmount], 
            T.ApprovedCollected1Amount AS [Task_SalesInvoice.ApprovedCollected1Amount], 
            T.ApprovedCollected2Amount AS [Task_SalesInvoice.ApprovedCollected2Amount], 
            T.Approved AS [Task_SalesInvoice.Approved], 
            T.ApprovedBy AS [Task_SalesInvoice.ApprovedBy], 
            T.ApprovedDate AS [Task_SalesInvoice.ApprovedDate], 
            T.CancelReason AS [Task_SalesInvoice.CancelReason], 
            T.InvoiceOperationType AS [Task_SalesInvoice.InvoiceOperationType], 
            T.TermsAndConditionsId AS [Task_SalesInvoice.TermsAndConditionsId], 
            T.TermsAndConditionsDetail AS [Task_SalesInvoice.TermsAndConditionsDetail], 
            T.ReferenceNo AS [Task_SalesInvoice.ReferenceNo], 
            T.ReferenceDate AS [Task_SalesInvoice.ReferenceDate], 
            T.Remarks AS [Task_SalesInvoice.Remarks], 
            T.TransactionFrom AS [Task_SalesInvoice.TransactionFrom], 
            T.IsSalesModeCash AS [Task_SalesInvoice.IsSalesModeCash], 
            T.IsSettledByReturn AS [Task_SalesInvoice.IsSettledByReturn], 
            T.VoucherId AS [Task_SalesInvoice.VoucherId], 
            T.GovtDutyChallanNo AS [Task_SalesInvoice.GovtDutyChallanNo], 
            T.DeliveryPlace AS [Task_SalesInvoice.DeliveryPlace], 
            T.TransportTypeId AS [Task_SalesInvoice.TransportTypeId], 
            T.LocationId AS [Task_SalesInvoice.LocationId], 
            T.CompanyId AS [Task_SalesInvoice.CompanyId], 
            T.EntryBy AS [Task_SalesInvoice.EntryBy], 
            T.EntryDate AS [Task_SalesInvoice.EntryDate], 
            T.EditedBy AS [Task_SalesInvoice.EditedBy], 
            T.EditedDate AS [Task_SalesInvoice.EditedDate], 
            True AS _from0
        FROM Inventory360Entities.Task_SalesInvoice AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_SalesInvoice_Charge.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView174()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_SalesInvoice_Charge
        [BTS_OPSModel.Store.Task_SalesInvoice_Charge](T1.[Task_SalesInvoice_Charge.SalesInvoiceChargeId], T1.[Task_SalesInvoice_Charge.InvoiceId], T1.[Task_SalesInvoice_Charge.ChargeEventId], T1.[Task_SalesInvoice_Charge.ChargeAmount], T1.[Task_SalesInvoice_Charge.Charge1Amount], T1.[Task_SalesInvoice_Charge.Charge2Amount])
    FROM (
        SELECT 
            T.SalesInvoiceChargeId AS [Task_SalesInvoice_Charge.SalesInvoiceChargeId], 
            T.InvoiceId AS [Task_SalesInvoice_Charge.InvoiceId], 
            T.ChargeEventId AS [Task_SalesInvoice_Charge.ChargeEventId], 
            T.ChargeAmount AS [Task_SalesInvoice_Charge.ChargeAmount], 
            T.Charge1Amount AS [Task_SalesInvoice_Charge.Charge1Amount], 
            T.Charge2Amount AS [Task_SalesInvoice_Charge.Charge2Amount], 
            True AS _from0
        FROM Inventory360Entities.Task_SalesInvoice_Charge AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_SalesInvoiceDetail.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView175()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_SalesInvoiceDetail
        [BTS_OPSModel.Store.Task_SalesInvoiceDetail](T1.[Task_SalesInvoiceDetail.InvoiceDetailId], T1.[Task_SalesInvoiceDetail.InvoiceId], T1.[Task_SalesInvoiceDetail.ChallanId], T1.[Task_SalesInvoiceDetail.ChallanDetailId], T1.[Task_SalesInvoiceDetail.ProductEntrySequence], T1.[Task_SalesInvoiceDetail.ProductId], T1.[Task_SalesInvoiceDetail.ProductDimensionId], T1.[Task_SalesInvoiceDetail.UnitTypeId], T1.[Task_SalesInvoiceDetail.Quantity], T1.[Task_SalesInvoiceDetail.Price], T1.[Task_SalesInvoiceDetail.Price1], T1.[Task_SalesInvoiceDetail.Price2], T1.[Task_SalesInvoiceDetail.DiscountType], T1.[Task_SalesInvoiceDetail.DiscountValue], T1.[Task_SalesInvoiceDetail.Discount1Value], T1.[Task_SalesInvoiceDetail.Discount2Value], T1.[Task_SalesInvoiceDetail.Discount], T1.[Task_SalesInvoiceDetail.Discount1], T1.[Task_SalesInvoiceDetail.Discount2], T1.[Task_SalesInvoiceDetail.InvoiceDiscount], T1.[Task_SalesInvoiceDetail.InvoiceDiscount1], T1.[Task_SalesInvoiceDetail.InvoiceDiscount2], T1.[Task_SalesInvoiceDetail.Cost], T1.[Task_SalesInvoiceDetail.Cost1], T1.[Task_SalesInvoiceDetail.Cost2], T1.[Task_SalesInvoiceDetail.PrimaryUnitTypeId], T1.[Task_SalesInvoiceDetail.SecondaryUnitTypeId], T1.[Task_SalesInvoiceDetail.TertiaryUnitTypeId], T1.[Task_SalesInvoiceDetail.SecondaryConversionRatio], T1.[Task_SalesInvoiceDetail.TertiaryConversionRatio], T1.[Task_SalesInvoiceDetail.WareHouseId], T1.[Task_SalesInvoiceDetail.ReturnedQuantity], T1.[Task_SalesInvoiceDetail.IsIncludingGovtDuty], T1.[Task_SalesInvoiceDetail.GoodsReceiveId], T1.[Task_SalesInvoiceDetail.ImportedStockInId], T1.[Task_SalesInvoiceDetail.SupplierId], T1.[Task_SalesInvoiceDetail.ShortSpecification], T1.[Task_SalesInvoiceDetail.IsWarrantyAvailable], T1.[Task_SalesInvoiceDetail.WarrantyDays], T1.[Task_SalesInvoiceDetail.IsServiceWarranty], T1.[Task_SalesInvoiceDetail.ServiceWarrantyDays])
    FROM (
        SELECT 
            T.InvoiceDetailId AS [Task_SalesInvoiceDetail.InvoiceDetailId], 
            T.InvoiceId AS [Task_SalesInvoiceDetail.InvoiceId], 
            T.ChallanId AS [Task_SalesInvoiceDetail.ChallanId], 
            T.ChallanDetailId AS [Task_SalesInvoiceDetail.ChallanDetailId], 
            T.ProductEntrySequence AS [Task_SalesInvoiceDetail.ProductEntrySequence], 
            T.ProductId AS [Task_SalesInvoiceDetail.ProductId], 
            T.ProductDimensionId AS [Task_SalesInvoiceDetail.ProductDimensionId], 
            T.UnitTypeId AS [Task_SalesInvoiceDetail.UnitTypeId], 
            T.Quantity AS [Task_SalesInvoiceDetail.Quantity], 
            T.Price AS [Task_SalesInvoiceDetail.Price], 
            T.Price1 AS [Task_SalesInvoiceDetail.Price1], 
            T.Price2 AS [Task_SalesInvoiceDetail.Price2], 
            T.DiscountType AS [Task_SalesInvoiceDetail.DiscountType], 
            T.DiscountValue AS [Task_SalesInvoiceDetail.DiscountValue], 
            T.Discount1Value AS [Task_SalesInvoiceDetail.Discount1Value], 
            T.Discount2Value AS [Task_SalesInvoiceDetail.Discount2Value], 
            T.Discount AS [Task_SalesInvoiceDetail.Discount], 
            T.Discount1 AS [Task_SalesInvoiceDetail.Discount1], 
            T.Discount2 AS [Task_SalesInvoiceDetail.Discount2], 
            T.InvoiceDiscount AS [Task_SalesInvoiceDetail.InvoiceDiscount], 
            T.InvoiceDiscount1 AS [Task_SalesInvoiceDetail.InvoiceDiscount1], 
            T.InvoiceDiscount2 AS [Task_SalesInvoiceDetail.InvoiceDiscount2], 
            T.Cost AS [Task_SalesInvoiceDetail.Cost], 
            T.Cost1 AS [Task_SalesInvoiceDetail.Cost1], 
            T.Cost2 AS [Task_SalesInvoiceDetail.Cost2], 
            T.PrimaryUnitTypeId AS [Task_SalesInvoiceDetail.PrimaryUnitTypeId], 
            T.SecondaryUnitTypeId AS [Task_SalesInvoiceDetail.SecondaryUnitTypeId], 
            T.TertiaryUnitTypeId AS [Task_SalesInvoiceDetail.TertiaryUnitTypeId], 
            T.SecondaryConversionRatio AS [Task_SalesInvoiceDetail.SecondaryConversionRatio], 
            T.TertiaryConversionRatio AS [Task_SalesInvoiceDetail.TertiaryConversionRatio], 
            T.WareHouseId AS [Task_SalesInvoiceDetail.WareHouseId], 
            T.ReturnedQuantity AS [Task_SalesInvoiceDetail.ReturnedQuantity], 
            T.IsIncludingGovtDuty AS [Task_SalesInvoiceDetail.IsIncludingGovtDuty], 
            T.GoodsReceiveId AS [Task_SalesInvoiceDetail.GoodsReceiveId], 
            T.ImportedStockInId AS [Task_SalesInvoiceDetail.ImportedStockInId], 
            T.SupplierId AS [Task_SalesInvoiceDetail.SupplierId], 
            T.ShortSpecification AS [Task_SalesInvoiceDetail.ShortSpecification], 
            T.IsWarrantyAvailable AS [Task_SalesInvoiceDetail.IsWarrantyAvailable], 
            T.WarrantyDays AS [Task_SalesInvoiceDetail.WarrantyDays], 
            T.IsServiceWarranty AS [Task_SalesInvoiceDetail.IsServiceWarranty], 
            T.ServiceWarrantyDays AS [Task_SalesInvoiceDetail.ServiceWarrantyDays], 
            True AS _from0
        FROM Inventory360Entities.Task_SalesInvoiceDetail AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_SalesInvoiceDetail_GovtDuty.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView176()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_SalesInvoiceDetail_GovtDuty
        [BTS_OPSModel.Store.Task_SalesInvoiceDetail_GovtDuty](T1.[Task_SalesInvoiceDetail_GovtDuty.Id], T1.[Task_SalesInvoiceDetail_GovtDuty.InvoiceDetailId], T1.[Task_SalesInvoiceDetail_GovtDuty.GovtDutyId], T1.[Task_SalesInvoiceDetail_GovtDuty.RateType], T1.[Task_SalesInvoiceDetail_GovtDuty.RateValue], T1.[Task_SalesInvoiceDetail_GovtDuty.RateValue1], T1.[Task_SalesInvoiceDetail_GovtDuty.RateValue2], T1.[Task_SalesInvoiceDetail_GovtDuty.RateAmount], T1.[Task_SalesInvoiceDetail_GovtDuty.RateAmount1], T1.[Task_SalesInvoiceDetail_GovtDuty.RateAmount2], T1.[Task_SalesInvoiceDetail_GovtDuty.ExemptedType], T1.[Task_SalesInvoiceDetail_GovtDuty.ExemptedValue], T1.[Task_SalesInvoiceDetail_GovtDuty.ExemptedValue1], T1.[Task_SalesInvoiceDetail_GovtDuty.ExemptedValue2], T1.[Task_SalesInvoiceDetail_GovtDuty.ExemptedAmount], T1.[Task_SalesInvoiceDetail_GovtDuty.ExemptedAmount1], T1.[Task_SalesInvoiceDetail_GovtDuty.ExemptedAmount2])
    FROM (
        SELECT 
            T.Id AS [Task_SalesInvoiceDetail_GovtDuty.Id], 
            T.InvoiceDetailId AS [Task_SalesInvoiceDetail_GovtDuty.InvoiceDetailId], 
            T.GovtDutyId AS [Task_SalesInvoiceDetail_GovtDuty.GovtDutyId], 
            T.RateType AS [Task_SalesInvoiceDetail_GovtDuty.RateType], 
            T.RateValue AS [Task_SalesInvoiceDetail_GovtDuty.RateValue], 
            T.RateValue1 AS [Task_SalesInvoiceDetail_GovtDuty.RateValue1], 
            T.RateValue2 AS [Task_SalesInvoiceDetail_GovtDuty.RateValue2], 
            T.RateAmount AS [Task_SalesInvoiceDetail_GovtDuty.RateAmount], 
            T.RateAmount1 AS [Task_SalesInvoiceDetail_GovtDuty.RateAmount1], 
            T.RateAmount2 AS [Task_SalesInvoiceDetail_GovtDuty.RateAmount2], 
            T.ExemptedType AS [Task_SalesInvoiceDetail_GovtDuty.ExemptedType], 
            T.ExemptedValue AS [Task_SalesInvoiceDetail_GovtDuty.ExemptedValue], 
            T.ExemptedValue1 AS [Task_SalesInvoiceDetail_GovtDuty.ExemptedValue1], 
            T.ExemptedValue2 AS [Task_SalesInvoiceDetail_GovtDuty.ExemptedValue2], 
            T.ExemptedAmount AS [Task_SalesInvoiceDetail_GovtDuty.ExemptedAmount], 
            T.ExemptedAmount1 AS [Task_SalesInvoiceDetail_GovtDuty.ExemptedAmount1], 
            T.ExemptedAmount2 AS [Task_SalesInvoiceDetail_GovtDuty.ExemptedAmount2], 
            True AS _from0
        FROM Inventory360Entities.Task_SalesInvoiceDetail_GovtDuty AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_SalesInvoiceDetailSerial.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView177()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_SalesInvoiceDetailSerial
        [BTS_OPSModel.Store.Task_SalesInvoiceDetailSerial](T1.[Task_SalesInvoiceDetailSerial.InvoiceDetailSerialId], T1.[Task_SalesInvoiceDetailSerial.InvoiceDetailId], T1.[Task_SalesInvoiceDetailSerial.Serial], T1.[Task_SalesInvoiceDetailSerial.AdditionalSerial], T1.[Task_SalesInvoiceDetailSerial.IsReturned])
    FROM (
        SELECT 
            T.InvoiceDetailSerialId AS [Task_SalesInvoiceDetailSerial.InvoiceDetailSerialId], 
            T.InvoiceDetailId AS [Task_SalesInvoiceDetailSerial.InvoiceDetailId], 
            T.Serial AS [Task_SalesInvoiceDetailSerial.Serial], 
            T.AdditionalSerial AS [Task_SalesInvoiceDetailSerial.AdditionalSerial], 
            T.IsReturned AS [Task_SalesInvoiceDetailSerial.IsReturned], 
            True AS _from0
        FROM Inventory360Entities.Task_SalesInvoiceDetailSerial AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_SalesInvoiceNos.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView178()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_SalesInvoiceNos
        [BTS_OPSModel.Store.Task_SalesInvoiceNos](T1.[Task_SalesInvoiceNos.Id], T1.[Task_SalesInvoiceNos.InvoiceNo], T1.[Task_SalesInvoiceNos.Year], T1.[Task_SalesInvoiceNos.CompanyId])
    FROM (
        SELECT 
            T.Id AS [Task_SalesInvoiceNos.Id], 
            T.InvoiceNo AS [Task_SalesInvoiceNos.InvoiceNo], 
            T.Year AS [Task_SalesInvoiceNos.Year], 
            T.CompanyId AS [Task_SalesInvoiceNos.CompanyId], 
            True AS _from0
        FROM Inventory360Entities.Task_SalesInvoiceNos AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_SalesOrder.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView179()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_SalesOrder
        [BTS_OPSModel.Store.Task_SalesOrder](T1.[Task_SalesOrder.SalesOrderId], T1.[Task_SalesOrder.SalesOrderNo], T1.[Task_SalesOrder.OrderDate], T1.[Task_SalesOrder.CustomerId], T1.[Task_SalesOrder.CustomerDetail], T1.[Task_SalesOrder.BuyerId], T1.[Task_SalesOrder.SalesPersonId], T1.[Task_SalesOrder.SalesType], T1.[Task_SalesOrder.ReferenceNo], T1.[Task_SalesOrder.ReferenceDate], T1.[Task_SalesOrder.OperationTypeId], T1.[Task_SalesOrder.TermsAndConditionsId], T1.[Task_SalesOrder.TermsAndConditionsDetail], T1.[Task_SalesOrder.Remarks], T1.[Task_SalesOrder.ShipmentType], T1.[Task_SalesOrder.ApxShipmentDate], T1.[Task_SalesOrder.ShipmentMode], T1.[Task_SalesOrder.DeliveryFromId], T1.[Task_SalesOrder.WareHouseId], T1.[Task_SalesOrder.PaymentModeId], T1.[Task_SalesOrder.PromisedDate], T1.[Task_SalesOrder.PaymentTermsId], T1.[Task_SalesOrder.PaymentTermsDetail], T1.[Task_SalesOrder.SelectedCurrency], T1.[Task_SalesOrder.Currency1Rate], T1.[Task_SalesOrder.Currency2Rate], T1.[Task_SalesOrder.OrderAmount], T1.[Task_SalesOrder.Order1Amount], T1.[Task_SalesOrder.Order2Amount], T1.[Task_SalesOrder.OrderDiscount], T1.[Task_SalesOrder.Order1Discount], T1.[Task_SalesOrder.Order2Discount], T1.[Task_SalesOrder.GovtDutyAmount], T1.[Task_SalesOrder.GovtDuty1Amount], T1.[Task_SalesOrder.GovtDuty2Amount], T1.[Task_SalesOrder.TotalChargeAmount], T1.[Task_SalesOrder.TotalChargeAmount1], T1.[Task_SalesOrder.TotalChargeAmount2], T1.[Task_SalesOrder.Approved], T1.[Task_SalesOrder.ApprovedBy], T1.[Task_SalesOrder.ApprovedDate], T1.[Task_SalesOrder.CancelReason], T1.[Task_SalesOrder.CollectedAmount], T1.[Task_SalesOrder.Collected1Amount], T1.[Task_SalesOrder.Collected2Amount], T1.[Task_SalesOrder.TransactionFrom], T1.[Task_SalesOrder.IsSalesModeCash], T1.[Task_SalesOrder.IsSettledByChallan], T1.[Task_SalesOrder.GovtDutyChallanNo], T1.[Task_SalesOrder.LocationId], T1.[Task_SalesOrder.CompanyId], T1.[Task_SalesOrder.EntryBy], T1.[Task_SalesOrder.EntryDate], T1.[Task_SalesOrder.EditedBy], T1.[Task_SalesOrder.EditedDate])
    FROM (
        SELECT 
            T.SalesOrderId AS [Task_SalesOrder.SalesOrderId], 
            T.SalesOrderNo AS [Task_SalesOrder.SalesOrderNo], 
            T.OrderDate AS [Task_SalesOrder.OrderDate], 
            T.CustomerId AS [Task_SalesOrder.CustomerId], 
            T.CustomerDetail AS [Task_SalesOrder.CustomerDetail], 
            T.BuyerId AS [Task_SalesOrder.BuyerId], 
            T.SalesPersonId AS [Task_SalesOrder.SalesPersonId], 
            T.SalesType AS [Task_SalesOrder.SalesType], 
            T.ReferenceNo AS [Task_SalesOrder.ReferenceNo], 
            T.ReferenceDate AS [Task_SalesOrder.ReferenceDate], 
            T.OperationTypeId AS [Task_SalesOrder.OperationTypeId], 
            T.TermsAndConditionsId AS [Task_SalesOrder.TermsAndConditionsId], 
            T.TermsAndConditionsDetail AS [Task_SalesOrder.TermsAndConditionsDetail], 
            T.Remarks AS [Task_SalesOrder.Remarks], 
            T.ShipmentType AS [Task_SalesOrder.ShipmentType], 
            T.ApxShipmentDate AS [Task_SalesOrder.ApxShipmentDate], 
            T.ShipmentMode AS [Task_SalesOrder.ShipmentMode], 
            T.DeliveryFromId AS [Task_SalesOrder.DeliveryFromId], 
            T.WareHouseId AS [Task_SalesOrder.WareHouseId], 
            T.PaymentModeId AS [Task_SalesOrder.PaymentModeId], 
            T.PromisedDate AS [Task_SalesOrder.PromisedDate], 
            T.PaymentTermsId AS [Task_SalesOrder.PaymentTermsId], 
            T.PaymentTermsDetail AS [Task_SalesOrder.PaymentTermsDetail], 
            T.SelectedCurrency AS [Task_SalesOrder.SelectedCurrency], 
            T.Currency1Rate AS [Task_SalesOrder.Currency1Rate], 
            T.Currency2Rate AS [Task_SalesOrder.Currency2Rate], 
            T.OrderAmount AS [Task_SalesOrder.OrderAmount], 
            T.Order1Amount AS [Task_SalesOrder.Order1Amount], 
            T.Order2Amount AS [Task_SalesOrder.Order2Amount], 
            T.OrderDiscount AS [Task_SalesOrder.OrderDiscount], 
            T.Order1Discount AS [Task_SalesOrder.Order1Discount], 
            T.Order2Discount AS [Task_SalesOrder.Order2Discount], 
            T.GovtDutyAmount AS [Task_SalesOrder.GovtDutyAmount], 
            T.GovtDuty1Amount AS [Task_SalesOrder.GovtDuty1Amount], 
            T.GovtDuty2Amount AS [Task_SalesOrder.GovtDuty2Amount], 
            T.TotalChargeAmount AS [Task_SalesOrder.TotalChargeAmount], 
            T.TotalChargeAmount1 AS [Task_SalesOrder.TotalChargeAmount1], 
            T.TotalChargeAmount2 AS [Task_SalesOrder.TotalChargeAmount2], 
            T.Approved AS [Task_SalesOrder.Approved], 
            T.ApprovedBy AS [Task_SalesOrder.ApprovedBy], 
            T.ApprovedDate AS [Task_SalesOrder.ApprovedDate], 
            T.CancelReason AS [Task_SalesOrder.CancelReason], 
            T.CollectedAmount AS [Task_SalesOrder.CollectedAmount], 
            T.Collected1Amount AS [Task_SalesOrder.Collected1Amount], 
            T.Collected2Amount AS [Task_SalesOrder.Collected2Amount], 
            T.TransactionFrom AS [Task_SalesOrder.TransactionFrom], 
            T.IsSalesModeCash AS [Task_SalesOrder.IsSalesModeCash], 
            T.IsSettledByChallan AS [Task_SalesOrder.IsSettledByChallan], 
            T.GovtDutyChallanNo AS [Task_SalesOrder.GovtDutyChallanNo], 
            T.LocationId AS [Task_SalesOrder.LocationId], 
            T.CompanyId AS [Task_SalesOrder.CompanyId], 
            T.EntryBy AS [Task_SalesOrder.EntryBy], 
            T.EntryDate AS [Task_SalesOrder.EntryDate], 
            T.EditedBy AS [Task_SalesOrder.EditedBy], 
            T.EditedDate AS [Task_SalesOrder.EditedDate], 
            True AS _from0
        FROM Inventory360Entities.Task_SalesOrder AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_SalesOrder_Charge.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView180()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_SalesOrder_Charge
        [BTS_OPSModel.Store.Task_SalesOrder_Charge](T1.[Task_SalesOrder_Charge.SalesOrderChargeId], T1.[Task_SalesOrder_Charge.SalesOrderId], T1.[Task_SalesOrder_Charge.ChargeEventId], T1.[Task_SalesOrder_Charge.ChargeAmount], T1.[Task_SalesOrder_Charge.Charge1Amount], T1.[Task_SalesOrder_Charge.Charge2Amount])
    FROM (
        SELECT 
            T.SalesOrderChargeId AS [Task_SalesOrder_Charge.SalesOrderChargeId], 
            T.SalesOrderId AS [Task_SalesOrder_Charge.SalesOrderId], 
            T.ChargeEventId AS [Task_SalesOrder_Charge.ChargeEventId], 
            T.ChargeAmount AS [Task_SalesOrder_Charge.ChargeAmount], 
            T.Charge1Amount AS [Task_SalesOrder_Charge.Charge1Amount], 
            T.Charge2Amount AS [Task_SalesOrder_Charge.Charge2Amount], 
            True AS _from0
        FROM Inventory360Entities.Task_SalesOrder_Charge AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_SalesOrderDeliveryInfo.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView181()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_SalesOrderDeliveryInfo
        [BTS_OPSModel.Store.Task_SalesOrderDeliveryInfo](T1.[Task_SalesOrderDeliveryInfo.DeliveryInfoId], T1.[Task_SalesOrderDeliveryInfo.SalesOrderId], T1.[Task_SalesOrderDeliveryInfo.DeliveryPlace], T1.[Task_SalesOrderDeliveryInfo.ContactPerson], T1.[Task_SalesOrderDeliveryInfo.ContactPersonNo], T1.[Task_SalesOrderDeliveryInfo.TransportId], T1.[Task_SalesOrderDeliveryInfo.TransportTypeId], T1.[Task_SalesOrderDeliveryInfo.VehicleNo], T1.[Task_SalesOrderDeliveryInfo.DriverName], T1.[Task_SalesOrderDeliveryInfo.DriverContactNo])
    FROM (
        SELECT 
            T.DeliveryInfoId AS [Task_SalesOrderDeliveryInfo.DeliveryInfoId], 
            T.SalesOrderId AS [Task_SalesOrderDeliveryInfo.SalesOrderId], 
            T.DeliveryPlace AS [Task_SalesOrderDeliveryInfo.DeliveryPlace], 
            T.ContactPerson AS [Task_SalesOrderDeliveryInfo.ContactPerson], 
            T.ContactPersonNo AS [Task_SalesOrderDeliveryInfo.ContactPersonNo], 
            T.TransportId AS [Task_SalesOrderDeliveryInfo.TransportId], 
            T.TransportTypeId AS [Task_SalesOrderDeliveryInfo.TransportTypeId], 
            T.VehicleNo AS [Task_SalesOrderDeliveryInfo.VehicleNo], 
            T.DriverName AS [Task_SalesOrderDeliveryInfo.DriverName], 
            T.DriverContactNo AS [Task_SalesOrderDeliveryInfo.DriverContactNo], 
            True AS _from0
        FROM Inventory360Entities.Task_SalesOrderDeliveryInfo AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_SalesOrderDetail.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView182()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_SalesOrderDetail
        [BTS_OPSModel.Store.Task_SalesOrderDetail](T1.[Task_SalesOrderDetail.SalesOrderDetailId], T1.[Task_SalesOrderDetail.SalesOrderId], T1.[Task_SalesOrderDetail.ProductId], T1.[Task_SalesOrderDetail.ProductDimensionId], T1.[Task_SalesOrderDetail.UnitTypeId], T1.[Task_SalesOrderDetail.Quantity], T1.[Task_SalesOrderDetail.DeliveredQuantity], T1.[Task_SalesOrderDetail.Price], T1.[Task_SalesOrderDetail.Price1], T1.[Task_SalesOrderDetail.Price2], T1.[Task_SalesOrderDetail.DiscountType], T1.[Task_SalesOrderDetail.DiscountValue], T1.[Task_SalesOrderDetail.Discount1Value], T1.[Task_SalesOrderDetail.Discount2Value], T1.[Task_SalesOrderDetail.Discount], T1.[Task_SalesOrderDetail.Discount1], T1.[Task_SalesOrderDetail.Discount2], T1.[Task_SalesOrderDetail.InvoiceDiscount], T1.[Task_SalesOrderDetail.InvoiceDiscount1], T1.[Task_SalesOrderDetail.InvoiceDiscount2], T1.[Task_SalesOrderDetail.Cost], T1.[Task_SalesOrderDetail.Cost1], T1.[Task_SalesOrderDetail.Cost2], T1.[Task_SalesOrderDetail.PrimaryUnitTypeId], T1.[Task_SalesOrderDetail.SecondaryUnitTypeId], T1.[Task_SalesOrderDetail.TertiaryUnitTypeId], T1.[Task_SalesOrderDetail.SecondaryConversionRatio], T1.[Task_SalesOrderDetail.TertiaryConversionRatio], T1.[Task_SalesOrderDetail.IsIncludingGovtDuty], T1.[Task_SalesOrderDetail.ShortSpecification], T1.[Task_SalesOrderDetail.IsWarrantyAvailable], T1.[Task_SalesOrderDetail.WarrantyDays], T1.[Task_SalesOrderDetail.IsServiceWarranty], T1.[Task_SalesOrderDetail.ServiceWarrantyDays])
    FROM (
        SELECT 
            T.SalesOrderDetailId AS [Task_SalesOrderDetail.SalesOrderDetailId], 
            T.SalesOrderId AS [Task_SalesOrderDetail.SalesOrderId], 
            T.ProductId AS [Task_SalesOrderDetail.ProductId], 
            T.ProductDimensionId AS [Task_SalesOrderDetail.ProductDimensionId], 
            T.UnitTypeId AS [Task_SalesOrderDetail.UnitTypeId], 
            T.Quantity AS [Task_SalesOrderDetail.Quantity], 
            T.DeliveredQuantity AS [Task_SalesOrderDetail.DeliveredQuantity], 
            T.Price AS [Task_SalesOrderDetail.Price], 
            T.Price1 AS [Task_SalesOrderDetail.Price1], 
            T.Price2 AS [Task_SalesOrderDetail.Price2], 
            T.DiscountType AS [Task_SalesOrderDetail.DiscountType], 
            T.DiscountValue AS [Task_SalesOrderDetail.DiscountValue], 
            T.Discount1Value AS [Task_SalesOrderDetail.Discount1Value], 
            T.Discount2Value AS [Task_SalesOrderDetail.Discount2Value], 
            T.Discount AS [Task_SalesOrderDetail.Discount], 
            T.Discount1 AS [Task_SalesOrderDetail.Discount1], 
            T.Discount2 AS [Task_SalesOrderDetail.Discount2], 
            T.InvoiceDiscount AS [Task_SalesOrderDetail.InvoiceDiscount], 
            T.InvoiceDiscount1 AS [Task_SalesOrderDetail.InvoiceDiscount1], 
            T.InvoiceDiscount2 AS [Task_SalesOrderDetail.InvoiceDiscount2], 
            T.Cost AS [Task_SalesOrderDetail.Cost], 
            T.Cost1 AS [Task_SalesOrderDetail.Cost1], 
            T.Cost2 AS [Task_SalesOrderDetail.Cost2], 
            T.PrimaryUnitTypeId AS [Task_SalesOrderDetail.PrimaryUnitTypeId], 
            T.SecondaryUnitTypeId AS [Task_SalesOrderDetail.SecondaryUnitTypeId], 
            T.TertiaryUnitTypeId AS [Task_SalesOrderDetail.TertiaryUnitTypeId], 
            T.SecondaryConversionRatio AS [Task_SalesOrderDetail.SecondaryConversionRatio], 
            T.TertiaryConversionRatio AS [Task_SalesOrderDetail.TertiaryConversionRatio], 
            T.IsIncludingGovtDuty AS [Task_SalesOrderDetail.IsIncludingGovtDuty], 
            T.ShortSpecification AS [Task_SalesOrderDetail.ShortSpecification], 
            T.IsWarrantyAvailable AS [Task_SalesOrderDetail.IsWarrantyAvailable], 
            T.WarrantyDays AS [Task_SalesOrderDetail.WarrantyDays], 
            T.IsServiceWarranty AS [Task_SalesOrderDetail.IsServiceWarranty], 
            T.ServiceWarrantyDays AS [Task_SalesOrderDetail.ServiceWarrantyDays], 
            True AS _from0
        FROM Inventory360Entities.Task_SalesOrderDetail AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_SalesOrderDetail_GovtDuty.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView183()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_SalesOrderDetail_GovtDuty
        [BTS_OPSModel.Store.Task_SalesOrderDetail_GovtDuty](T1.[Task_SalesOrderDetail_GovtDuty.Id], T1.[Task_SalesOrderDetail_GovtDuty.SalesOrderDetailId], T1.[Task_SalesOrderDetail_GovtDuty.GovtDutyId], T1.[Task_SalesOrderDetail_GovtDuty.RateType], T1.[Task_SalesOrderDetail_GovtDuty.RateValue], T1.[Task_SalesOrderDetail_GovtDuty.RateValue1], T1.[Task_SalesOrderDetail_GovtDuty.RateValue2], T1.[Task_SalesOrderDetail_GovtDuty.RateAmount], T1.[Task_SalesOrderDetail_GovtDuty.RateAmount1], T1.[Task_SalesOrderDetail_GovtDuty.RateAmount2], T1.[Task_SalesOrderDetail_GovtDuty.ExemptedType], T1.[Task_SalesOrderDetail_GovtDuty.ExemptedValue], T1.[Task_SalesOrderDetail_GovtDuty.ExemptedValue1], T1.[Task_SalesOrderDetail_GovtDuty.ExemptedValue2], T1.[Task_SalesOrderDetail_GovtDuty.ExemptedAmount], T1.[Task_SalesOrderDetail_GovtDuty.ExemptedAmount1], T1.[Task_SalesOrderDetail_GovtDuty.ExemptedAmount2])
    FROM (
        SELECT 
            T.Id AS [Task_SalesOrderDetail_GovtDuty.Id], 
            T.SalesOrderDetailId AS [Task_SalesOrderDetail_GovtDuty.SalesOrderDetailId], 
            T.GovtDutyId AS [Task_SalesOrderDetail_GovtDuty.GovtDutyId], 
            T.RateType AS [Task_SalesOrderDetail_GovtDuty.RateType], 
            T.RateValue AS [Task_SalesOrderDetail_GovtDuty.RateValue], 
            T.RateValue1 AS [Task_SalesOrderDetail_GovtDuty.RateValue1], 
            T.RateValue2 AS [Task_SalesOrderDetail_GovtDuty.RateValue2], 
            T.RateAmount AS [Task_SalesOrderDetail_GovtDuty.RateAmount], 
            T.RateAmount1 AS [Task_SalesOrderDetail_GovtDuty.RateAmount1], 
            T.RateAmount2 AS [Task_SalesOrderDetail_GovtDuty.RateAmount2], 
            T.ExemptedType AS [Task_SalesOrderDetail_GovtDuty.ExemptedType], 
            T.ExemptedValue AS [Task_SalesOrderDetail_GovtDuty.ExemptedValue], 
            T.ExemptedValue1 AS [Task_SalesOrderDetail_GovtDuty.ExemptedValue1], 
            T.ExemptedValue2 AS [Task_SalesOrderDetail_GovtDuty.ExemptedValue2], 
            T.ExemptedAmount AS [Task_SalesOrderDetail_GovtDuty.ExemptedAmount], 
            T.ExemptedAmount1 AS [Task_SalesOrderDetail_GovtDuty.ExemptedAmount1], 
            T.ExemptedAmount2 AS [Task_SalesOrderDetail_GovtDuty.ExemptedAmount2], 
            True AS _from0
        FROM Inventory360Entities.Task_SalesOrderDetail_GovtDuty AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_SalesOrderNos.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView184()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_SalesOrderNos
        [BTS_OPSModel.Store.Task_SalesOrderNos](T1.[Task_SalesOrderNos.Id], T1.[Task_SalesOrderNos.SalesOrderNo], T1.[Task_SalesOrderNos.Year], T1.[Task_SalesOrderNos.CompanyId])
    FROM (
        SELECT 
            T.Id AS [Task_SalesOrderNos.Id], 
            T.SalesOrderNo AS [Task_SalesOrderNos.SalesOrderNo], 
            T.Year AS [Task_SalesOrderNos.Year], 
            T.CompanyId AS [Task_SalesOrderNos.CompanyId], 
            True AS _from0
        FROM Inventory360Entities.Task_SalesOrderNos AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_SalesQuotation.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView185()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_SalesQuotation
        [BTS_OPSModel.Store.Task_SalesQuotation](T1.[Task_SalesQuotation.QuotationId], T1.[Task_SalesQuotation.QuotationNo], T1.[Task_SalesQuotation.QuotationDate], T1.[Task_SalesQuotation.CustomerId], T1.[Task_SalesQuotation.CustomerDetail], T1.[Task_SalesQuotation.OriginalBuyerId], T1.[Task_SalesQuotation.SalesPersonId], T1.[Task_SalesQuotation.SelectedCurrency], T1.[Task_SalesQuotation.Currency1Rate], T1.[Task_SalesQuotation.Currency2Rate], T1.[Task_SalesQuotation.ReferenceNo], T1.[Task_SalesQuotation.ReferenceDate], T1.[Task_SalesQuotation.OperationTypeId], T1.[Task_SalesQuotation.RequestedBy], T1.[Task_SalesQuotation.TermsAndConditionsId], T1.[Task_SalesQuotation.TermsAndConditionsDetail], T1.[Task_SalesQuotation.PaymentModeId], T1.[Task_SalesQuotation.PromisedDate], T1.[Task_SalesQuotation.PaymentTermsId], T1.[Task_SalesQuotation.PaymentTermsDetail], T1.[Task_SalesQuotation.BankGuaranteeRequired], T1.[Task_SalesQuotation.WorkOrderRequired], T1.[Task_SalesQuotation.CommissionType], T1.[Task_SalesQuotation.CommissionValue], T1.[Task_SalesQuotation.Commission1Value], T1.[Task_SalesQuotation.Commission2Value], T1.[Task_SalesQuotation.CommissionAmount], T1.[Task_SalesQuotation.Commission1Amount], T1.[Task_SalesQuotation.Commission2Amount], T1.[Task_SalesQuotation.CommissionTakenBy], T1.[Task_SalesQuotation.CommissionTakerAddress], T1.[Task_SalesQuotation.CommissionContactPerson], T1.[Task_SalesQuotation.CommissionContactNo], T1.[Task_SalesQuotation.Approved], T1.[Task_SalesQuotation.ApprovedBy], T1.[Task_SalesQuotation.ApprovedDate], T1.[Task_SalesQuotation.CancelReason], T1.[Task_SalesQuotation.IsSalesDone], T1.[Task_SalesQuotation.LocationId], T1.[Task_SalesQuotation.CompanyId], T1.[Task_SalesQuotation.EntryBy], T1.[Task_SalesQuotation.EntryDate])
    FROM (
        SELECT 
            T.QuotationId AS [Task_SalesQuotation.QuotationId], 
            T.QuotationNo AS [Task_SalesQuotation.QuotationNo], 
            T.QuotationDate AS [Task_SalesQuotation.QuotationDate], 
            T.CustomerId AS [Task_SalesQuotation.CustomerId], 
            T.CustomerDetail AS [Task_SalesQuotation.CustomerDetail], 
            T.OriginalBuyerId AS [Task_SalesQuotation.OriginalBuyerId], 
            T.SalesPersonId AS [Task_SalesQuotation.SalesPersonId], 
            T.SelectedCurrency AS [Task_SalesQuotation.SelectedCurrency], 
            T.Currency1Rate AS [Task_SalesQuotation.Currency1Rate], 
            T.Currency2Rate AS [Task_SalesQuotation.Currency2Rate], 
            T.ReferenceNo AS [Task_SalesQuotation.ReferenceNo], 
            T.ReferenceDate AS [Task_SalesQuotation.ReferenceDate], 
            T.OperationTypeId AS [Task_SalesQuotation.OperationTypeId], 
            T.RequestedBy AS [Task_SalesQuotation.RequestedBy], 
            T.TermsAndConditionsId AS [Task_SalesQuotation.TermsAndConditionsId], 
            T.TermsAndConditionsDetail AS [Task_SalesQuotation.TermsAndConditionsDetail], 
            T.PaymentModeId AS [Task_SalesQuotation.PaymentModeId], 
            T.PromisedDate AS [Task_SalesQuotation.PromisedDate], 
            T.PaymentTermsId AS [Task_SalesQuotation.PaymentTermsId], 
            T.PaymentTermsDetail AS [Task_SalesQuotation.PaymentTermsDetail], 
            T.BankGuaranteeRequired AS [Task_SalesQuotation.BankGuaranteeRequired], 
            T.WorkOrderRequired AS [Task_SalesQuotation.WorkOrderRequired], 
            T.CommissionType AS [Task_SalesQuotation.CommissionType], 
            T.CommissionValue AS [Task_SalesQuotation.CommissionValue], 
            T.Commission1Value AS [Task_SalesQuotation.Commission1Value], 
            T.Commission2Value AS [Task_SalesQuotation.Commission2Value], 
            T.CommissionAmount AS [Task_SalesQuotation.CommissionAmount], 
            T.Commission1Amount AS [Task_SalesQuotation.Commission1Amount], 
            T.Commission2Amount AS [Task_SalesQuotation.Commission2Amount], 
            T.CommissionTakenBy AS [Task_SalesQuotation.CommissionTakenBy], 
            T.CommissionTakerAddress AS [Task_SalesQuotation.CommissionTakerAddress], 
            T.CommissionContactPerson AS [Task_SalesQuotation.CommissionContactPerson], 
            T.CommissionContactNo AS [Task_SalesQuotation.CommissionContactNo], 
            T.Approved AS [Task_SalesQuotation.Approved], 
            T.ApprovedBy AS [Task_SalesQuotation.ApprovedBy], 
            T.ApprovedDate AS [Task_SalesQuotation.ApprovedDate], 
            T.CancelReason AS [Task_SalesQuotation.CancelReason], 
            T.IsSalesDone AS [Task_SalesQuotation.IsSalesDone], 
            T.LocationId AS [Task_SalesQuotation.LocationId], 
            T.CompanyId AS [Task_SalesQuotation.CompanyId], 
            T.EntryBy AS [Task_SalesQuotation.EntryBy], 
            T.EntryDate AS [Task_SalesQuotation.EntryDate], 
            True AS _from0
        FROM Inventory360Entities.Task_SalesQuotation AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_SalesQuotation_Charge.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView186()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_SalesQuotation_Charge
        [BTS_OPSModel.Store.Task_SalesQuotation_Charge](T1.[Task_SalesQuotation_Charge.QuotationChargeId], T1.[Task_SalesQuotation_Charge.QuotationId], T1.[Task_SalesQuotation_Charge.ChargeEventId], T1.[Task_SalesQuotation_Charge.ChargeAmount], T1.[Task_SalesQuotation_Charge.Charge1Amount], T1.[Task_SalesQuotation_Charge.Charge2Amount])
    FROM (
        SELECT 
            T.QuotationChargeId AS [Task_SalesQuotation_Charge.QuotationChargeId], 
            T.QuotationId AS [Task_SalesQuotation_Charge.QuotationId], 
            T.ChargeEventId AS [Task_SalesQuotation_Charge.ChargeEventId], 
            T.ChargeAmount AS [Task_SalesQuotation_Charge.ChargeAmount], 
            T.Charge1Amount AS [Task_SalesQuotation_Charge.Charge1Amount], 
            T.Charge2Amount AS [Task_SalesQuotation_Charge.Charge2Amount], 
            True AS _from0
        FROM Inventory360Entities.Task_SalesQuotation_Charge AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_SalesQuotation_DeliveryInfo.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView187()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_SalesQuotation_DeliveryInfo
        [BTS_OPSModel.Store.Task_SalesQuotation_DeliveryInfo](T1.[Task_SalesQuotation_DeliveryInfo.DeliveryInfoId], T1.[Task_SalesQuotation_DeliveryInfo.QuotationId], T1.[Task_SalesQuotation_DeliveryInfo.DeliveryPlace], T1.[Task_SalesQuotation_DeliveryInfo.ContactPerson], T1.[Task_SalesQuotation_DeliveryInfo.ContactPersonNo], T1.[Task_SalesQuotation_DeliveryInfo.TransportId], T1.[Task_SalesQuotation_DeliveryInfo.TransportTypeId], T1.[Task_SalesQuotation_DeliveryInfo.VehicleNo], T1.[Task_SalesQuotation_DeliveryInfo.DriverName], T1.[Task_SalesQuotation_DeliveryInfo.DriverContactNo])
    FROM (
        SELECT 
            T.DeliveryInfoId AS [Task_SalesQuotation_DeliveryInfo.DeliveryInfoId], 
            T.QuotationId AS [Task_SalesQuotation_DeliveryInfo.QuotationId], 
            T.DeliveryPlace AS [Task_SalesQuotation_DeliveryInfo.DeliveryPlace], 
            T.ContactPerson AS [Task_SalesQuotation_DeliveryInfo.ContactPerson], 
            T.ContactPersonNo AS [Task_SalesQuotation_DeliveryInfo.ContactPersonNo], 
            T.TransportId AS [Task_SalesQuotation_DeliveryInfo.TransportId], 
            T.TransportTypeId AS [Task_SalesQuotation_DeliveryInfo.TransportTypeId], 
            T.VehicleNo AS [Task_SalesQuotation_DeliveryInfo.VehicleNo], 
            T.DriverName AS [Task_SalesQuotation_DeliveryInfo.DriverName], 
            T.DriverContactNo AS [Task_SalesQuotation_DeliveryInfo.DriverContactNo], 
            True AS _from0
        FROM Inventory360Entities.Task_SalesQuotation_DeliveryInfo AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_SalesQuotation_GovtDutyAdjustment.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView188()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_SalesQuotation_GovtDutyAdjustment
        [BTS_OPSModel.Store.Task_SalesQuotation_GovtDutyAdjustment](T1.[Task_SalesQuotation_GovtDutyAdjustment.QuotationDutyAdjustmentId], T1.[Task_SalesQuotation_GovtDutyAdjustment.QuotationId], T1.[Task_SalesQuotation_GovtDutyAdjustment.GovtDutyAdjustmentId], T1.[Task_SalesQuotation_GovtDutyAdjustment.Amount], T1.[Task_SalesQuotation_GovtDutyAdjustment.Amount1], T1.[Task_SalesQuotation_GovtDutyAdjustment.Amount2])
    FROM (
        SELECT 
            T.QuotationDutyAdjustmentId AS [Task_SalesQuotation_GovtDutyAdjustment.QuotationDutyAdjustmentId], 
            T.QuotationId AS [Task_SalesQuotation_GovtDutyAdjustment.QuotationId], 
            T.GovtDutyAdjustmentId AS [Task_SalesQuotation_GovtDutyAdjustment.GovtDutyAdjustmentId], 
            T.Amount AS [Task_SalesQuotation_GovtDutyAdjustment.Amount], 
            T.Amount1 AS [Task_SalesQuotation_GovtDutyAdjustment.Amount1], 
            T.Amount2 AS [Task_SalesQuotation_GovtDutyAdjustment.Amount2], 
            True AS _from0
        FROM Inventory360Entities.Task_SalesQuotation_GovtDutyAdjustment AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_SalesQuotation_Header.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView189()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_SalesQuotation_Header
        [BTS_OPSModel.Store.Task_SalesQuotation_Header](T1.[Task_SalesQuotation_Header.HeaderId], T1.[Task_SalesQuotation_Header.QuotationId], T1.[Task_SalesQuotation_Header.Salutation], T1.[Task_SalesQuotation_Header.AttentionToName], T1.[Task_SalesQuotation_Header.Designation], T1.[Task_SalesQuotation_Header.CompanyName], T1.[Task_SalesQuotation_Header.Address], T1.[Task_SalesQuotation_Header.HeaderSubject], T1.[Task_SalesQuotation_Header.HeaderDetail])
    FROM (
        SELECT 
            T.HeaderId AS [Task_SalesQuotation_Header.HeaderId], 
            T.QuotationId AS [Task_SalesQuotation_Header.QuotationId], 
            T.Salutation AS [Task_SalesQuotation_Header.Salutation], 
            T.AttentionToName AS [Task_SalesQuotation_Header.AttentionToName], 
            T.Designation AS [Task_SalesQuotation_Header.Designation], 
            T.CompanyName AS [Task_SalesQuotation_Header.CompanyName], 
            T.Address AS [Task_SalesQuotation_Header.Address], 
            T.HeaderSubject AS [Task_SalesQuotation_Header.HeaderSubject], 
            T.HeaderDetail AS [Task_SalesQuotation_Header.HeaderDetail], 
            True AS _from0
        FROM Inventory360Entities.Task_SalesQuotation_Header AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_SalesQuotation_SecurityAndBanking.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView190()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_SalesQuotation_SecurityAndBanking
        [BTS_OPSModel.Store.Task_SalesQuotation_SecurityAndBanking](T1.[Task_SalesQuotation_SecurityAndBanking.SecurityAndBankingId], T1.[Task_SalesQuotation_SecurityAndBanking.QuotationId], T1.[Task_SalesQuotation_SecurityAndBanking.EMPercentValue], T1.[Task_SalesQuotation_SecurityAndBanking.EMAmount], T1.[Task_SalesQuotation_SecurityAndBanking.EMAmount1], T1.[Task_SalesQuotation_SecurityAndBanking.EMAmount2], T1.[Task_SalesQuotation_SecurityAndBanking.EMReferenceNo], T1.[Task_SalesQuotation_SecurityAndBanking.EMRefundDate], T1.[Task_SalesQuotation_SecurityAndBanking.SDPercentValue], T1.[Task_SalesQuotation_SecurityAndBanking.SDAmount], T1.[Task_SalesQuotation_SecurityAndBanking.SDAmount1], T1.[Task_SalesQuotation_SecurityAndBanking.SDAmount2], T1.[Task_SalesQuotation_SecurityAndBanking.SDReferenceNo], T1.[Task_SalesQuotation_SecurityAndBanking.SDRefundDate], T1.[Task_SalesQuotation_SecurityAndBanking.BGPercentValue], T1.[Task_SalesQuotation_SecurityAndBanking.BGAmount], T1.[Task_SalesQuotation_SecurityAndBanking.BGAmount1], T1.[Task_SalesQuotation_SecurityAndBanking.BGAmount2], T1.[Task_SalesQuotation_SecurityAndBanking.BGMarginAmount], T1.[Task_SalesQuotation_SecurityAndBanking.BGMarginAmount1], T1.[Task_SalesQuotation_SecurityAndBanking.BGMarginAmount2], T1.[Task_SalesQuotation_SecurityAndBanking.BankExpenseAmount], T1.[Task_SalesQuotation_SecurityAndBanking.BankExpenseAmount1], T1.[Task_SalesQuotation_SecurityAndBanking.BankExpenseAmount2], T1.[Task_SalesQuotation_SecurityAndBanking.BGNo], T1.[Task_SalesQuotation_SecurityAndBanking.BankId], T1.[Task_SalesQuotation_SecurityAndBanking.BGRefundDate])
    FROM (
        SELECT 
            T.SecurityAndBankingId AS [Task_SalesQuotation_SecurityAndBanking.SecurityAndBankingId], 
            T.QuotationId AS [Task_SalesQuotation_SecurityAndBanking.QuotationId], 
            T.EMPercentValue AS [Task_SalesQuotation_SecurityAndBanking.EMPercentValue], 
            T.EMAmount AS [Task_SalesQuotation_SecurityAndBanking.EMAmount], 
            T.EMAmount1 AS [Task_SalesQuotation_SecurityAndBanking.EMAmount1], 
            T.EMAmount2 AS [Task_SalesQuotation_SecurityAndBanking.EMAmount2], 
            T.EMReferenceNo AS [Task_SalesQuotation_SecurityAndBanking.EMReferenceNo], 
            T.EMRefundDate AS [Task_SalesQuotation_SecurityAndBanking.EMRefundDate], 
            T.SDPercentValue AS [Task_SalesQuotation_SecurityAndBanking.SDPercentValue], 
            T.SDAmount AS [Task_SalesQuotation_SecurityAndBanking.SDAmount], 
            T.SDAmount1 AS [Task_SalesQuotation_SecurityAndBanking.SDAmount1], 
            T.SDAmount2 AS [Task_SalesQuotation_SecurityAndBanking.SDAmount2], 
            T.SDReferenceNo AS [Task_SalesQuotation_SecurityAndBanking.SDReferenceNo], 
            T.SDRefundDate AS [Task_SalesQuotation_SecurityAndBanking.SDRefundDate], 
            T.BGPercentValue AS [Task_SalesQuotation_SecurityAndBanking.BGPercentValue], 
            T.BGAmount AS [Task_SalesQuotation_SecurityAndBanking.BGAmount], 
            T.BGAmount1 AS [Task_SalesQuotation_SecurityAndBanking.BGAmount1], 
            T.BGAmount2 AS [Task_SalesQuotation_SecurityAndBanking.BGAmount2], 
            T.BGMarginAmount AS [Task_SalesQuotation_SecurityAndBanking.BGMarginAmount], 
            T.BGMarginAmount1 AS [Task_SalesQuotation_SecurityAndBanking.BGMarginAmount1], 
            T.BGMarginAmount2 AS [Task_SalesQuotation_SecurityAndBanking.BGMarginAmount2], 
            T.BankExpenseAmount AS [Task_SalesQuotation_SecurityAndBanking.BankExpenseAmount], 
            T.BankExpenseAmount1 AS [Task_SalesQuotation_SecurityAndBanking.BankExpenseAmount1], 
            T.BankExpenseAmount2 AS [Task_SalesQuotation_SecurityAndBanking.BankExpenseAmount2], 
            T.BGNo AS [Task_SalesQuotation_SecurityAndBanking.BGNo], 
            T.BankId AS [Task_SalesQuotation_SecurityAndBanking.BankId], 
            T.BGRefundDate AS [Task_SalesQuotation_SecurityAndBanking.BGRefundDate], 
            True AS _from0
        FROM Inventory360Entities.Task_SalesQuotation_SecurityAndBanking AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_SalesQuotationDetail.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView191()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_SalesQuotationDetail
        [BTS_OPSModel.Store.Task_SalesQuotationDetail](T1.[Task_SalesQuotationDetail.QuotaionDetailId], T1.[Task_SalesQuotationDetail.QuotationId], T1.[Task_SalesQuotationDetail.ProductId], T1.[Task_SalesQuotationDetail.ProductDimensionId], T1.[Task_SalesQuotationDetail.UnitTypeId], T1.[Task_SalesQuotationDetail.Quantity], T1.[Task_SalesQuotationDetail.OrderedQuantity], T1.[Task_SalesQuotationDetail.Price], T1.[Task_SalesQuotationDetail.Price1], T1.[Task_SalesQuotationDetail.Price2], T1.[Task_SalesQuotationDetail.DiscountType], T1.[Task_SalesQuotationDetail.DiscountValue], T1.[Task_SalesQuotationDetail.Discount1Value], T1.[Task_SalesQuotationDetail.Discount2Value], T1.[Task_SalesQuotationDetail.Discount], T1.[Task_SalesQuotationDetail.Discount1], T1.[Task_SalesQuotationDetail.Discount2], T1.[Task_SalesQuotationDetail.AdditionalDescription], T1.[Task_SalesQuotationDetail.IsSampleRequired], T1.[Task_SalesQuotationDetail.SampleProvidedBy], T1.[Task_SalesQuotationDetail.SampleProvidedDate], T1.[Task_SalesQuotationDetail.RequestedBy])
    FROM (
        SELECT 
            T.QuotaionDetailId AS [Task_SalesQuotationDetail.QuotaionDetailId], 
            T.QuotationId AS [Task_SalesQuotationDetail.QuotationId], 
            T.ProductId AS [Task_SalesQuotationDetail.ProductId], 
            T.ProductDimensionId AS [Task_SalesQuotationDetail.ProductDimensionId], 
            T.UnitTypeId AS [Task_SalesQuotationDetail.UnitTypeId], 
            T.Quantity AS [Task_SalesQuotationDetail.Quantity], 
            T.OrderedQuantity AS [Task_SalesQuotationDetail.OrderedQuantity], 
            T.Price AS [Task_SalesQuotationDetail.Price], 
            T.Price1 AS [Task_SalesQuotationDetail.Price1], 
            T.Price2 AS [Task_SalesQuotationDetail.Price2], 
            T.DiscountType AS [Task_SalesQuotationDetail.DiscountType], 
            T.DiscountValue AS [Task_SalesQuotationDetail.DiscountValue], 
            T.Discount1Value AS [Task_SalesQuotationDetail.Discount1Value], 
            T.Discount2Value AS [Task_SalesQuotationDetail.Discount2Value], 
            T.Discount AS [Task_SalesQuotationDetail.Discount], 
            T.Discount1 AS [Task_SalesQuotationDetail.Discount1], 
            T.Discount2 AS [Task_SalesQuotationDetail.Discount2], 
            T.AdditionalDescription AS [Task_SalesQuotationDetail.AdditionalDescription], 
            T.IsSampleRequired AS [Task_SalesQuotationDetail.IsSampleRequired], 
            T.SampleProvidedBy AS [Task_SalesQuotationDetail.SampleProvidedBy], 
            T.SampleProvidedDate AS [Task_SalesQuotationDetail.SampleProvidedDate], 
            T.RequestedBy AS [Task_SalesQuotationDetail.RequestedBy], 
            True AS _from0
        FROM Inventory360Entities.Task_SalesQuotationDetail AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_SalesQuotationDetail_GovtDuty.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView192()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_SalesQuotationDetail_GovtDuty
        [BTS_OPSModel.Store.Task_SalesQuotationDetail_GovtDuty](T1.[Task_SalesQuotationDetail_GovtDuty.Id], T1.[Task_SalesQuotationDetail_GovtDuty.QuotaionDetailId], T1.[Task_SalesQuotationDetail_GovtDuty.GovtDutyId], T1.[Task_SalesQuotationDetail_GovtDuty.RateType], T1.[Task_SalesQuotationDetail_GovtDuty.RateValue], T1.[Task_SalesQuotationDetail_GovtDuty.RateValue1], T1.[Task_SalesQuotationDetail_GovtDuty.RateValue2], T1.[Task_SalesQuotationDetail_GovtDuty.RateAmount], T1.[Task_SalesQuotationDetail_GovtDuty.RateAmount1], T1.[Task_SalesQuotationDetail_GovtDuty.RateAmount2], T1.[Task_SalesQuotationDetail_GovtDuty.ExemptedType], T1.[Task_SalesQuotationDetail_GovtDuty.ExemptedValue], T1.[Task_SalesQuotationDetail_GovtDuty.ExemptedValue1], T1.[Task_SalesQuotationDetail_GovtDuty.ExemptedValue2], T1.[Task_SalesQuotationDetail_GovtDuty.ExemptedAmount], T1.[Task_SalesQuotationDetail_GovtDuty.ExemptedAmount1], T1.[Task_SalesQuotationDetail_GovtDuty.ExemptedAmount2])
    FROM (
        SELECT 
            T.Id AS [Task_SalesQuotationDetail_GovtDuty.Id], 
            T.QuotaionDetailId AS [Task_SalesQuotationDetail_GovtDuty.QuotaionDetailId], 
            T.GovtDutyId AS [Task_SalesQuotationDetail_GovtDuty.GovtDutyId], 
            T.RateType AS [Task_SalesQuotationDetail_GovtDuty.RateType], 
            T.RateValue AS [Task_SalesQuotationDetail_GovtDuty.RateValue], 
            T.RateValue1 AS [Task_SalesQuotationDetail_GovtDuty.RateValue1], 
            T.RateValue2 AS [Task_SalesQuotationDetail_GovtDuty.RateValue2], 
            T.RateAmount AS [Task_SalesQuotationDetail_GovtDuty.RateAmount], 
            T.RateAmount1 AS [Task_SalesQuotationDetail_GovtDuty.RateAmount1], 
            T.RateAmount2 AS [Task_SalesQuotationDetail_GovtDuty.RateAmount2], 
            T.ExemptedType AS [Task_SalesQuotationDetail_GovtDuty.ExemptedType], 
            T.ExemptedValue AS [Task_SalesQuotationDetail_GovtDuty.ExemptedValue], 
            T.ExemptedValue1 AS [Task_SalesQuotationDetail_GovtDuty.ExemptedValue1], 
            T.ExemptedValue2 AS [Task_SalesQuotationDetail_GovtDuty.ExemptedValue2], 
            T.ExemptedAmount AS [Task_SalesQuotationDetail_GovtDuty.ExemptedAmount], 
            T.ExemptedAmount1 AS [Task_SalesQuotationDetail_GovtDuty.ExemptedAmount1], 
            T.ExemptedAmount2 AS [Task_SalesQuotationDetail_GovtDuty.ExemptedAmount2], 
            True AS _from0
        FROM Inventory360Entities.Task_SalesQuotationDetail_GovtDuty AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_SalesQuotationNos.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView193()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_SalesQuotationNos
        [BTS_OPSModel.Store.Task_SalesQuotationNos](T1.[Task_SalesQuotationNos.Id], T1.[Task_SalesQuotationNos.QuotationNo], T1.[Task_SalesQuotationNos.Year], T1.[Task_SalesQuotationNos.CompanyId])
    FROM (
        SELECT 
            T.Id AS [Task_SalesQuotationNos.Id], 
            T.QuotationNo AS [Task_SalesQuotationNos.QuotationNo], 
            T.Year AS [Task_SalesQuotationNos.Year], 
            T.CompanyId AS [Task_SalesQuotationNos.CompanyId], 
            True AS _from0
        FROM Inventory360Entities.Task_SalesQuotationNos AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_SalesReturn.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView194()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_SalesReturn
        [BTS_OPSModel.Store.Task_SalesReturn](T1.[Task_SalesReturn.ReturnId], T1.[Task_SalesReturn.ReturnNo], T1.[Task_SalesReturn.ReturnDate], T1.[Task_SalesReturn.AgainstPreviousSales], T1.[Task_SalesReturn.CustomerId], T1.[Task_SalesReturn.SelectedCurrency], T1.[Task_SalesReturn.Currency1Rate], T1.[Task_SalesReturn.Currency2Rate], T1.[Task_SalesReturn.ReturnAmount], T1.[Task_SalesReturn.Return1Amount], T1.[Task_SalesReturn.Return2Amount], T1.[Task_SalesReturn.Approved], T1.[Task_SalesReturn.ApprovedBy], T1.[Task_SalesReturn.ApprovedDate], T1.[Task_SalesReturn.CancelReason], T1.[Task_SalesReturn.Remarks], T1.[Task_SalesReturn.Reason], T1.[Task_SalesReturn.VoucherId], T1.[Task_SalesReturn.LocationId], T1.[Task_SalesReturn.CompanyId], T1.[Task_SalesReturn.EntryBy], T1.[Task_SalesReturn.EntryDate])
    FROM (
        SELECT 
            T.ReturnId AS [Task_SalesReturn.ReturnId], 
            T.ReturnNo AS [Task_SalesReturn.ReturnNo], 
            T.ReturnDate AS [Task_SalesReturn.ReturnDate], 
            T.AgainstPreviousSales AS [Task_SalesReturn.AgainstPreviousSales], 
            T.CustomerId AS [Task_SalesReturn.CustomerId], 
            T.SelectedCurrency AS [Task_SalesReturn.SelectedCurrency], 
            T.Currency1Rate AS [Task_SalesReturn.Currency1Rate], 
            T.Currency2Rate AS [Task_SalesReturn.Currency2Rate], 
            T.ReturnAmount AS [Task_SalesReturn.ReturnAmount], 
            T.Return1Amount AS [Task_SalesReturn.Return1Amount], 
            T.Return2Amount AS [Task_SalesReturn.Return2Amount], 
            T.Approved AS [Task_SalesReturn.Approved], 
            T.ApprovedBy AS [Task_SalesReturn.ApprovedBy], 
            T.ApprovedDate AS [Task_SalesReturn.ApprovedDate], 
            T.CancelReason AS [Task_SalesReturn.CancelReason], 
            T.Remarks AS [Task_SalesReturn.Remarks], 
            T.Reason AS [Task_SalesReturn.Reason], 
            T.VoucherId AS [Task_SalesReturn.VoucherId], 
            T.LocationId AS [Task_SalesReturn.LocationId], 
            T.CompanyId AS [Task_SalesReturn.CompanyId], 
            T.EntryBy AS [Task_SalesReturn.EntryBy], 
            T.EntryDate AS [Task_SalesReturn.EntryDate], 
            True AS _from0
        FROM Inventory360Entities.Task_SalesReturn AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_SalesReturnDetail.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView195()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_SalesReturnDetail
        [BTS_OPSModel.Store.Task_SalesReturnDetail](T1.[Task_SalesReturnDetail.ReturnDetailId], T1.[Task_SalesReturnDetail.ReturnId], T1.[Task_SalesReturnDetail.InvoiceId], T1.[Task_SalesReturnDetail.ProductId], T1.[Task_SalesReturnDetail.ProductDimensionId], T1.[Task_SalesReturnDetail.UnitTypeId], T1.[Task_SalesReturnDetail.Quantity], T1.[Task_SalesReturnDetail.Price], T1.[Task_SalesReturnDetail.Price1], T1.[Task_SalesReturnDetail.Price2], T1.[Task_SalesReturnDetail.SoldPrice], T1.[Task_SalesReturnDetail.SoldPrice1], T1.[Task_SalesReturnDetail.SoldPrice2], T1.[Task_SalesReturnDetail.DiscountAtSold], T1.[Task_SalesReturnDetail.Discount1AtSold], T1.[Task_SalesReturnDetail.Discount2AtSold], T1.[Task_SalesReturnDetail.InvoiceDiscountAtSold], T1.[Task_SalesReturnDetail.InvoiceDiscount1AtSold], T1.[Task_SalesReturnDetail.InvoiceDiscount2AtSold], T1.[Task_SalesReturnDetail.Cost], T1.[Task_SalesReturnDetail.Cost1], T1.[Task_SalesReturnDetail.Cost2], T1.[Task_SalesReturnDetail.LossOrGainAmount], T1.[Task_SalesReturnDetail.LossOrGainAmount1], T1.[Task_SalesReturnDetail.LossOrGainAmount2], T1.[Task_SalesReturnDetail.PrimaryUnitTypeId], T1.[Task_SalesReturnDetail.SecondaryUnitTypeId], T1.[Task_SalesReturnDetail.TertiaryUnitTypeId], T1.[Task_SalesReturnDetail.SecondaryConversionRatio], T1.[Task_SalesReturnDetail.TertiaryConversionRatio], T1.[Task_SalesReturnDetail.GoodsReceiveId], T1.[Task_SalesReturnDetail.ImportedStockInId], T1.[Task_SalesReturnDetail.SupplierId])
    FROM (
        SELECT 
            T.ReturnDetailId AS [Task_SalesReturnDetail.ReturnDetailId], 
            T.ReturnId AS [Task_SalesReturnDetail.ReturnId], 
            T.InvoiceId AS [Task_SalesReturnDetail.InvoiceId], 
            T.ProductId AS [Task_SalesReturnDetail.ProductId], 
            T.ProductDimensionId AS [Task_SalesReturnDetail.ProductDimensionId], 
            T.UnitTypeId AS [Task_SalesReturnDetail.UnitTypeId], 
            T.Quantity AS [Task_SalesReturnDetail.Quantity], 
            T.Price AS [Task_SalesReturnDetail.Price], 
            T.Price1 AS [Task_SalesReturnDetail.Price1], 
            T.Price2 AS [Task_SalesReturnDetail.Price2], 
            T.SoldPrice AS [Task_SalesReturnDetail.SoldPrice], 
            T.SoldPrice1 AS [Task_SalesReturnDetail.SoldPrice1], 
            T.SoldPrice2 AS [Task_SalesReturnDetail.SoldPrice2], 
            T.DiscountAtSold AS [Task_SalesReturnDetail.DiscountAtSold], 
            T.Discount1AtSold AS [Task_SalesReturnDetail.Discount1AtSold], 
            T.Discount2AtSold AS [Task_SalesReturnDetail.Discount2AtSold], 
            T.InvoiceDiscountAtSold AS [Task_SalesReturnDetail.InvoiceDiscountAtSold], 
            T.InvoiceDiscount1AtSold AS [Task_SalesReturnDetail.InvoiceDiscount1AtSold], 
            T.InvoiceDiscount2AtSold AS [Task_SalesReturnDetail.InvoiceDiscount2AtSold], 
            T.Cost AS [Task_SalesReturnDetail.Cost], 
            T.Cost1 AS [Task_SalesReturnDetail.Cost1], 
            T.Cost2 AS [Task_SalesReturnDetail.Cost2], 
            T.LossOrGainAmount AS [Task_SalesReturnDetail.LossOrGainAmount], 
            T.LossOrGainAmount1 AS [Task_SalesReturnDetail.LossOrGainAmount1], 
            T.LossOrGainAmount2 AS [Task_SalesReturnDetail.LossOrGainAmount2], 
            T.PrimaryUnitTypeId AS [Task_SalesReturnDetail.PrimaryUnitTypeId], 
            T.SecondaryUnitTypeId AS [Task_SalesReturnDetail.SecondaryUnitTypeId], 
            T.TertiaryUnitTypeId AS [Task_SalesReturnDetail.TertiaryUnitTypeId], 
            T.SecondaryConversionRatio AS [Task_SalesReturnDetail.SecondaryConversionRatio], 
            T.TertiaryConversionRatio AS [Task_SalesReturnDetail.TertiaryConversionRatio], 
            T.GoodsReceiveId AS [Task_SalesReturnDetail.GoodsReceiveId], 
            T.ImportedStockInId AS [Task_SalesReturnDetail.ImportedStockInId], 
            T.SupplierId AS [Task_SalesReturnDetail.SupplierId], 
            True AS _from0
        FROM Inventory360Entities.Task_SalesReturnDetail AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_SalesReturnDetailSerial.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView196()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_SalesReturnDetailSerial
        [BTS_OPSModel.Store.Task_SalesReturnDetailSerial](T1.[Task_SalesReturnDetailSerial.ReturnDetailSerialId], T1.[Task_SalesReturnDetailSerial.ReturnDetailId], T1.[Task_SalesReturnDetailSerial.Serial], T1.[Task_SalesReturnDetailSerial.AdditionalSerial])
    FROM (
        SELECT 
            T.ReturnDetailSerialId AS [Task_SalesReturnDetailSerial.ReturnDetailSerialId], 
            T.ReturnDetailId AS [Task_SalesReturnDetailSerial.ReturnDetailId], 
            T.Serial AS [Task_SalesReturnDetailSerial.Serial], 
            T.AdditionalSerial AS [Task_SalesReturnDetailSerial.AdditionalSerial], 
            True AS _from0
        FROM Inventory360Entities.Task_SalesReturnDetailSerial AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_SalesReturnNos.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView197()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_SalesReturnNos
        [BTS_OPSModel.Store.Task_SalesReturnNos](T1.[Task_SalesReturnNos.Id], T1.[Task_SalesReturnNos.ReturnNo], T1.[Task_SalesReturnNos.Year], T1.[Task_SalesReturnNos.CompanyId])
    FROM (
        SELECT 
            T.Id AS [Task_SalesReturnNos.Id], 
            T.ReturnNo AS [Task_SalesReturnNos.ReturnNo], 
            T.Year AS [Task_SalesReturnNos.Year], 
            T.CompanyId AS [Task_SalesReturnNos.CompanyId], 
            True AS _from0
        FROM Inventory360Entities.Task_SalesReturnNos AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_StockAdjustment.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView198()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_StockAdjustment
        [BTS_OPSModel.Store.Task_StockAdjustment](T1.[Task_StockAdjustment.AdjustmentId], T1.[Task_StockAdjustment.AdjustmentNo], T1.[Task_StockAdjustment.AdjustmentDate], T1.[Task_StockAdjustment.RequestedBy], T1.[Task_StockAdjustment.SelectedCurrency], T1.[Task_StockAdjustment.Currency1Rate], T1.[Task_StockAdjustment.Currency2Rate], T1.[Task_StockAdjustment.Approved], T1.[Task_StockAdjustment.ApprovedBy], T1.[Task_StockAdjustment.ApprovedDate], T1.[Task_StockAdjustment.CancelReason], T1.[Task_StockAdjustment.Remarks], T1.[Task_StockAdjustment.LocationId], T1.[Task_StockAdjustment.CompanyId], T1.[Task_StockAdjustment.EntryBy], T1.[Task_StockAdjustment.EntryDate])
    FROM (
        SELECT 
            T.AdjustmentId AS [Task_StockAdjustment.AdjustmentId], 
            T.AdjustmentNo AS [Task_StockAdjustment.AdjustmentNo], 
            T.AdjustmentDate AS [Task_StockAdjustment.AdjustmentDate], 
            T.RequestedBy AS [Task_StockAdjustment.RequestedBy], 
            T.SelectedCurrency AS [Task_StockAdjustment.SelectedCurrency], 
            T.Currency1Rate AS [Task_StockAdjustment.Currency1Rate], 
            T.Currency2Rate AS [Task_StockAdjustment.Currency2Rate], 
            T.Approved AS [Task_StockAdjustment.Approved], 
            T.ApprovedBy AS [Task_StockAdjustment.ApprovedBy], 
            T.ApprovedDate AS [Task_StockAdjustment.ApprovedDate], 
            T.CancelReason AS [Task_StockAdjustment.CancelReason], 
            T.Remarks AS [Task_StockAdjustment.Remarks], 
            T.LocationId AS [Task_StockAdjustment.LocationId], 
            T.CompanyId AS [Task_StockAdjustment.CompanyId], 
            T.EntryBy AS [Task_StockAdjustment.EntryBy], 
            T.EntryDate AS [Task_StockAdjustment.EntryDate], 
            True AS _from0
        FROM Inventory360Entities.Task_StockAdjustment AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_StockAdjustmentDetail.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView199()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_StockAdjustmentDetail
        [BTS_OPSModel.Store.Task_StockAdjustmentDetail](T1.[Task_StockAdjustmentDetail.AdjustmentDetailId], T1.[Task_StockAdjustmentDetail.AdjustmentId], T1.[Task_StockAdjustmentDetail.ProductId], T1.[Task_StockAdjustmentDetail.ProductDimensionId], T1.[Task_StockAdjustmentDetail.UnitTypeId], T1.[Task_StockAdjustmentDetail.Quantity], T1.[Task_StockAdjustmentDetail.IncreaseDecrease], T1.[Task_StockAdjustmentDetail.Cost], T1.[Task_StockAdjustmentDetail.Cost1], T1.[Task_StockAdjustmentDetail.Cost2], T1.[Task_StockAdjustmentDetail.WareHouseId], T1.[Task_StockAdjustmentDetail.PrimaryUnitTypeId], T1.[Task_StockAdjustmentDetail.SecondaryUnitTypeId], T1.[Task_StockAdjustmentDetail.TertiaryUnitTypeId], T1.[Task_StockAdjustmentDetail.SecondaryConversionRatio], T1.[Task_StockAdjustmentDetail.TertiaryConversionRatio])
    FROM (
        SELECT 
            T.AdjustmentDetailId AS [Task_StockAdjustmentDetail.AdjustmentDetailId], 
            T.AdjustmentId AS [Task_StockAdjustmentDetail.AdjustmentId], 
            T.ProductId AS [Task_StockAdjustmentDetail.ProductId], 
            T.ProductDimensionId AS [Task_StockAdjustmentDetail.ProductDimensionId], 
            T.UnitTypeId AS [Task_StockAdjustmentDetail.UnitTypeId], 
            T.Quantity AS [Task_StockAdjustmentDetail.Quantity], 
            T.IncreaseDecrease AS [Task_StockAdjustmentDetail.IncreaseDecrease], 
            T.Cost AS [Task_StockAdjustmentDetail.Cost], 
            T.Cost1 AS [Task_StockAdjustmentDetail.Cost1], 
            T.Cost2 AS [Task_StockAdjustmentDetail.Cost2], 
            T.WareHouseId AS [Task_StockAdjustmentDetail.WareHouseId], 
            T.PrimaryUnitTypeId AS [Task_StockAdjustmentDetail.PrimaryUnitTypeId], 
            T.SecondaryUnitTypeId AS [Task_StockAdjustmentDetail.SecondaryUnitTypeId], 
            T.TertiaryUnitTypeId AS [Task_StockAdjustmentDetail.TertiaryUnitTypeId], 
            T.SecondaryConversionRatio AS [Task_StockAdjustmentDetail.SecondaryConversionRatio], 
            T.TertiaryConversionRatio AS [Task_StockAdjustmentDetail.TertiaryConversionRatio], 
            True AS _from0
        FROM Inventory360Entities.Task_StockAdjustmentDetail AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_StockAdjustmentDetailSerial.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView200()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_StockAdjustmentDetailSerial
        [BTS_OPSModel.Store.Task_StockAdjustmentDetailSerial](T1.[Task_StockAdjustmentDetailSerial.AdjustmentDetailSerialId], T1.[Task_StockAdjustmentDetailSerial.AdjustmentDetailId], T1.[Task_StockAdjustmentDetailSerial.Serial], T1.[Task_StockAdjustmentDetailSerial.AdditionalSerial])
    FROM (
        SELECT 
            T.AdjustmentDetailSerialId AS [Task_StockAdjustmentDetailSerial.AdjustmentDetailSerialId], 
            T.AdjustmentDetailId AS [Task_StockAdjustmentDetailSerial.AdjustmentDetailId], 
            T.Serial AS [Task_StockAdjustmentDetailSerial.Serial], 
            T.AdditionalSerial AS [Task_StockAdjustmentDetailSerial.AdditionalSerial], 
            True AS _from0
        FROM Inventory360Entities.Task_StockAdjustmentDetailSerial AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_StockAdjustmentNos.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView201()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_StockAdjustmentNos
        [BTS_OPSModel.Store.Task_StockAdjustmentNos](T1.[Task_StockAdjustmentNos.Id], T1.[Task_StockAdjustmentNos.AdjustmentNo], T1.[Task_StockAdjustmentNos.Year], T1.[Task_StockAdjustmentNos.CompanyId])
    FROM (
        SELECT 
            T.Id AS [Task_StockAdjustmentNos.Id], 
            T.AdjustmentNo AS [Task_StockAdjustmentNos.AdjustmentNo], 
            T.Year AS [Task_StockAdjustmentNos.Year], 
            T.CompanyId AS [Task_StockAdjustmentNos.CompanyId], 
            True AS _from0
        FROM Inventory360Entities.Task_StockAdjustmentNos AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_TransferChallan.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView202()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_TransferChallan
        [BTS_OPSModel.Store.Task_TransferChallan](T1.[Task_TransferChallan.ChallanId], T1.[Task_TransferChallan.ChallanNo], T1.[Task_TransferChallan.ChallanDate], T1.[Task_TransferChallan.TransferOperationType], T1.[Task_TransferChallan.TransferFromStockType], T1.[Task_TransferChallan.TransferToId], T1.[Task_TransferChallan.TransferToStockType], T1.[Task_TransferChallan.IsSettledByReceive], T1.[Task_TransferChallan.Approved], T1.[Task_TransferChallan.ApprovedBy], T1.[Task_TransferChallan.ApprovedDate], T1.[Task_TransferChallan.CancelReason], T1.[Task_TransferChallan.DeliveryPlace], T1.[Task_TransferChallan.ContactPerson], T1.[Task_TransferChallan.ContactPersonNo], T1.[Task_TransferChallan.TransportId], T1.[Task_TransferChallan.TransportTypeId], T1.[Task_TransferChallan.VehicleNo], T1.[Task_TransferChallan.DriverName], T1.[Task_TransferChallan.DriverContactNo], T1.[Task_TransferChallan.LocationId], T1.[Task_TransferChallan.CompanyId], T1.[Task_TransferChallan.EntryBy], T1.[Task_TransferChallan.EntryDate])
    FROM (
        SELECT 
            T.ChallanId AS [Task_TransferChallan.ChallanId], 
            T.ChallanNo AS [Task_TransferChallan.ChallanNo], 
            T.ChallanDate AS [Task_TransferChallan.ChallanDate], 
            T.TransferOperationType AS [Task_TransferChallan.TransferOperationType], 
            T.TransferFromStockType AS [Task_TransferChallan.TransferFromStockType], 
            T.TransferToId AS [Task_TransferChallan.TransferToId], 
            T.TransferToStockType AS [Task_TransferChallan.TransferToStockType], 
            T.IsSettledByReceive AS [Task_TransferChallan.IsSettledByReceive], 
            T.Approved AS [Task_TransferChallan.Approved], 
            T.ApprovedBy AS [Task_TransferChallan.ApprovedBy], 
            T.ApprovedDate AS [Task_TransferChallan.ApprovedDate], 
            T.CancelReason AS [Task_TransferChallan.CancelReason], 
            T.DeliveryPlace AS [Task_TransferChallan.DeliveryPlace], 
            T.ContactPerson AS [Task_TransferChallan.ContactPerson], 
            T.ContactPersonNo AS [Task_TransferChallan.ContactPersonNo], 
            T.TransportId AS [Task_TransferChallan.TransportId], 
            T.TransportTypeId AS [Task_TransferChallan.TransportTypeId], 
            T.VehicleNo AS [Task_TransferChallan.VehicleNo], 
            T.DriverName AS [Task_TransferChallan.DriverName], 
            T.DriverContactNo AS [Task_TransferChallan.DriverContactNo], 
            T.LocationId AS [Task_TransferChallan.LocationId], 
            T.CompanyId AS [Task_TransferChallan.CompanyId], 
            T.EntryBy AS [Task_TransferChallan.EntryBy], 
            T.EntryDate AS [Task_TransferChallan.EntryDate], 
            True AS _from0
        FROM Inventory360Entities.Task_TransferChallan AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_TransferChallanDetail.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView203()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_TransferChallanDetail
        [BTS_OPSModel.Store.Task_TransferChallanDetail](T1.[Task_TransferChallanDetail.ChallanDetailId], T1.[Task_TransferChallanDetail.ChallanId], T1.[Task_TransferChallanDetail.OrderId], T1.[Task_TransferChallanDetail.ProductId], T1.[Task_TransferChallanDetail.ProductDimensionId], T1.[Task_TransferChallanDetail.UnitTypeId], T1.[Task_TransferChallanDetail.Quantity], T1.[Task_TransferChallanDetail.ReceivedQuantity], T1.[Task_TransferChallanDetail.Cost], T1.[Task_TransferChallanDetail.Cost1], T1.[Task_TransferChallanDetail.Cost2], T1.[Task_TransferChallanDetail.PrimaryUnitTypeId], T1.[Task_TransferChallanDetail.SecondaryUnitTypeId], T1.[Task_TransferChallanDetail.TertiaryUnitTypeId], T1.[Task_TransferChallanDetail.SecondaryConversionRatio], T1.[Task_TransferChallanDetail.TertiaryConversionRatio], T1.[Task_TransferChallanDetail.WareHouseId], T1.[Task_TransferChallanDetail.ToWareHouseId], T1.[Task_TransferChallanDetail.GoodsReceiveId], T1.[Task_TransferChallanDetail.ImportedStockInId], T1.[Task_TransferChallanDetail.SupplierId], T1.[Task_TransferChallanDetail.CurrentBadRMAStockId], T1.[Task_TransferChallanDetail.PrimaryQuantity])
    FROM (
        SELECT 
            T.ChallanDetailId AS [Task_TransferChallanDetail.ChallanDetailId], 
            T.ChallanId AS [Task_TransferChallanDetail.ChallanId], 
            T.OrderId AS [Task_TransferChallanDetail.OrderId], 
            T.ProductId AS [Task_TransferChallanDetail.ProductId], 
            T.ProductDimensionId AS [Task_TransferChallanDetail.ProductDimensionId], 
            T.UnitTypeId AS [Task_TransferChallanDetail.UnitTypeId], 
            T.Quantity AS [Task_TransferChallanDetail.Quantity], 
            T.ReceivedQuantity AS [Task_TransferChallanDetail.ReceivedQuantity], 
            T.Cost AS [Task_TransferChallanDetail.Cost], 
            T.Cost1 AS [Task_TransferChallanDetail.Cost1], 
            T.Cost2 AS [Task_TransferChallanDetail.Cost2], 
            T.PrimaryUnitTypeId AS [Task_TransferChallanDetail.PrimaryUnitTypeId], 
            T.SecondaryUnitTypeId AS [Task_TransferChallanDetail.SecondaryUnitTypeId], 
            T.TertiaryUnitTypeId AS [Task_TransferChallanDetail.TertiaryUnitTypeId], 
            T.SecondaryConversionRatio AS [Task_TransferChallanDetail.SecondaryConversionRatio], 
            T.TertiaryConversionRatio AS [Task_TransferChallanDetail.TertiaryConversionRatio], 
            T.WareHouseId AS [Task_TransferChallanDetail.WareHouseId], 
            T.ToWareHouseId AS [Task_TransferChallanDetail.ToWareHouseId], 
            T.GoodsReceiveId AS [Task_TransferChallanDetail.GoodsReceiveId], 
            T.ImportedStockInId AS [Task_TransferChallanDetail.ImportedStockInId], 
            T.SupplierId AS [Task_TransferChallanDetail.SupplierId], 
            T.CurrentBadRMAStockId AS [Task_TransferChallanDetail.CurrentBadRMAStockId], 
            T.PrimaryQuantity AS [Task_TransferChallanDetail.PrimaryQuantity], 
            True AS _from0
        FROM Inventory360Entities.Task_TransferChallanDetail AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_TransferChallanDetailSerial.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView204()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_TransferChallanDetailSerial
        [BTS_OPSModel.Store.Task_TransferChallanDetailSerial](T1.[Task_TransferChallanDetailSerial.ChallanDetailSerialId], T1.[Task_TransferChallanDetailSerial.ChallanDetailId], T1.[Task_TransferChallanDetailSerial.Serial], T1.[Task_TransferChallanDetailSerial.AdditionalSerial])
    FROM (
        SELECT 
            T.ChallanDetailSerialId AS [Task_TransferChallanDetailSerial.ChallanDetailSerialId], 
            T.ChallanDetailId AS [Task_TransferChallanDetailSerial.ChallanDetailId], 
            T.Serial AS [Task_TransferChallanDetailSerial.Serial], 
            T.AdditionalSerial AS [Task_TransferChallanDetailSerial.AdditionalSerial], 
            True AS _from0
        FROM Inventory360Entities.Task_TransferChallanDetailSerial AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_TransferChallanNos.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView205()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_TransferChallanNos
        [BTS_OPSModel.Store.Task_TransferChallanNos](T1.[Task_TransferChallanNos.Id], T1.[Task_TransferChallanNos.ChallanNo], T1.[Task_TransferChallanNos.Year], T1.[Task_TransferChallanNos.CompanyId])
    FROM (
        SELECT 
            T.Id AS [Task_TransferChallanNos.Id], 
            T.ChallanNo AS [Task_TransferChallanNos.ChallanNo], 
            T.Year AS [Task_TransferChallanNos.Year], 
            T.CompanyId AS [Task_TransferChallanNos.CompanyId], 
            True AS _from0
        FROM Inventory360Entities.Task_TransferChallanNos AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_TransferOrder.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView206()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_TransferOrder
        [BTS_OPSModel.Store.Task_TransferOrder](T1.[Task_TransferOrder.OrderId], T1.[Task_TransferOrder.OrderNo], T1.[Task_TransferOrder.OrderDate], T1.[Task_TransferOrder.OrderBy], T1.[Task_TransferOrder.TransferToId], T1.[Task_TransferOrder.TransferToStockType], T1.[Task_TransferOrder.TransferFromId], T1.[Task_TransferOrder.TransferFromStockType], T1.[Task_TransferOrder.Remarks], T1.[Task_TransferOrder.IsSettledByChallan], T1.[Task_TransferOrder.Approved], T1.[Task_TransferOrder.ApprovedBy], T1.[Task_TransferOrder.ApprovedDate], T1.[Task_TransferOrder.CancelReason], T1.[Task_TransferOrder.LocationId], T1.[Task_TransferOrder.CompanyId], T1.[Task_TransferOrder.EntryBy], T1.[Task_TransferOrder.EntryDate])
    FROM (
        SELECT 
            T.OrderId AS [Task_TransferOrder.OrderId], 
            T.OrderNo AS [Task_TransferOrder.OrderNo], 
            T.OrderDate AS [Task_TransferOrder.OrderDate], 
            T.OrderBy AS [Task_TransferOrder.OrderBy], 
            T.TransferToId AS [Task_TransferOrder.TransferToId], 
            T.TransferToStockType AS [Task_TransferOrder.TransferToStockType], 
            T.TransferFromId AS [Task_TransferOrder.TransferFromId], 
            T.TransferFromStockType AS [Task_TransferOrder.TransferFromStockType], 
            T.Remarks AS [Task_TransferOrder.Remarks], 
            T.IsSettledByChallan AS [Task_TransferOrder.IsSettledByChallan], 
            T.Approved AS [Task_TransferOrder.Approved], 
            T.ApprovedBy AS [Task_TransferOrder.ApprovedBy], 
            T.ApprovedDate AS [Task_TransferOrder.ApprovedDate], 
            T.CancelReason AS [Task_TransferOrder.CancelReason], 
            T.LocationId AS [Task_TransferOrder.LocationId], 
            T.CompanyId AS [Task_TransferOrder.CompanyId], 
            T.EntryBy AS [Task_TransferOrder.EntryBy], 
            T.EntryDate AS [Task_TransferOrder.EntryDate], 
            True AS _from0
        FROM Inventory360Entities.Task_TransferOrder AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_TransferOrderDetail.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView207()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_TransferOrderDetail
        [BTS_OPSModel.Store.Task_TransferOrderDetail](T1.[Task_TransferOrderDetail.OrderDetailId], T1.[Task_TransferOrderDetail.OrderId], T1.[Task_TransferOrderDetail.RequisitionId], T1.[Task_TransferOrderDetail.ProductId], T1.[Task_TransferOrderDetail.ProductDimensionId], T1.[Task_TransferOrderDetail.UnitTypeId], T1.[Task_TransferOrderDetail.Quantity], T1.[Task_TransferOrderDetail.ChallanQuantity])
    FROM (
        SELECT 
            T.OrderDetailId AS [Task_TransferOrderDetail.OrderDetailId], 
            T.OrderId AS [Task_TransferOrderDetail.OrderId], 
            T.RequisitionId AS [Task_TransferOrderDetail.RequisitionId], 
            T.ProductId AS [Task_TransferOrderDetail.ProductId], 
            T.ProductDimensionId AS [Task_TransferOrderDetail.ProductDimensionId], 
            T.UnitTypeId AS [Task_TransferOrderDetail.UnitTypeId], 
            T.Quantity AS [Task_TransferOrderDetail.Quantity], 
            T.ChallanQuantity AS [Task_TransferOrderDetail.ChallanQuantity], 
            True AS _from0
        FROM Inventory360Entities.Task_TransferOrderDetail AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_TransferOrderNos.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView208()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_TransferOrderNos
        [BTS_OPSModel.Store.Task_TransferOrderNos](T1.[Task_TransferOrderNos.Id], T1.[Task_TransferOrderNos.OrderNo], T1.[Task_TransferOrderNos.Year], T1.[Task_TransferOrderNos.CompanyId])
    FROM (
        SELECT 
            T.Id AS [Task_TransferOrderNos.Id], 
            T.OrderNo AS [Task_TransferOrderNos.OrderNo], 
            T.Year AS [Task_TransferOrderNos.Year], 
            T.CompanyId AS [Task_TransferOrderNos.CompanyId], 
            True AS _from0
        FROM Inventory360Entities.Task_TransferOrderNos AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_TransferReceive.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView209()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_TransferReceive
        [BTS_OPSModel.Store.Task_TransferReceive](T1.[Task_TransferReceive.ReceiveId], T1.[Task_TransferReceive.ReceiveNo], T1.[Task_TransferReceive.ReceiveDate], T1.[Task_TransferReceive.TransferChallanId], T1.[Task_TransferReceive.ReceivedBy], T1.[Task_TransferReceive.Remarks], T1.[Task_TransferReceive.Approved], T1.[Task_TransferReceive.ApprovedBy], T1.[Task_TransferReceive.ApprovedDate], T1.[Task_TransferReceive.CancelReason], T1.[Task_TransferReceive.LocationId], T1.[Task_TransferReceive.CompanyId], T1.[Task_TransferReceive.EntryBy], T1.[Task_TransferReceive.EntryDate])
    FROM (
        SELECT 
            T.ReceiveId AS [Task_TransferReceive.ReceiveId], 
            T.ReceiveNo AS [Task_TransferReceive.ReceiveNo], 
            T.ReceiveDate AS [Task_TransferReceive.ReceiveDate], 
            T.TransferChallanId AS [Task_TransferReceive.TransferChallanId], 
            T.ReceivedBy AS [Task_TransferReceive.ReceivedBy], 
            T.Remarks AS [Task_TransferReceive.Remarks], 
            T.Approved AS [Task_TransferReceive.Approved], 
            T.ApprovedBy AS [Task_TransferReceive.ApprovedBy], 
            T.ApprovedDate AS [Task_TransferReceive.ApprovedDate], 
            T.CancelReason AS [Task_TransferReceive.CancelReason], 
            T.LocationId AS [Task_TransferReceive.LocationId], 
            T.CompanyId AS [Task_TransferReceive.CompanyId], 
            T.EntryBy AS [Task_TransferReceive.EntryBy], 
            T.EntryDate AS [Task_TransferReceive.EntryDate], 
            True AS _from0
        FROM Inventory360Entities.Task_TransferReceive AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_TransferReceiveDetail.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView210()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_TransferReceiveDetail
        [BTS_OPSModel.Store.Task_TransferReceiveDetail](T1.[Task_TransferReceiveDetail.ReceiveDetailId], T1.[Task_TransferReceiveDetail.ReceiveId], T1.[Task_TransferReceiveDetail.ProductId], T1.[Task_TransferReceiveDetail.ProductDimensionId], T1.[Task_TransferReceiveDetail.UnitTypeId], T1.[Task_TransferReceiveDetail.Quantity], T1.[Task_TransferReceiveDetail.Cost], T1.[Task_TransferReceiveDetail.Cost1], T1.[Task_TransferReceiveDetail.Cost2], T1.[Task_TransferReceiveDetail.PrimaryUnitTypeId], T1.[Task_TransferReceiveDetail.SecondaryUnitTypeId], T1.[Task_TransferReceiveDetail.TertiaryUnitTypeId], T1.[Task_TransferReceiveDetail.SecondaryConversionRatio], T1.[Task_TransferReceiveDetail.TertiaryConversionRatio], T1.[Task_TransferReceiveDetail.ReceivedWareHouseId], T1.[Task_TransferReceiveDetail.TranFromWareHouseId], T1.[Task_TransferReceiveDetail.GoodsReceiveId], T1.[Task_TransferReceiveDetail.ImportedStockInId], T1.[Task_TransferReceiveDetail.SupplierId])
    FROM (
        SELECT 
            T.ReceiveDetailId AS [Task_TransferReceiveDetail.ReceiveDetailId], 
            T.ReceiveId AS [Task_TransferReceiveDetail.ReceiveId], 
            T.ProductId AS [Task_TransferReceiveDetail.ProductId], 
            T.ProductDimensionId AS [Task_TransferReceiveDetail.ProductDimensionId], 
            T.UnitTypeId AS [Task_TransferReceiveDetail.UnitTypeId], 
            T.Quantity AS [Task_TransferReceiveDetail.Quantity], 
            T.Cost AS [Task_TransferReceiveDetail.Cost], 
            T.Cost1 AS [Task_TransferReceiveDetail.Cost1], 
            T.Cost2 AS [Task_TransferReceiveDetail.Cost2], 
            T.PrimaryUnitTypeId AS [Task_TransferReceiveDetail.PrimaryUnitTypeId], 
            T.SecondaryUnitTypeId AS [Task_TransferReceiveDetail.SecondaryUnitTypeId], 
            T.TertiaryUnitTypeId AS [Task_TransferReceiveDetail.TertiaryUnitTypeId], 
            T.SecondaryConversionRatio AS [Task_TransferReceiveDetail.SecondaryConversionRatio], 
            T.TertiaryConversionRatio AS [Task_TransferReceiveDetail.TertiaryConversionRatio], 
            T.ReceivedWareHouseId AS [Task_TransferReceiveDetail.ReceivedWareHouseId], 
            T.TranFromWareHouseId AS [Task_TransferReceiveDetail.TranFromWareHouseId], 
            T.GoodsReceiveId AS [Task_TransferReceiveDetail.GoodsReceiveId], 
            T.ImportedStockInId AS [Task_TransferReceiveDetail.ImportedStockInId], 
            T.SupplierId AS [Task_TransferReceiveDetail.SupplierId], 
            True AS _from0
        FROM Inventory360Entities.Task_TransferReceiveDetail AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_TransferReceiveDetailSerial.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView211()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_TransferReceiveDetailSerial
        [BTS_OPSModel.Store.Task_TransferReceiveDetailSerial](T1.[Task_TransferReceiveDetailSerial.ReceiveDetailSerialId], T1.[Task_TransferReceiveDetailSerial.ReceiveDetailId], T1.[Task_TransferReceiveDetailSerial.Serial], T1.[Task_TransferReceiveDetailSerial.AdditionalSerial])
    FROM (
        SELECT 
            T.ReceiveDetailSerialId AS [Task_TransferReceiveDetailSerial.ReceiveDetailSerialId], 
            T.ReceiveDetailId AS [Task_TransferReceiveDetailSerial.ReceiveDetailId], 
            T.Serial AS [Task_TransferReceiveDetailSerial.Serial], 
            T.AdditionalSerial AS [Task_TransferReceiveDetailSerial.AdditionalSerial], 
            True AS _from0
        FROM Inventory360Entities.Task_TransferReceiveDetailSerial AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_TransferReceiveNos.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView212()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_TransferReceiveNos
        [BTS_OPSModel.Store.Task_TransferReceiveNos](T1.[Task_TransferReceiveNos.Id], T1.[Task_TransferReceiveNos.ReceiveNo], T1.[Task_TransferReceiveNos.Year], T1.[Task_TransferReceiveNos.CompanyId])
    FROM (
        SELECT 
            T.Id AS [Task_TransferReceiveNos.Id], 
            T.ReceiveNo AS [Task_TransferReceiveNos.ReceiveNo], 
            T.Year AS [Task_TransferReceiveNos.Year], 
            T.CompanyId AS [Task_TransferReceiveNos.CompanyId], 
            True AS _from0
        FROM Inventory360Entities.Task_TransferReceiveNos AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_TransferRequisitionFinalize.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView213()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_TransferRequisitionFinalize
        [BTS_OPSModel.Store.Task_TransferRequisitionFinalize](T1.[Task_TransferRequisitionFinalize.RequisitionId], T1.[Task_TransferRequisitionFinalize.RequisitionNo], T1.[Task_TransferRequisitionFinalize.RequisitionDate], T1.[Task_TransferRequisitionFinalize.RequisitionBy], T1.[Task_TransferRequisitionFinalize.ReqToLocationId], T1.[Task_TransferRequisitionFinalize.StockType], T1.[Task_TransferRequisitionFinalize.Remarks], T1.[Task_TransferRequisitionFinalize.IsSettled], T1.[Task_TransferRequisitionFinalize.Approved], T1.[Task_TransferRequisitionFinalize.ApprovedBy], T1.[Task_TransferRequisitionFinalize.ApprovedDate], T1.[Task_TransferRequisitionFinalize.CancelReason], T1.[Task_TransferRequisitionFinalize.LocationId], T1.[Task_TransferRequisitionFinalize.CompanyId], T1.[Task_TransferRequisitionFinalize.EntryBy], T1.[Task_TransferRequisitionFinalize.EntryDate])
    FROM (
        SELECT 
            T.RequisitionId AS [Task_TransferRequisitionFinalize.RequisitionId], 
            T.RequisitionNo AS [Task_TransferRequisitionFinalize.RequisitionNo], 
            T.RequisitionDate AS [Task_TransferRequisitionFinalize.RequisitionDate], 
            T.RequisitionBy AS [Task_TransferRequisitionFinalize.RequisitionBy], 
            T.ReqToLocationId AS [Task_TransferRequisitionFinalize.ReqToLocationId], 
            T.StockType AS [Task_TransferRequisitionFinalize.StockType], 
            T.Remarks AS [Task_TransferRequisitionFinalize.Remarks], 
            T.IsSettled AS [Task_TransferRequisitionFinalize.IsSettled], 
            T.Approved AS [Task_TransferRequisitionFinalize.Approved], 
            T.ApprovedBy AS [Task_TransferRequisitionFinalize.ApprovedBy], 
            T.ApprovedDate AS [Task_TransferRequisitionFinalize.ApprovedDate], 
            T.CancelReason AS [Task_TransferRequisitionFinalize.CancelReason], 
            T.LocationId AS [Task_TransferRequisitionFinalize.LocationId], 
            T.CompanyId AS [Task_TransferRequisitionFinalize.CompanyId], 
            T.EntryBy AS [Task_TransferRequisitionFinalize.EntryBy], 
            T.EntryDate AS [Task_TransferRequisitionFinalize.EntryDate], 
            True AS _from0
        FROM Inventory360Entities.Task_TransferRequisitionFinalize AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_TransferRequisitionFinalizeDetail.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView214()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_TransferRequisitionFinalizeDetail
        [BTS_OPSModel.Store.Task_TransferRequisitionFinalizeDetail](T1.[Task_TransferRequisitionFinalizeDetail.RequisitionDetailId], T1.[Task_TransferRequisitionFinalizeDetail.RequisitionId], T1.[Task_TransferRequisitionFinalizeDetail.ItemRequisitionId], T1.[Task_TransferRequisitionFinalizeDetail.ProductId], T1.[Task_TransferRequisitionFinalizeDetail.ProductDimensionId], T1.[Task_TransferRequisitionFinalizeDetail.UnitTypeId], T1.[Task_TransferRequisitionFinalizeDetail.Quantity], T1.[Task_TransferRequisitionFinalizeDetail.OrderedQuantity])
    FROM (
        SELECT 
            T.RequisitionDetailId AS [Task_TransferRequisitionFinalizeDetail.RequisitionDetailId], 
            T.RequisitionId AS [Task_TransferRequisitionFinalizeDetail.RequisitionId], 
            T.ItemRequisitionId AS [Task_TransferRequisitionFinalizeDetail.ItemRequisitionId], 
            T.ProductId AS [Task_TransferRequisitionFinalizeDetail.ProductId], 
            T.ProductDimensionId AS [Task_TransferRequisitionFinalizeDetail.ProductDimensionId], 
            T.UnitTypeId AS [Task_TransferRequisitionFinalizeDetail.UnitTypeId], 
            T.Quantity AS [Task_TransferRequisitionFinalizeDetail.Quantity], 
            T.OrderedQuantity AS [Task_TransferRequisitionFinalizeDetail.OrderedQuantity], 
            True AS _from0
        FROM Inventory360Entities.Task_TransferRequisitionFinalizeDetail AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_TransferRequisitionFinalizeNos.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView215()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_TransferRequisitionFinalizeNos
        [BTS_OPSModel.Store.Task_TransferRequisitionFinalizeNos](T1.[Task_TransferRequisitionFinalizeNos.Id], T1.[Task_TransferRequisitionFinalizeNos.RequisitionNo], T1.[Task_TransferRequisitionFinalizeNos.Year], T1.[Task_TransferRequisitionFinalizeNos.CompanyId])
    FROM (
        SELECT 
            T.Id AS [Task_TransferRequisitionFinalizeNos.Id], 
            T.RequisitionNo AS [Task_TransferRequisitionFinalizeNos.RequisitionNo], 
            T.Year AS [Task_TransferRequisitionFinalizeNos.Year], 
            T.CompanyId AS [Task_TransferRequisitionFinalizeNos.CompanyId], 
            True AS _from0
        FROM Inventory360Entities.Task_TransferRequisitionFinalizeNos AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_Voucher.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView216()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_Voucher
        [BTS_OPSModel.Store.Task_Voucher](T1.[Task_Voucher.VoucherId], T1.[Task_Voucher.VoucherNo], T1.[Task_Voucher.Date], T1.[Task_Voucher.VoucherType], T1.[Task_Voucher.OperationType], T1.[Task_Voucher.Description], T1.[Task_Voucher.SelectedCurrency], T1.[Task_Voucher.Approved], T1.[Task_Voucher.ApprovedBy], T1.[Task_Voucher.ApprovedDate], T1.[Task_Voucher.CancelReason], T1.[Task_Voucher.Posted], T1.[Task_Voucher.PostedBy], T1.[Task_Voucher.PostedDate], T1.[Task_Voucher.OperationalEventId], T1.[Task_Voucher.LocationId], T1.[Task_Voucher.CompanyId], T1.[Task_Voucher.EntryBy], T1.[Task_Voucher.EntryDate], T1.[Task_Voucher.EditedBy], T1.[Task_Voucher.EditedDate])
    FROM (
        SELECT 
            T.VoucherId AS [Task_Voucher.VoucherId], 
            T.VoucherNo AS [Task_Voucher.VoucherNo], 
            T.Date AS [Task_Voucher.Date], 
            T.VoucherType AS [Task_Voucher.VoucherType], 
            T.OperationType AS [Task_Voucher.OperationType], 
            T.Description AS [Task_Voucher.Description], 
            T.SelectedCurrency AS [Task_Voucher.SelectedCurrency], 
            T.Approved AS [Task_Voucher.Approved], 
            T.ApprovedBy AS [Task_Voucher.ApprovedBy], 
            T.ApprovedDate AS [Task_Voucher.ApprovedDate], 
            T.CancelReason AS [Task_Voucher.CancelReason], 
            T.Posted AS [Task_Voucher.Posted], 
            T.PostedBy AS [Task_Voucher.PostedBy], 
            T.PostedDate AS [Task_Voucher.PostedDate], 
            T.OperationalEventId AS [Task_Voucher.OperationalEventId], 
            T.LocationId AS [Task_Voucher.LocationId], 
            T.CompanyId AS [Task_Voucher.CompanyId], 
            T.EntryBy AS [Task_Voucher.EntryBy], 
            T.EntryDate AS [Task_Voucher.EntryDate], 
            T.EditedBy AS [Task_Voucher.EditedBy], 
            T.EditedDate AS [Task_Voucher.EditedDate], 
            True AS _from0
        FROM Inventory360Entities.Task_Voucher AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_VoucherDetail.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView217()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_VoucherDetail
        [BTS_OPSModel.Store.Task_VoucherDetail](T1.[Task_VoucherDetail.VoucherDetailId], T1.[Task_VoucherDetail.VoucherId], T1.[Task_VoucherDetail.AccountsId], T1.[Task_VoucherDetail.ProjectId], T1.[Task_VoucherDetail.Particulars], T1.[Task_VoucherDetail.Debit], T1.[Task_VoucherDetail.Credit], T1.[Task_VoucherDetail.Currency1Rate], T1.[Task_VoucherDetail.Currency1Debit], T1.[Task_VoucherDetail.Currency1Credit], T1.[Task_VoucherDetail.Currency2Rate], T1.[Task_VoucherDetail.Currency2Debit], T1.[Task_VoucherDetail.Currency2Credit])
    FROM (
        SELECT 
            T.VoucherDetailId AS [Task_VoucherDetail.VoucherDetailId], 
            T.VoucherId AS [Task_VoucherDetail.VoucherId], 
            T.AccountsId AS [Task_VoucherDetail.AccountsId], 
            T.ProjectId AS [Task_VoucherDetail.ProjectId], 
            T.Particulars AS [Task_VoucherDetail.Particulars], 
            T.Debit AS [Task_VoucherDetail.Debit], 
            T.Credit AS [Task_VoucherDetail.Credit], 
            T.Currency1Rate AS [Task_VoucherDetail.Currency1Rate], 
            T.Currency1Debit AS [Task_VoucherDetail.Currency1Debit], 
            T.Currency1Credit AS [Task_VoucherDetail.Currency1Credit], 
            T.Currency2Rate AS [Task_VoucherDetail.Currency2Rate], 
            T.Currency2Debit AS [Task_VoucherDetail.Currency2Debit], 
            T.Currency2Credit AS [Task_VoucherDetail.Currency2Credit], 
            True AS _from0
        FROM Inventory360Entities.Task_VoucherDetail AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Task_VoucherNos.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView218()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_VoucherNos
        [BTS_OPSModel.Store.Task_VoucherNos](T1.[Task_VoucherNos.Id], T1.[Task_VoucherNos.VoucherNo], T1.[Task_VoucherNos.Year], T1.[Task_VoucherNos.CompanyId])
    FROM (
        SELECT 
            T.Id AS [Task_VoucherNos.Id], 
            T.VoucherNo AS [Task_VoucherNos.VoucherNo], 
            T.Year AS [Task_VoucherNos.Year], 
            T.CompanyId AS [Task_VoucherNos.CompanyId], 
            True AS _from0
        FROM Inventory360Entities.Task_VoucherNos AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Temp_AccountsLedgerDetail.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView219()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Temp_AccountsLedgerDetail
        [BTS_OPSModel.Store.Temp_AccountsLedgerDetail](T1.[Temp_AccountsLedgerDetail.TempDetailId], T1.[Temp_AccountsLedgerDetail.TempId], T1.[Temp_AccountsLedgerDetail.AccountsName], T1.[Temp_AccountsLedgerDetail.DrAmount], T1.[Temp_AccountsLedgerDetail.CrAmount])
    FROM (
        SELECT 
            T.TempDetailId AS [Temp_AccountsLedgerDetail.TempDetailId], 
            T.TempId AS [Temp_AccountsLedgerDetail.TempId], 
            T.AccountsName AS [Temp_AccountsLedgerDetail.AccountsName], 
            T.DrAmount AS [Temp_AccountsLedgerDetail.DrAmount], 
            T.CrAmount AS [Temp_AccountsLedgerDetail.CrAmount], 
            True AS _from0
        FROM Inventory360Entities.Temp_AccountsLedgerDetail AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Temp_AccountsLedgerOrProvisionalLedger.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView220()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Temp_AccountsLedgerOrProvisionalLedger
        [BTS_OPSModel.Store.Temp_AccountsLedgerOrProvisionalLedger](T1.[Temp_AccountsLedgerOrProvisionalLedger.TempId], T1.[Temp_AccountsLedgerOrProvisionalLedger.LedgerOrProvisional], T1.[Temp_AccountsLedgerOrProvisionalLedger.Date], T1.[Temp_AccountsLedgerOrProvisionalLedger.VoucherNo], T1.[Temp_AccountsLedgerOrProvisionalLedger.VoucherDescription], T1.[Temp_AccountsLedgerOrProvisionalLedger.DrAmount], T1.[Temp_AccountsLedgerOrProvisionalLedger.CrAmount], T1.[Temp_AccountsLedgerOrProvisionalLedger.CompanyId], T1.[Temp_AccountsLedgerOrProvisionalLedger.EntryBy])
    FROM (
        SELECT 
            T.TempId AS [Temp_AccountsLedgerOrProvisionalLedger.TempId], 
            T.LedgerOrProvisional AS [Temp_AccountsLedgerOrProvisionalLedger.LedgerOrProvisional], 
            T.Date AS [Temp_AccountsLedgerOrProvisionalLedger.Date], 
            T.VoucherNo AS [Temp_AccountsLedgerOrProvisionalLedger.VoucherNo], 
            T.VoucherDescription AS [Temp_AccountsLedgerOrProvisionalLedger.VoucherDescription], 
            T.DrAmount AS [Temp_AccountsLedgerOrProvisionalLedger.DrAmount], 
            T.CrAmount AS [Temp_AccountsLedgerOrProvisionalLedger.CrAmount], 
            T.CompanyId AS [Temp_AccountsLedgerOrProvisionalLedger.CompanyId], 
            T.EntryBy AS [Temp_AccountsLedgerOrProvisionalLedger.EntryBy], 
            True AS _from0
        FROM Inventory360Entities.Temp_AccountsLedgerOrProvisionalLedger AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Temp_ChequeInfo.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView221()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Temp_ChequeInfo
        [BTS_OPSModel.Store.Temp_ChequeInfo](T1.[Temp_ChequeInfo.ChequeInfoId], T1.[Temp_ChequeInfo.CollectionDetailId], T1.[Temp_ChequeInfo.BankId], T1.[Temp_ChequeInfo.ChequeNo], T1.[Temp_ChequeInfo.ChequeDate], T1.[Temp_ChequeInfo.Amount], T1.[Temp_ChequeInfo.Amount1], T1.[Temp_ChequeInfo.Amount2])
    FROM (
        SELECT 
            T.ChequeInfoId AS [Temp_ChequeInfo.ChequeInfoId], 
            T.CollectionDetailId AS [Temp_ChequeInfo.CollectionDetailId], 
            T.BankId AS [Temp_ChequeInfo.BankId], 
            T.ChequeNo AS [Temp_ChequeInfo.ChequeNo], 
            T.ChequeDate AS [Temp_ChequeInfo.ChequeDate], 
            T.Amount AS [Temp_ChequeInfo.Amount], 
            T.Amount1 AS [Temp_ChequeInfo.Amount1], 
            T.Amount2 AS [Temp_ChequeInfo.Amount2], 
            True AS _from0
        FROM Inventory360Entities.Temp_ChequeInfo AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Temp_Collection.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView222()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Temp_Collection
        [BTS_OPSModel.Store.Temp_Collection](T1.[Temp_Collection.CollectionId], T1.[Temp_Collection.CollectionNo], T1.[Temp_Collection.CollectionDate], T1.[Temp_Collection.SelectedCurrency], T1.[Temp_Collection.Currency1Rate], T1.[Temp_Collection.Currency2Rate], T1.[Temp_Collection.CollectedAmount], T1.[Temp_Collection.CollectedAmount1], T1.[Temp_Collection.CollectedAmount2], T1.[Temp_Collection.CustomerId], T1.[Temp_Collection.SalesPersonId], T1.[Temp_Collection.CollectedBy], T1.[Temp_Collection.MRNo], T1.[Temp_Collection.Remarks], T1.[Temp_Collection.OperationTypeId], T1.[Temp_Collection.OperationalEventId], T1.[Temp_Collection.SecurityDeposit], T1.[Temp_Collection.SecurityDeposit1], T1.[Temp_Collection.SecurityDeposit2], T1.[Temp_Collection.RecoveryDate], T1.[Temp_Collection.OthersAdjustment], T1.[Temp_Collection.OthersAdjustment1], T1.[Temp_Collection.OthersAdjustment2], T1.[Temp_Collection.Approved], T1.[Temp_Collection.ApprovedBy], T1.[Temp_Collection.ApprovedDate], T1.[Temp_Collection.CancelReason], T1.[Temp_Collection.LocationId], T1.[Temp_Collection.CompanyId], T1.[Temp_Collection.EntryBy], T1.[Temp_Collection.EntryDate])
    FROM (
        SELECT 
            T.CollectionId AS [Temp_Collection.CollectionId], 
            T.CollectionNo AS [Temp_Collection.CollectionNo], 
            T.CollectionDate AS [Temp_Collection.CollectionDate], 
            T.SelectedCurrency AS [Temp_Collection.SelectedCurrency], 
            T.Currency1Rate AS [Temp_Collection.Currency1Rate], 
            T.Currency2Rate AS [Temp_Collection.Currency2Rate], 
            T.CollectedAmount AS [Temp_Collection.CollectedAmount], 
            T.CollectedAmount1 AS [Temp_Collection.CollectedAmount1], 
            T.CollectedAmount2 AS [Temp_Collection.CollectedAmount2], 
            T.CustomerId AS [Temp_Collection.CustomerId], 
            T.SalesPersonId AS [Temp_Collection.SalesPersonId], 
            T.CollectedBy AS [Temp_Collection.CollectedBy], 
            T.MRNo AS [Temp_Collection.MRNo], 
            T.Remarks AS [Temp_Collection.Remarks], 
            T.OperationTypeId AS [Temp_Collection.OperationTypeId], 
            T.OperationalEventId AS [Temp_Collection.OperationalEventId], 
            T.SecurityDeposit AS [Temp_Collection.SecurityDeposit], 
            T.SecurityDeposit1 AS [Temp_Collection.SecurityDeposit1], 
            T.SecurityDeposit2 AS [Temp_Collection.SecurityDeposit2], 
            T.RecoveryDate AS [Temp_Collection.RecoveryDate], 
            T.OthersAdjustment AS [Temp_Collection.OthersAdjustment], 
            T.OthersAdjustment1 AS [Temp_Collection.OthersAdjustment1], 
            T.OthersAdjustment2 AS [Temp_Collection.OthersAdjustment2], 
            T.Approved AS [Temp_Collection.Approved], 
            T.ApprovedBy AS [Temp_Collection.ApprovedBy], 
            T.ApprovedDate AS [Temp_Collection.ApprovedDate], 
            T.CancelReason AS [Temp_Collection.CancelReason], 
            T.LocationId AS [Temp_Collection.LocationId], 
            T.CompanyId AS [Temp_Collection.CompanyId], 
            T.EntryBy AS [Temp_Collection.EntryBy], 
            T.EntryDate AS [Temp_Collection.EntryDate], 
            True AS _from0
        FROM Inventory360Entities.Temp_Collection AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Temp_CollectionDetail.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView223()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Temp_CollectionDetail
        [BTS_OPSModel.Store.Temp_CollectionDetail](T1.[Temp_CollectionDetail.CollectionDetailId], T1.[Temp_CollectionDetail.CollectionId], T1.[Temp_CollectionDetail.PaymentModeId], T1.[Temp_CollectionDetail.Amount], T1.[Temp_CollectionDetail.Amount1], T1.[Temp_CollectionDetail.Amount2])
    FROM (
        SELECT 
            T.CollectionDetailId AS [Temp_CollectionDetail.CollectionDetailId], 
            T.CollectionId AS [Temp_CollectionDetail.CollectionId], 
            T.PaymentModeId AS [Temp_CollectionDetail.PaymentModeId], 
            T.Amount AS [Temp_CollectionDetail.Amount], 
            T.Amount1 AS [Temp_CollectionDetail.Amount1], 
            T.Amount2 AS [Temp_CollectionDetail.Amount2], 
            True AS _from0
        FROM Inventory360Entities.Temp_CollectionDetail AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Temp_CollectionMapping.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView224()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Temp_CollectionMapping
        [BTS_OPSModel.Store.Temp_CollectionMapping](T1.[Temp_CollectionMapping.MappingId], T1.[Temp_CollectionMapping.CollectionId], T1.[Temp_CollectionMapping.InvoiceId], T1.[Temp_CollectionMapping.Amount], T1.[Temp_CollectionMapping.Amount1], T1.[Temp_CollectionMapping.Amount2])
    FROM (
        SELECT 
            T.MappingId AS [Temp_CollectionMapping.MappingId], 
            T.CollectionId AS [Temp_CollectionMapping.CollectionId], 
            T.InvoiceId AS [Temp_CollectionMapping.InvoiceId], 
            T.Amount AS [Temp_CollectionMapping.Amount], 
            T.Amount1 AS [Temp_CollectionMapping.Amount1], 
            T.Amount2 AS [Temp_CollectionMapping.Amount2], 
            True AS _from0
        FROM Inventory360Entities.Temp_CollectionMapping AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Temp_CustomerSupplierOutstanding.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView225()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Temp_CustomerSupplierOutstanding
        [BTS_OPSModel.Store.Temp_CustomerSupplierOutstanding](T1.[Temp_CustomerSupplierOutstanding.TempId], T1.[Temp_CustomerSupplierOutstanding.ReportFor], T1.[Temp_CustomerSupplierOutstanding.Group], T1.[Temp_CustomerSupplierOutstanding.CustomerId], T1.[Temp_CustomerSupplierOutstanding.SupplierId], T1.[Temp_CustomerSupplierOutstanding.Code], T1.[Temp_CustomerSupplierOutstanding.Name], T1.[Temp_CustomerSupplierOutstanding.SalesPerson], T1.[Temp_CustomerSupplierOutstanding.LedgerEndingBalance], T1.[Temp_CustomerSupplierOutstanding.ReceivedChequeNotTreatedAmount], T1.[Temp_CustomerSupplierOutstanding.ReceivedDishonourChequeAmount], T1.[Temp_CustomerSupplierOutstanding.IssuedChequeNotTreatedAmount], T1.[Temp_CustomerSupplierOutstanding.IssuedDishonourChequeAmount], T1.[Temp_CustomerSupplierOutstanding.CompanyId], T1.[Temp_CustomerSupplierOutstanding.EntryBy])
    FROM (
        SELECT 
            T.TempId AS [Temp_CustomerSupplierOutstanding.TempId], 
            T.ReportFor AS [Temp_CustomerSupplierOutstanding.ReportFor], 
            T.[Group] AS [Temp_CustomerSupplierOutstanding.Group], 
            T.CustomerId AS [Temp_CustomerSupplierOutstanding.CustomerId], 
            T.SupplierId AS [Temp_CustomerSupplierOutstanding.SupplierId], 
            T.Code AS [Temp_CustomerSupplierOutstanding.Code], 
            T.Name AS [Temp_CustomerSupplierOutstanding.Name], 
            T.SalesPerson AS [Temp_CustomerSupplierOutstanding.SalesPerson], 
            T.LedgerEndingBalance AS [Temp_CustomerSupplierOutstanding.LedgerEndingBalance], 
            T.ReceivedChequeNotTreatedAmount AS [Temp_CustomerSupplierOutstanding.ReceivedChequeNotTreatedAmount], 
            T.ReceivedDishonourChequeAmount AS [Temp_CustomerSupplierOutstanding.ReceivedDishonourChequeAmount], 
            T.IssuedChequeNotTreatedAmount AS [Temp_CustomerSupplierOutstanding.IssuedChequeNotTreatedAmount], 
            T.IssuedDishonourChequeAmount AS [Temp_CustomerSupplierOutstanding.IssuedDishonourChequeAmount], 
            T.CompanyId AS [Temp_CustomerSupplierOutstanding.CompanyId], 
            T.EntryBy AS [Temp_CustomerSupplierOutstanding.EntryBy], 
            True AS _from0
        FROM Inventory360Entities.Temp_CustomerSupplierOutstanding AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Temp_PartyLedger.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView226()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Temp_PartyLedger
        [BTS_OPSModel.Store.Temp_PartyLedger](T1.[Temp_PartyLedger.TempId], T1.[Temp_PartyLedger.Date], T1.[Temp_PartyLedger.Type], T1.[Temp_PartyLedger.OperationType], T1.[Temp_PartyLedger.Particular], T1.[Temp_PartyLedger.Particular1], T1.[Temp_PartyLedger.DrAmount], T1.[Temp_PartyLedger.CrAmount], T1.[Temp_PartyLedger.CustomerId], T1.[Temp_PartyLedger.SupplierId], T1.[Temp_PartyLedger.CompanyId], T1.[Temp_PartyLedger.EntryBy])
    FROM (
        SELECT 
            T.TempId AS [Temp_PartyLedger.TempId], 
            T.Date AS [Temp_PartyLedger.Date], 
            T.Type AS [Temp_PartyLedger.Type], 
            T.OperationType AS [Temp_PartyLedger.OperationType], 
            T.Particular AS [Temp_PartyLedger.Particular], 
            T.Particular1 AS [Temp_PartyLedger.Particular1], 
            T.DrAmount AS [Temp_PartyLedger.DrAmount], 
            T.CrAmount AS [Temp_PartyLedger.CrAmount], 
            T.CustomerId AS [Temp_PartyLedger.CustomerId], 
            T.SupplierId AS [Temp_PartyLedger.SupplierId], 
            T.CompanyId AS [Temp_PartyLedger.CompanyId], 
            T.EntryBy AS [Temp_PartyLedger.EntryBy], 
            True AS _from0
        FROM Inventory360Entities.Temp_PartyLedger AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Temp_SalesInvoice.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView227()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Temp_SalesInvoice
        [BTS_OPSModel.Store.Temp_SalesInvoice](T1.[Temp_SalesInvoice.InvoiceId], T1.[Temp_SalesInvoice.InvoiceNo], T1.[Temp_SalesInvoice.InvoiceDate], T1.[Temp_SalesInvoice.CustomerId], T1.[Temp_SalesInvoice.CustomerDetail], T1.[Temp_SalesInvoice.BuyerId], T1.[Temp_SalesInvoice.SelectedCurrency], T1.[Temp_SalesInvoice.Currency1Rate], T1.[Temp_SalesInvoice.Currency2Rate], T1.[Temp_SalesInvoice.InvoiceDiscountType], T1.[Temp_SalesInvoice.InvoiceDiscountValue], T1.[Temp_SalesInvoice.InvoiceDiscount1Value], T1.[Temp_SalesInvoice.InvoiceDiscount2Value], T1.[Temp_SalesInvoice.InvoiceDiscount], T1.[Temp_SalesInvoice.Invoice1Discount], T1.[Temp_SalesInvoice.Invoice2Discount], T1.[Temp_SalesInvoice.InvoiceAmount], T1.[Temp_SalesInvoice.Invoice1Amount], T1.[Temp_SalesInvoice.Invoice2Amount], T1.[Temp_SalesInvoice.CommissionType], T1.[Temp_SalesInvoice.CommissionValue], T1.[Temp_SalesInvoice.Commission1Value], T1.[Temp_SalesInvoice.Commission2Value], T1.[Temp_SalesInvoice.CommissionAmount], T1.[Temp_SalesInvoice.Commission1Amount], T1.[Temp_SalesInvoice.Commission2Amount], T1.[Temp_SalesInvoice.GovtDutyAmount], T1.[Temp_SalesInvoice.GovtDuty1Amount], T1.[Temp_SalesInvoice.GovtDuty2Amount], T1.[Temp_SalesInvoice.TotalChargeAmount], T1.[Temp_SalesInvoice.TotalChargeAmount1], T1.[Temp_SalesInvoice.TotalChargeAmount2], T1.[Temp_SalesInvoice.CollectedAmount], T1.[Temp_SalesInvoice.Collected1Amount], T1.[Temp_SalesInvoice.Collected2Amount], T1.[Temp_SalesInvoice.Approved], T1.[Temp_SalesInvoice.ApprovedBy], T1.[Temp_SalesInvoice.ApprovedDate], T1.[Temp_SalesInvoice.CancelReason], T1.[Temp_SalesInvoice.InvoiceOperationType], T1.[Temp_SalesInvoice.TermsAndConditionsId], T1.[Temp_SalesInvoice.TermsAndConditionsDetail], T1.[Temp_SalesInvoice.ReferenceNo], T1.[Temp_SalesInvoice.ReferenceDate], T1.[Temp_SalesInvoice.Remarks], T1.[Temp_SalesInvoice.TransactionFrom], T1.[Temp_SalesInvoice.IsSalesModeCash], T1.[Temp_SalesInvoice.IsSettledByCollection], T1.[Temp_SalesInvoice.GovtDutyChallanNo], T1.[Temp_SalesInvoice.DeliveryPlace], T1.[Temp_SalesInvoice.ContactPerson], T1.[Temp_SalesInvoice.ContactPersonNo], T1.[Temp_SalesInvoice.TransportId], T1.[Temp_SalesInvoice.TransportTypeId], T1.[Temp_SalesInvoice.VehicleNo], T1.[Temp_SalesInvoice.DriverName], T1.[Temp_SalesInvoice.DriverContactNo], T1.[Temp_SalesInvoice.LocationId], T1.[Temp_SalesInvoice.CompanyId], T1.[Temp_SalesInvoice.EntryBy], T1.[Temp_SalesInvoice.EntryDate])
    FROM (
        SELECT 
            T.InvoiceId AS [Temp_SalesInvoice.InvoiceId], 
            T.InvoiceNo AS [Temp_SalesInvoice.InvoiceNo], 
            T.InvoiceDate AS [Temp_SalesInvoice.InvoiceDate], 
            T.CustomerId AS [Temp_SalesInvoice.CustomerId], 
            T.CustomerDetail AS [Temp_SalesInvoice.CustomerDetail], 
            T.BuyerId AS [Temp_SalesInvoice.BuyerId], 
            T.SelectedCurrency AS [Temp_SalesInvoice.SelectedCurrency], 
            T.Currency1Rate AS [Temp_SalesInvoice.Currency1Rate], 
            T.Currency2Rate AS [Temp_SalesInvoice.Currency2Rate], 
            T.InvoiceDiscountType AS [Temp_SalesInvoice.InvoiceDiscountType], 
            T.InvoiceDiscountValue AS [Temp_SalesInvoice.InvoiceDiscountValue], 
            T.InvoiceDiscount1Value AS [Temp_SalesInvoice.InvoiceDiscount1Value], 
            T.InvoiceDiscount2Value AS [Temp_SalesInvoice.InvoiceDiscount2Value], 
            T.InvoiceDiscount AS [Temp_SalesInvoice.InvoiceDiscount], 
            T.Invoice1Discount AS [Temp_SalesInvoice.Invoice1Discount], 
            T.Invoice2Discount AS [Temp_SalesInvoice.Invoice2Discount], 
            T.InvoiceAmount AS [Temp_SalesInvoice.InvoiceAmount], 
            T.Invoice1Amount AS [Temp_SalesInvoice.Invoice1Amount], 
            T.Invoice2Amount AS [Temp_SalesInvoice.Invoice2Amount], 
            T.CommissionType AS [Temp_SalesInvoice.CommissionType], 
            T.CommissionValue AS [Temp_SalesInvoice.CommissionValue], 
            T.Commission1Value AS [Temp_SalesInvoice.Commission1Value], 
            T.Commission2Value AS [Temp_SalesInvoice.Commission2Value], 
            T.CommissionAmount AS [Temp_SalesInvoice.CommissionAmount], 
            T.Commission1Amount AS [Temp_SalesInvoice.Commission1Amount], 
            T.Commission2Amount AS [Temp_SalesInvoice.Commission2Amount], 
            T.GovtDutyAmount AS [Temp_SalesInvoice.GovtDutyAmount], 
            T.GovtDuty1Amount AS [Temp_SalesInvoice.GovtDuty1Amount], 
            T.GovtDuty2Amount AS [Temp_SalesInvoice.GovtDuty2Amount], 
            T.TotalChargeAmount AS [Temp_SalesInvoice.TotalChargeAmount], 
            T.TotalChargeAmount1 AS [Temp_SalesInvoice.TotalChargeAmount1], 
            T.TotalChargeAmount2 AS [Temp_SalesInvoice.TotalChargeAmount2], 
            T.CollectedAmount AS [Temp_SalesInvoice.CollectedAmount], 
            T.Collected1Amount AS [Temp_SalesInvoice.Collected1Amount], 
            T.Collected2Amount AS [Temp_SalesInvoice.Collected2Amount], 
            T.Approved AS [Temp_SalesInvoice.Approved], 
            T.ApprovedBy AS [Temp_SalesInvoice.ApprovedBy], 
            T.ApprovedDate AS [Temp_SalesInvoice.ApprovedDate], 
            T.CancelReason AS [Temp_SalesInvoice.CancelReason], 
            T.InvoiceOperationType AS [Temp_SalesInvoice.InvoiceOperationType], 
            T.TermsAndConditionsId AS [Temp_SalesInvoice.TermsAndConditionsId], 
            T.TermsAndConditionsDetail AS [Temp_SalesInvoice.TermsAndConditionsDetail], 
            T.ReferenceNo AS [Temp_SalesInvoice.ReferenceNo], 
            T.ReferenceDate AS [Temp_SalesInvoice.ReferenceDate], 
            T.Remarks AS [Temp_SalesInvoice.Remarks], 
            T.TransactionFrom AS [Temp_SalesInvoice.TransactionFrom], 
            T.IsSalesModeCash AS [Temp_SalesInvoice.IsSalesModeCash], 
            T.IsSettledByCollection AS [Temp_SalesInvoice.IsSettledByCollection], 
            T.GovtDutyChallanNo AS [Temp_SalesInvoice.GovtDutyChallanNo], 
            T.DeliveryPlace AS [Temp_SalesInvoice.DeliveryPlace], 
            T.ContactPerson AS [Temp_SalesInvoice.ContactPerson], 
            T.ContactPersonNo AS [Temp_SalesInvoice.ContactPersonNo], 
            T.TransportId AS [Temp_SalesInvoice.TransportId], 
            T.TransportTypeId AS [Temp_SalesInvoice.TransportTypeId], 
            T.VehicleNo AS [Temp_SalesInvoice.VehicleNo], 
            T.DriverName AS [Temp_SalesInvoice.DriverName], 
            T.DriverContactNo AS [Temp_SalesInvoice.DriverContactNo], 
            T.LocationId AS [Temp_SalesInvoice.LocationId], 
            T.CompanyId AS [Temp_SalesInvoice.CompanyId], 
            T.EntryBy AS [Temp_SalesInvoice.EntryBy], 
            T.EntryDate AS [Temp_SalesInvoice.EntryDate], 
            True AS _from0
        FROM Inventory360Entities.Temp_SalesInvoice AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Temp_SalesInvoice_Charge.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView228()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Temp_SalesInvoice_Charge
        [BTS_OPSModel.Store.Temp_SalesInvoice_Charge](T1.[Temp_SalesInvoice_Charge.SalesInvoiceChargeId], T1.[Temp_SalesInvoice_Charge.InvoiceId], T1.[Temp_SalesInvoice_Charge.ChargeEventId], T1.[Temp_SalesInvoice_Charge.ChargeAmount], T1.[Temp_SalesInvoice_Charge.Charge1Amount], T1.[Temp_SalesInvoice_Charge.Charge2Amount])
    FROM (
        SELECT 
            T.SalesInvoiceChargeId AS [Temp_SalesInvoice_Charge.SalesInvoiceChargeId], 
            T.InvoiceId AS [Temp_SalesInvoice_Charge.InvoiceId], 
            T.ChargeEventId AS [Temp_SalesInvoice_Charge.ChargeEventId], 
            T.ChargeAmount AS [Temp_SalesInvoice_Charge.ChargeAmount], 
            T.Charge1Amount AS [Temp_SalesInvoice_Charge.Charge1Amount], 
            T.Charge2Amount AS [Temp_SalesInvoice_Charge.Charge2Amount], 
            True AS _from0
        FROM Inventory360Entities.Temp_SalesInvoice_Charge AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Temp_SalesInvoiceDetail.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView229()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Temp_SalesInvoiceDetail
        [BTS_OPSModel.Store.Temp_SalesInvoiceDetail](T1.[Temp_SalesInvoiceDetail.InvoiceDetailId], T1.[Temp_SalesInvoiceDetail.InvoiceId], T1.[Temp_SalesInvoiceDetail.ChallanNo], T1.[Temp_SalesInvoiceDetail.ProductEntrySequence], T1.[Temp_SalesInvoiceDetail.ProductId], T1.[Temp_SalesInvoiceDetail.ProductDimensionId], T1.[Temp_SalesInvoiceDetail.UnitTypeId], T1.[Temp_SalesInvoiceDetail.Quantity], T1.[Temp_SalesInvoiceDetail.Price], T1.[Temp_SalesInvoiceDetail.Price1], T1.[Temp_SalesInvoiceDetail.Price2], T1.[Temp_SalesInvoiceDetail.DiscountType], T1.[Temp_SalesInvoiceDetail.DiscountValue], T1.[Temp_SalesInvoiceDetail.Discount1Value], T1.[Temp_SalesInvoiceDetail.Discount2Value], T1.[Temp_SalesInvoiceDetail.Discount], T1.[Temp_SalesInvoiceDetail.Discount1], T1.[Temp_SalesInvoiceDetail.Discount2], T1.[Temp_SalesInvoiceDetail.InvoiceDiscount], T1.[Temp_SalesInvoiceDetail.InvoiceDiscount1], T1.[Temp_SalesInvoiceDetail.InvoiceDiscount2], T1.[Temp_SalesInvoiceDetail.Cost], T1.[Temp_SalesInvoiceDetail.Cost1], T1.[Temp_SalesInvoiceDetail.Cost2], T1.[Temp_SalesInvoiceDetail.WareHouseId], T1.[Temp_SalesInvoiceDetail.IsIncludingGovtDuty], T1.[Temp_SalesInvoiceDetail.ShortSpecification], T1.[Temp_SalesInvoiceDetail.IsWarrantyAvailable], T1.[Temp_SalesInvoiceDetail.WarrantyDays], T1.[Temp_SalesInvoiceDetail.IsServiceWarranty], T1.[Temp_SalesInvoiceDetail.ServiceWarrantyDays])
    FROM (
        SELECT 
            T.InvoiceDetailId AS [Temp_SalesInvoiceDetail.InvoiceDetailId], 
            T.InvoiceId AS [Temp_SalesInvoiceDetail.InvoiceId], 
            T.ChallanNo AS [Temp_SalesInvoiceDetail.ChallanNo], 
            T.ProductEntrySequence AS [Temp_SalesInvoiceDetail.ProductEntrySequence], 
            T.ProductId AS [Temp_SalesInvoiceDetail.ProductId], 
            T.ProductDimensionId AS [Temp_SalesInvoiceDetail.ProductDimensionId], 
            T.UnitTypeId AS [Temp_SalesInvoiceDetail.UnitTypeId], 
            T.Quantity AS [Temp_SalesInvoiceDetail.Quantity], 
            T.Price AS [Temp_SalesInvoiceDetail.Price], 
            T.Price1 AS [Temp_SalesInvoiceDetail.Price1], 
            T.Price2 AS [Temp_SalesInvoiceDetail.Price2], 
            T.DiscountType AS [Temp_SalesInvoiceDetail.DiscountType], 
            T.DiscountValue AS [Temp_SalesInvoiceDetail.DiscountValue], 
            T.Discount1Value AS [Temp_SalesInvoiceDetail.Discount1Value], 
            T.Discount2Value AS [Temp_SalesInvoiceDetail.Discount2Value], 
            T.Discount AS [Temp_SalesInvoiceDetail.Discount], 
            T.Discount1 AS [Temp_SalesInvoiceDetail.Discount1], 
            T.Discount2 AS [Temp_SalesInvoiceDetail.Discount2], 
            T.InvoiceDiscount AS [Temp_SalesInvoiceDetail.InvoiceDiscount], 
            T.InvoiceDiscount1 AS [Temp_SalesInvoiceDetail.InvoiceDiscount1], 
            T.InvoiceDiscount2 AS [Temp_SalesInvoiceDetail.InvoiceDiscount2], 
            T.Cost AS [Temp_SalesInvoiceDetail.Cost], 
            T.Cost1 AS [Temp_SalesInvoiceDetail.Cost1], 
            T.Cost2 AS [Temp_SalesInvoiceDetail.Cost2], 
            T.WareHouseId AS [Temp_SalesInvoiceDetail.WareHouseId], 
            T.IsIncludingGovtDuty AS [Temp_SalesInvoiceDetail.IsIncludingGovtDuty], 
            T.ShortSpecification AS [Temp_SalesInvoiceDetail.ShortSpecification], 
            T.IsWarrantyAvailable AS [Temp_SalesInvoiceDetail.IsWarrantyAvailable], 
            T.WarrantyDays AS [Temp_SalesInvoiceDetail.WarrantyDays], 
            T.IsServiceWarranty AS [Temp_SalesInvoiceDetail.IsServiceWarranty], 
            T.ServiceWarrantyDays AS [Temp_SalesInvoiceDetail.ServiceWarrantyDays], 
            True AS _from0
        FROM Inventory360Entities.Temp_SalesInvoiceDetail AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Temp_SalesInvoiceDetail_GovtDuty.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView230()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Temp_SalesInvoiceDetail_GovtDuty
        [BTS_OPSModel.Store.Temp_SalesInvoiceDetail_GovtDuty](T1.[Temp_SalesInvoiceDetail_GovtDuty.Id], T1.[Temp_SalesInvoiceDetail_GovtDuty.InvoiceDetailId], T1.[Temp_SalesInvoiceDetail_GovtDuty.GovtDutyId], T1.[Temp_SalesInvoiceDetail_GovtDuty.RateType], T1.[Temp_SalesInvoiceDetail_GovtDuty.RateValue], T1.[Temp_SalesInvoiceDetail_GovtDuty.RateValue1], T1.[Temp_SalesInvoiceDetail_GovtDuty.RateValue2], T1.[Temp_SalesInvoiceDetail_GovtDuty.RateAmount], T1.[Temp_SalesInvoiceDetail_GovtDuty.RateAmount1], T1.[Temp_SalesInvoiceDetail_GovtDuty.RateAmount2], T1.[Temp_SalesInvoiceDetail_GovtDuty.ExemptedType], T1.[Temp_SalesInvoiceDetail_GovtDuty.ExemptedValue], T1.[Temp_SalesInvoiceDetail_GovtDuty.ExemptedValue1], T1.[Temp_SalesInvoiceDetail_GovtDuty.ExemptedValue2], T1.[Temp_SalesInvoiceDetail_GovtDuty.ExemptedAmount], T1.[Temp_SalesInvoiceDetail_GovtDuty.ExemptedAmount1], T1.[Temp_SalesInvoiceDetail_GovtDuty.ExemptedAmount2])
    FROM (
        SELECT 
            T.Id AS [Temp_SalesInvoiceDetail_GovtDuty.Id], 
            T.InvoiceDetailId AS [Temp_SalesInvoiceDetail_GovtDuty.InvoiceDetailId], 
            T.GovtDutyId AS [Temp_SalesInvoiceDetail_GovtDuty.GovtDutyId], 
            T.RateType AS [Temp_SalesInvoiceDetail_GovtDuty.RateType], 
            T.RateValue AS [Temp_SalesInvoiceDetail_GovtDuty.RateValue], 
            T.RateValue1 AS [Temp_SalesInvoiceDetail_GovtDuty.RateValue1], 
            T.RateValue2 AS [Temp_SalesInvoiceDetail_GovtDuty.RateValue2], 
            T.RateAmount AS [Temp_SalesInvoiceDetail_GovtDuty.RateAmount], 
            T.RateAmount1 AS [Temp_SalesInvoiceDetail_GovtDuty.RateAmount1], 
            T.RateAmount2 AS [Temp_SalesInvoiceDetail_GovtDuty.RateAmount2], 
            T.ExemptedType AS [Temp_SalesInvoiceDetail_GovtDuty.ExemptedType], 
            T.ExemptedValue AS [Temp_SalesInvoiceDetail_GovtDuty.ExemptedValue], 
            T.ExemptedValue1 AS [Temp_SalesInvoiceDetail_GovtDuty.ExemptedValue1], 
            T.ExemptedValue2 AS [Temp_SalesInvoiceDetail_GovtDuty.ExemptedValue2], 
            T.ExemptedAmount AS [Temp_SalesInvoiceDetail_GovtDuty.ExemptedAmount], 
            T.ExemptedAmount1 AS [Temp_SalesInvoiceDetail_GovtDuty.ExemptedAmount1], 
            T.ExemptedAmount2 AS [Temp_SalesInvoiceDetail_GovtDuty.ExemptedAmount2], 
            True AS _from0
        FROM Inventory360Entities.Temp_SalesInvoiceDetail_GovtDuty AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Temp_SalesInvoiceDetailSerial.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView231()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Temp_SalesInvoiceDetailSerial
        [BTS_OPSModel.Store.Temp_SalesInvoiceDetailSerial](T1.[Temp_SalesInvoiceDetailSerial.InvoiceDetailSerialId], T1.[Temp_SalesInvoiceDetailSerial.InvoiceDetailId], T1.[Temp_SalesInvoiceDetailSerial.Serial], T1.[Temp_SalesInvoiceDetailSerial.AdditionalSerial])
    FROM (
        SELECT 
            T.InvoiceDetailSerialId AS [Temp_SalesInvoiceDetailSerial.InvoiceDetailSerialId], 
            T.InvoiceDetailId AS [Temp_SalesInvoiceDetailSerial.InvoiceDetailId], 
            T.Serial AS [Temp_SalesInvoiceDetailSerial.Serial], 
            T.AdditionalSerial AS [Temp_SalesInvoiceDetailSerial.AdditionalSerial], 
            True AS _from0
        FROM Inventory360Entities.Temp_SalesInvoiceDetailSerial AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Temp_TrialBalance.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView232()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Temp_TrialBalance
        [BTS_OPSModel.Store.Temp_TrialBalance](T1.[Temp_TrialBalance.TempId], T1.[Temp_TrialBalance.ReportType], T1.[Temp_TrialBalance.AccountsId], T1.[Temp_TrialBalance.OpeningDr], T1.[Temp_TrialBalance.OpeningCr], T1.[Temp_TrialBalance.TransactionDr], T1.[Temp_TrialBalance.TransactionCr], T1.[Temp_TrialBalance.CompanyId], T1.[Temp_TrialBalance.EntryBy])
    FROM (
        SELECT 
            T.TempId AS [Temp_TrialBalance.TempId], 
            T.ReportType AS [Temp_TrialBalance.ReportType], 
            T.AccountsId AS [Temp_TrialBalance.AccountsId], 
            T.OpeningDr AS [Temp_TrialBalance.OpeningDr], 
            T.OpeningCr AS [Temp_TrialBalance.OpeningCr], 
            T.TransactionDr AS [Temp_TrialBalance.TransactionDr], 
            T.TransactionCr AS [Temp_TrialBalance.TransactionCr], 
            T.CompanyId AS [Temp_TrialBalance.CompanyId], 
            T.EntryBy AS [Temp_TrialBalance.EntryBy], 
            True AS _from0
        FROM Inventory360Entities.Temp_TrialBalance AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Configuration_Code.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView233()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Configuration_Code
        [BTS_OPSModel.Configuration_Code](T1.[Configuration_Code.Id], T1.[Configuration_Code.FormName], T1.[Configuration_Code.IsAutoCode], T1.[Configuration_Code.Prefix], T1.[Configuration_Code.FullCodeLength], T1.[Configuration_Code.IsCodeVisible], T1.[Configuration_Code.CompanyId])
    FROM (
        SELECT 
            T.Id AS [Configuration_Code.Id], 
            T.FormName AS [Configuration_Code.FormName], 
            T.IsAutoCode AS [Configuration_Code.IsAutoCode], 
            T.Prefix AS [Configuration_Code.Prefix], 
            T.FullCodeLength AS [Configuration_Code.FullCodeLength], 
            T.IsCodeVisible AS [Configuration_Code.IsCodeVisible], 
            T.CompanyId AS [Configuration_Code.CompanyId], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Configuration_Code AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Configuration_CurrencyRate.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView234()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Configuration_CurrencyRate
        [BTS_OPSModel.Configuration_CurrencyRate](T1.[Configuration_CurrencyRate.Id], T1.[Configuration_CurrencyRate.BaseCurrencyRate], T1.[Configuration_CurrencyRate.Currency1Rate], T1.[Configuration_CurrencyRate.Currency2Rate], T1.[Configuration_CurrencyRate.CompanyId], T1.[Configuration_CurrencyRate.EntryBy], T1.[Configuration_CurrencyRate.EntryDate])
    FROM (
        SELECT 
            T.Id AS [Configuration_CurrencyRate.Id], 
            T.BaseCurrencyRate AS [Configuration_CurrencyRate.BaseCurrencyRate], 
            T.Currency1Rate AS [Configuration_CurrencyRate.Currency1Rate], 
            T.Currency2Rate AS [Configuration_CurrencyRate.Currency2Rate], 
            T.CompanyId AS [Configuration_CurrencyRate.CompanyId], 
            T.EntryBy AS [Configuration_CurrencyRate.EntryBy], 
            T.EntryDate AS [Configuration_CurrencyRate.EntryDate], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Configuration_CurrencyRate AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Configuration_EventWiseCharge.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView235()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Configuration_EventWiseCharge
        [BTS_OPSModel.Configuration_EventWiseCharge](T1.[Configuration_EventWiseCharge.ChargeEventId], T1.[Configuration_EventWiseCharge.EventName], T1.[Configuration_EventWiseCharge.ChargeId], T1.[Configuration_EventWiseCharge.AccountsId], T1.[Configuration_EventWiseCharge.CompanyId], T1.[Configuration_EventWiseCharge.EntryBy], T1.[Configuration_EventWiseCharge.EntryDate])
    FROM (
        SELECT 
            T.ChargeEventId AS [Configuration_EventWiseCharge.ChargeEventId], 
            T.EventName AS [Configuration_EventWiseCharge.EventName], 
            T.ChargeId AS [Configuration_EventWiseCharge.ChargeId], 
            T.AccountsId AS [Configuration_EventWiseCharge.AccountsId], 
            T.CompanyId AS [Configuration_EventWiseCharge.CompanyId], 
            T.EntryBy AS [Configuration_EventWiseCharge.EntryBy], 
            T.EntryDate AS [Configuration_EventWiseCharge.EntryDate], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Configuration_EventWiseCharge AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Configuration_Features.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView236()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Configuration_Features
        [BTS_OPSModel.Configuration_Features](T1.[Configuration_Features.Id], T1.[Configuration_Features.FeatureId], T1.[Configuration_Features.SubFeatureId], T1.[Configuration_Features.Value], T1.[Configuration_Features.OperationEventId], T1.[Configuration_Features.LocationId], T1.[Configuration_Features.CompanyId], T1.[Configuration_Features.EntryBy], T1.[Configuration_Features.EntryDate])
    FROM (
        SELECT 
            T.Id AS [Configuration_Features.Id], 
            T.FeatureId AS [Configuration_Features.FeatureId], 
            T.SubFeatureId AS [Configuration_Features.SubFeatureId], 
            T.[Value] AS [Configuration_Features.Value], 
            T.OperationEventId AS [Configuration_Features.OperationEventId], 
            T.LocationId AS [Configuration_Features.LocationId], 
            T.CompanyId AS [Configuration_Features.CompanyId], 
            T.EntryBy AS [Configuration_Features.EntryBy], 
            T.EntryDate AS [Configuration_Features.EntryDate], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Configuration_Features AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Configuration_GovtDutyRate_HSCode.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView237()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Configuration_GovtDutyRate_HSCode
        [BTS_OPSModel.Configuration_GovtDutyRate_HSCode](T1.[Configuration_GovtDutyRate_HSCode.RateId], T1.[Configuration_GovtDutyRate_HSCode.OperationalEventId], T1.[Configuration_GovtDutyRate_HSCode.HSCodeId], T1.[Configuration_GovtDutyRate_HSCode.GovtDutyId], T1.[Configuration_GovtDutyRate_HSCode.SelectedCurrency], T1.[Configuration_GovtDutyRate_HSCode.Currency1Rate], T1.[Configuration_GovtDutyRate_HSCode.Currency2Rate], T1.[Configuration_GovtDutyRate_HSCode.RateType], T1.[Configuration_GovtDutyRate_HSCode.RateValue], T1.[Configuration_GovtDutyRate_HSCode.RateValue1], T1.[Configuration_GovtDutyRate_HSCode.RateValue2], T1.[Configuration_GovtDutyRate_HSCode.ExemptedType], T1.[Configuration_GovtDutyRate_HSCode.ExemptedValue], T1.[Configuration_GovtDutyRate_HSCode.ExemptedValue1], T1.[Configuration_GovtDutyRate_HSCode.ExemptedValue2], T1.[Configuration_GovtDutyRate_HSCode.Remarks], T1.[Configuration_GovtDutyRate_HSCode.EntryBy])
    FROM (
        SELECT 
            T.RateId AS [Configuration_GovtDutyRate_HSCode.RateId], 
            T.OperationalEventId AS [Configuration_GovtDutyRate_HSCode.OperationalEventId], 
            T.HSCodeId AS [Configuration_GovtDutyRate_HSCode.HSCodeId], 
            T.GovtDutyId AS [Configuration_GovtDutyRate_HSCode.GovtDutyId], 
            T.SelectedCurrency AS [Configuration_GovtDutyRate_HSCode.SelectedCurrency], 
            T.Currency1Rate AS [Configuration_GovtDutyRate_HSCode.Currency1Rate], 
            T.Currency2Rate AS [Configuration_GovtDutyRate_HSCode.Currency2Rate], 
            T.RateType AS [Configuration_GovtDutyRate_HSCode.RateType], 
            T.RateValue AS [Configuration_GovtDutyRate_HSCode.RateValue], 
            T.RateValue1 AS [Configuration_GovtDutyRate_HSCode.RateValue1], 
            T.RateValue2 AS [Configuration_GovtDutyRate_HSCode.RateValue2], 
            T.ExemptedType AS [Configuration_GovtDutyRate_HSCode.ExemptedType], 
            T.ExemptedValue AS [Configuration_GovtDutyRate_HSCode.ExemptedValue], 
            T.ExemptedValue1 AS [Configuration_GovtDutyRate_HSCode.ExemptedValue1], 
            T.ExemptedValue2 AS [Configuration_GovtDutyRate_HSCode.ExemptedValue2], 
            T.Remarks AS [Configuration_GovtDutyRate_HSCode.Remarks], 
            T.EntryBy AS [Configuration_GovtDutyRate_HSCode.EntryBy], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Configuration_GovtDutyRate_HSCode AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Configuration_GovtDutyRate_Location.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView238()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Configuration_GovtDutyRate_Location
        [BTS_OPSModel.Configuration_GovtDutyRate_Location](T1.[Configuration_GovtDutyRate_Location.RateId], T1.[Configuration_GovtDutyRate_Location.OperationalEventId], T1.[Configuration_GovtDutyRate_Location.LocationId], T1.[Configuration_GovtDutyRate_Location.GovtDutyId], T1.[Configuration_GovtDutyRate_Location.SelectedCurrency], T1.[Configuration_GovtDutyRate_Location.Currency1Rate], T1.[Configuration_GovtDutyRate_Location.Currency2Rate], T1.[Configuration_GovtDutyRate_Location.RateType], T1.[Configuration_GovtDutyRate_Location.RateValue], T1.[Configuration_GovtDutyRate_Location.RateValue1], T1.[Configuration_GovtDutyRate_Location.RateValue2], T1.[Configuration_GovtDutyRate_Location.ExemptedType], T1.[Configuration_GovtDutyRate_Location.ExemptedValue], T1.[Configuration_GovtDutyRate_Location.ExemptedValue1], T1.[Configuration_GovtDutyRate_Location.ExemptedValue2], T1.[Configuration_GovtDutyRate_Location.Remarks], T1.[Configuration_GovtDutyRate_Location.EntryBy])
    FROM (
        SELECT 
            T.RateId AS [Configuration_GovtDutyRate_Location.RateId], 
            T.OperationalEventId AS [Configuration_GovtDutyRate_Location.OperationalEventId], 
            T.LocationId AS [Configuration_GovtDutyRate_Location.LocationId], 
            T.GovtDutyId AS [Configuration_GovtDutyRate_Location.GovtDutyId], 
            T.SelectedCurrency AS [Configuration_GovtDutyRate_Location.SelectedCurrency], 
            T.Currency1Rate AS [Configuration_GovtDutyRate_Location.Currency1Rate], 
            T.Currency2Rate AS [Configuration_GovtDutyRate_Location.Currency2Rate], 
            T.RateType AS [Configuration_GovtDutyRate_Location.RateType], 
            T.RateValue AS [Configuration_GovtDutyRate_Location.RateValue], 
            T.RateValue1 AS [Configuration_GovtDutyRate_Location.RateValue1], 
            T.RateValue2 AS [Configuration_GovtDutyRate_Location.RateValue2], 
            T.ExemptedType AS [Configuration_GovtDutyRate_Location.ExemptedType], 
            T.ExemptedValue AS [Configuration_GovtDutyRate_Location.ExemptedValue], 
            T.ExemptedValue1 AS [Configuration_GovtDutyRate_Location.ExemptedValue1], 
            T.ExemptedValue2 AS [Configuration_GovtDutyRate_Location.ExemptedValue2], 
            T.Remarks AS [Configuration_GovtDutyRate_Location.Remarks], 
            T.EntryBy AS [Configuration_GovtDutyRate_Location.EntryBy], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Configuration_GovtDutyRate_Location AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Configuration_OperationalEvent.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView239()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Configuration_OperationalEvent
        [BTS_OPSModel.Configuration_OperationalEvent](T1.[Configuration_OperationalEvent.OperationalEventId], T1.[Configuration_OperationalEvent.EventName], T1.[Configuration_OperationalEvent.SubEventName])
    FROM (
        SELECT 
            T.OperationalEventId AS [Configuration_OperationalEvent.OperationalEventId], 
            T.EventName AS [Configuration_OperationalEvent.EventName], 
            T.SubEventName AS [Configuration_OperationalEvent.SubEventName], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Configuration_OperationalEvent AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Configuration_OperationalEventDetail.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView240()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Configuration_OperationalEventDetail
        [BTS_OPSModel.Configuration_OperationalEventDetail](T1.[Configuration_OperationalEventDetail.OperationalEventDetailId], T1.[Configuration_OperationalEventDetail.OperationalEventId], T1.[Configuration_OperationalEventDetail.OperationTypeId], T1.[Configuration_OperationalEventDetail.PaymentModeId], T1.[Configuration_OperationalEventDetail.Prefix], T1.[Configuration_OperationalEventDetail.NumberFormat], T1.[Configuration_OperationalEventDetail.AdditionOrDeduction], T1.[Configuration_OperationalEventDetail.Voucher], T1.[Configuration_OperationalEventDetail.VoucherConfigurationId], T1.[Configuration_OperationalEventDetail.DefaultPriceTypeId], T1.[Configuration_OperationalEventDetail.DefaultCustomerId], T1.[Configuration_OperationalEventDetail.DefaultPaymentModeId], T1.[Configuration_OperationalEventDetail.LocationId], T1.[Configuration_OperationalEventDetail.CompanyId])
    FROM (
        SELECT 
            T.OperationalEventDetailId AS [Configuration_OperationalEventDetail.OperationalEventDetailId], 
            T.OperationalEventId AS [Configuration_OperationalEventDetail.OperationalEventId], 
            T.OperationTypeId AS [Configuration_OperationalEventDetail.OperationTypeId], 
            T.PaymentModeId AS [Configuration_OperationalEventDetail.PaymentModeId], 
            T.Prefix AS [Configuration_OperationalEventDetail.Prefix], 
            T.NumberFormat AS [Configuration_OperationalEventDetail.NumberFormat], 
            T.AdditionOrDeduction AS [Configuration_OperationalEventDetail.AdditionOrDeduction], 
            T.Voucher AS [Configuration_OperationalEventDetail.Voucher], 
            T.VoucherConfigurationId AS [Configuration_OperationalEventDetail.VoucherConfigurationId], 
            T.DefaultPriceTypeId AS [Configuration_OperationalEventDetail.DefaultPriceTypeId], 
            T.DefaultCustomerId AS [Configuration_OperationalEventDetail.DefaultCustomerId], 
            T.DefaultPaymentModeId AS [Configuration_OperationalEventDetail.DefaultPaymentModeId], 
            T.LocationId AS [Configuration_OperationalEventDetail.LocationId], 
            T.CompanyId AS [Configuration_OperationalEventDetail.CompanyId], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Configuration_OperationalEventDetail AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Configuration_OperationType.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView241()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Configuration_OperationType
        [BTS_OPSModel.Configuration_OperationType](T1.[Configuration_OperationType.OperationTypeId], T1.[Configuration_OperationType.Name])
    FROM (
        SELECT 
            T.OperationTypeId AS [Configuration_OperationType.OperationTypeId], 
            T.Name AS [Configuration_OperationType.Name], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Configuration_OperationType AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Configuration_PaymentMode.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView242()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Configuration_PaymentMode
        [BTS_OPSModel.Configuration_PaymentMode](T1.[Configuration_PaymentMode.PaymentModeId], T1.[Configuration_PaymentMode.Name], T1.[Configuration_PaymentMode.NeedDetail], T1.[Configuration_PaymentMode.AutoHonor], T1.[Configuration_PaymentMode.IsCashType])
    FROM (
        SELECT 
            T.PaymentModeId AS [Configuration_PaymentMode.PaymentModeId], 
            T.Name AS [Configuration_PaymentMode.Name], 
            T.NeedDetail AS [Configuration_PaymentMode.NeedDetail], 
            T.AutoHonor AS [Configuration_PaymentMode.AutoHonor], 
            T.IsCashType AS [Configuration_PaymentMode.IsCashType], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Configuration_PaymentMode AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Configuration_Voucher.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView243()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Configuration_Voucher
        [BTS_OPSModel.Configuration_Voucher](T1.[Configuration_Voucher.VoucherConfigurationId], T1.[Configuration_Voucher.Prefix], T1.[Configuration_Voucher.NumberFormat], T1.[Configuration_Voucher.Description], T1.[Configuration_Voucher.CompanyId])
    FROM (
        SELECT 
            T.VoucherConfigurationId AS [Configuration_Voucher.VoucherConfigurationId], 
            T.Prefix AS [Configuration_Voucher.Prefix], 
            T.NumberFormat AS [Configuration_Voucher.NumberFormat], 
            T.Description AS [Configuration_Voucher.Description], 
            T.CompanyId AS [Configuration_Voucher.CompanyId], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Configuration_Voucher AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Configuration_VoucherDetail.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView244()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Configuration_VoucherDetail
        [BTS_OPSModel.Configuration_VoucherDetail](T1.[Configuration_VoucherDetail.VoucherConfigurationDetailId], T1.[Configuration_VoucherDetail.VoucherConfigurationId], T1.[Configuration_VoucherDetail.Particulars], T1.[Configuration_VoucherDetail.AccountsId], T1.[Configuration_VoucherDetail.DrOrCr], T1.[Configuration_VoucherDetail.For], T1.[Configuration_VoucherDetail.AccountsSource])
    FROM (
        SELECT 
            T.VoucherConfigurationDetailId AS [Configuration_VoucherDetail.VoucherConfigurationDetailId], 
            T.VoucherConfigurationId AS [Configuration_VoucherDetail.VoucherConfigurationId], 
            T.Particulars AS [Configuration_VoucherDetail.Particulars], 
            T.AccountsId AS [Configuration_VoucherDetail.AccountsId], 
            T.DrOrCr AS [Configuration_VoucherDetail.DrOrCr], 
            T.For AS [Configuration_VoucherDetail.For], 
            T.AccountsSource AS [Configuration_VoucherDetail.AccountsSource], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Configuration_VoucherDetail AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Others_Documents.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView245()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Others_Documents
        [BTS_OPSModel.Others_Documents](T1.[Others_Documents.DocumentId], T1.[Others_Documents.DocumentNo], T1.[Others_Documents.OperationalEventId], T1.[Others_Documents.OperationNo], T1.[Others_Documents.TitleId], T1.[Others_Documents.Description], T1.[Others_Documents.FileRecord], T1.[Others_Documents.FileType], T1.[Others_Documents.DocumentName], T1.[Others_Documents.CompanyId], T1.[Others_Documents.EntryBy], T1.[Others_Documents.EntryDate])
    FROM (
        SELECT 
            T.DocumentId AS [Others_Documents.DocumentId], 
            T.DocumentNo AS [Others_Documents.DocumentNo], 
            T.OperationalEventId AS [Others_Documents.OperationalEventId], 
            T.OperationNo AS [Others_Documents.OperationNo], 
            T.TitleId AS [Others_Documents.TitleId], 
            T.Description AS [Others_Documents.Description], 
            T.FileRecord AS [Others_Documents.FileRecord], 
            T.FileType AS [Others_Documents.FileType], 
            T.DocumentName AS [Others_Documents.DocumentName], 
            T.CompanyId AS [Others_Documents.CompanyId], 
            T.EntryBy AS [Others_Documents.EntryBy], 
            T.EntryDate AS [Others_Documents.EntryDate], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Others_Documents AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Others_Menu.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView246()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Others_Menu
        [BTS_OPSModel.Others_Menu](T1.[Others_Menu.MenuId], T1.[Others_Menu.MenuLevel], T1.[Others_Menu.MenuTitle], T1.[Others_Menu.MenuOrder], T1.[Others_Menu.ParentId], T1.[Others_Menu.MenuCode])
    FROM (
        SELECT 
            T.MenuId AS [Others_Menu.MenuId], 
            T.MenuLevel AS [Others_Menu.MenuLevel], 
            T.MenuTitle AS [Others_Menu.MenuTitle], 
            T.MenuOrder AS [Others_Menu.MenuOrder], 
            T.ParentId AS [Others_Menu.ParentId], 
            T.MenuCode AS [Others_Menu.MenuCode], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Others_Menu AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Others_ReportDesignConfig.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView247()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Others_ReportDesignConfig
        [BTS_OPSModel.Others_ReportDesignConfig](T1.[Others_ReportDesignConfig.ReportDesignId], T1.[Others_ReportDesignConfig.OperationalEventId], T1.[Others_ReportDesignConfig.ShowHeader], T1.[Others_ReportDesignConfig.HeaderHeight], T1.[Others_ReportDesignConfig.ShowLocationAddress], T1.[Others_ReportDesignConfig.DefaultReportName], T1.[Others_ReportDesignConfig.PaperLength], T1.[Others_ReportDesignConfig.PaperWidth], T1.[Others_ReportDesignConfig.LeftMargin], T1.[Others_ReportDesignConfig.CompanyId])
    FROM (
        SELECT 
            T.ReportDesignId AS [Others_ReportDesignConfig.ReportDesignId], 
            T.OperationalEventId AS [Others_ReportDesignConfig.OperationalEventId], 
            T.ShowHeader AS [Others_ReportDesignConfig.ShowHeader], 
            T.HeaderHeight AS [Others_ReportDesignConfig.HeaderHeight], 
            T.ShowLocationAddress AS [Others_ReportDesignConfig.ShowLocationAddress], 
            T.DefaultReportName AS [Others_ReportDesignConfig.DefaultReportName], 
            T.PaperLength AS [Others_ReportDesignConfig.PaperLength], 
            T.PaperWidth AS [Others_ReportDesignConfig.PaperWidth], 
            T.LeftMargin AS [Others_ReportDesignConfig.LeftMargin], 
            T.CompanyId AS [Others_ReportDesignConfig.CompanyId], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Others_ReportDesignConfig AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Security_Level.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView248()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Security_Level
        [BTS_OPSModel.Security_Level](T1.[Security_Level.LevelId], T1.[Security_Level.Code], T1.[Security_Level.Name], T1.[Security_Level.CompanyId])
    FROM (
        SELECT 
            T.LevelId AS [Security_Level.LevelId], 
            T.Code AS [Security_Level.Code], 
            T.Name AS [Security_Level.Name], 
            T.CompanyId AS [Security_Level.CompanyId], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Security_Level AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Security_Role.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView249()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Security_Role
        [BTS_OPSModel.Security_Role](T1.[Security_Role.RoleId], T1.[Security_Role.Code], T1.[Security_Role.Name], T1.[Security_Role.CompanyId])
    FROM (
        SELECT 
            T.RoleId AS [Security_Role.RoleId], 
            T.Code AS [Security_Role.Code], 
            T.Name AS [Security_Role.Name], 
            T.CompanyId AS [Security_Role.CompanyId], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Security_Role AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Security_RoleWiseMenuPermission.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView250()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Security_RoleWiseMenuPermission
        [BTS_OPSModel.Security_RoleWiseMenuPermission](T1.[Security_RoleWiseMenuPermission.Id], T1.[Security_RoleWiseMenuPermission.LevelId], T1.[Security_RoleWiseMenuPermission.RoleId], T1.[Security_RoleWiseMenuPermission.MenuId], T1.[Security_RoleWiseMenuPermission.Status], T1.[Security_RoleWiseMenuPermission.CompanyId], T1.[Security_RoleWiseMenuPermission.EntryBy], T1.[Security_RoleWiseMenuPermission.EntryDate])
    FROM (
        SELECT 
            T.Id AS [Security_RoleWiseMenuPermission.Id], 
            T.LevelId AS [Security_RoleWiseMenuPermission.LevelId], 
            T.RoleId AS [Security_RoleWiseMenuPermission.RoleId], 
            T.MenuId AS [Security_RoleWiseMenuPermission.MenuId], 
            T.Status AS [Security_RoleWiseMenuPermission.Status], 
            T.CompanyId AS [Security_RoleWiseMenuPermission.CompanyId], 
            T.EntryBy AS [Security_RoleWiseMenuPermission.EntryBy], 
            T.EntryDate AS [Security_RoleWiseMenuPermission.EntryDate], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Security_RoleWiseMenuPermission AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Security_User.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView251()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Security_User
        [BTS_OPSModel.Security_User](T1.[Security_User.SecurityUserId], T1.[Security_User.LevelId], T1.[Security_User.RoleId], T1.[Security_User.UserName], T1.[Security_User.FullName], T1.[Security_User.Password], T1.[Security_User.EmailAddress], T1.[Security_User.Active], T1.[Security_User.FirstLogin], T1.[Security_User.PasswordResetDays], T1.[Security_User.LastResetDate], T1.[Security_User.CompanyId])
    FROM (
        SELECT 
            T.SecurityUserId AS [Security_User.SecurityUserId], 
            T.LevelId AS [Security_User.LevelId], 
            T.RoleId AS [Security_User.RoleId], 
            T.UserName AS [Security_User.UserName], 
            T.FullName AS [Security_User.FullName], 
            T.Password AS [Security_User.Password], 
            T.EmailAddress AS [Security_User.EmailAddress], 
            T.Active AS [Security_User.Active], 
            T.FirstLogin AS [Security_User.FirstLogin], 
            T.PasswordResetDays AS [Security_User.PasswordResetDays], 
            T.LastResetDate AS [Security_User.LastResetDate], 
            T.CompanyId AS [Security_User.CompanyId], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Security_User AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Security_UserLocation.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView252()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Security_UserLocation
        [BTS_OPSModel.Security_UserLocation](T1.[Security_UserLocation.SecurityUserLocationId], T1.[Security_UserLocation.SecurityUserId], T1.[Security_UserLocation.LocationId])
    FROM (
        SELECT 
            T.SecurityUserLocationId AS [Security_UserLocation.SecurityUserLocationId], 
            T.SecurityUserId AS [Security_UserLocation.SecurityUserId], 
            T.LocationId AS [Security_UserLocation.LocationId], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Security_UserLocation AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Security_UserWiseMenuPermission.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView253()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Security_UserWiseMenuPermission
        [BTS_OPSModel.Security_UserWiseMenuPermission](T1.[Security_UserWiseMenuPermission.Id], T1.[Security_UserWiseMenuPermission.SecurityUserId], T1.[Security_UserWiseMenuPermission.MenuId], T1.[Security_UserWiseMenuPermission.Status], T1.[Security_UserWiseMenuPermission.CompanyId], T1.[Security_UserWiseMenuPermission.EntryBy], T1.[Security_UserWiseMenuPermission.EntryDate])
    FROM (
        SELECT 
            T.Id AS [Security_UserWiseMenuPermission.Id], 
            T.SecurityUserId AS [Security_UserWiseMenuPermission.SecurityUserId], 
            T.MenuId AS [Security_UserWiseMenuPermission.MenuId], 
            T.Status AS [Security_UserWiseMenuPermission.Status], 
            T.CompanyId AS [Security_UserWiseMenuPermission.CompanyId], 
            T.EntryBy AS [Security_UserWiseMenuPermission.EntryBy], 
            T.EntryDate AS [Security_UserWiseMenuPermission.EntryDate], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Security_UserWiseMenuPermission AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Setup_Accounts.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView254()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_Accounts
        [BTS_OPSModel.Setup_Accounts](T1.[Setup_Accounts.AccountsId], T1.[Setup_Accounts.AccountsSubsidiaryId], T1.[Setup_Accounts.Name], T1.[Setup_Accounts.OpeningDate], T1.[Setup_Accounts.BalanceType], T1.[Setup_Accounts.SelectedCurrency], T1.[Setup_Accounts.Currency1Rate], T1.[Setup_Accounts.Currency2Rate], T1.[Setup_Accounts.OpeningBalance], T1.[Setup_Accounts.OpeningBalance1], T1.[Setup_Accounts.OpeningBalance2], T1.[Setup_Accounts.IsOpeningFinalized], T1.[Setup_Accounts.CategorizationId], T1.[Setup_Accounts.CompanyId], T1.[Setup_Accounts.LocationId], T1.[Setup_Accounts.EntryBy], T1.[Setup_Accounts.EntryDate], T1.[Setup_Accounts.EditedBy], T1.[Setup_Accounts.EditedDate], T1.[Setup_Accounts.OpeningEditedBy], T1.[Setup_Accounts.OpeningEditedDate])
    FROM (
        SELECT 
            T.AccountsId AS [Setup_Accounts.AccountsId], 
            T.AccountsSubsidiaryId AS [Setup_Accounts.AccountsSubsidiaryId], 
            T.Name AS [Setup_Accounts.Name], 
            T.OpeningDate AS [Setup_Accounts.OpeningDate], 
            T.BalanceType AS [Setup_Accounts.BalanceType], 
            T.SelectedCurrency AS [Setup_Accounts.SelectedCurrency], 
            T.Currency1Rate AS [Setup_Accounts.Currency1Rate], 
            T.Currency2Rate AS [Setup_Accounts.Currency2Rate], 
            T.OpeningBalance AS [Setup_Accounts.OpeningBalance], 
            T.OpeningBalance1 AS [Setup_Accounts.OpeningBalance1], 
            T.OpeningBalance2 AS [Setup_Accounts.OpeningBalance2], 
            T.IsOpeningFinalized AS [Setup_Accounts.IsOpeningFinalized], 
            T.CategorizationId AS [Setup_Accounts.CategorizationId], 
            T.CompanyId AS [Setup_Accounts.CompanyId], 
            T.LocationId AS [Setup_Accounts.LocationId], 
            T.EntryBy AS [Setup_Accounts.EntryBy], 
            T.EntryDate AS [Setup_Accounts.EntryDate], 
            T.EditedBy AS [Setup_Accounts.EditedBy], 
            T.EditedDate AS [Setup_Accounts.EditedDate], 
            T.OpeningEditedBy AS [Setup_Accounts.OpeningEditedBy], 
            T.OpeningEditedDate AS [Setup_Accounts.OpeningEditedDate], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Setup_Accounts AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Setup_AccountsCashBankIdentification.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView255()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_AccountsCashBankIdentification
        [BTS_OPSModel.Setup_AccountsCashBankIdentification](T1.[Setup_AccountsCashBankIdentification.IdentificationId], T1.[Setup_AccountsCashBankIdentification.IdentificationType], T1.[Setup_AccountsCashBankIdentification.AccountsControlId], T1.[Setup_AccountsCashBankIdentification.AccountsSubsidiaryId], T1.[Setup_AccountsCashBankIdentification.CompanyId], T1.[Setup_AccountsCashBankIdentification.EntryBy], T1.[Setup_AccountsCashBankIdentification.EntryDate])
    FROM (
        SELECT 
            T.IdentificationId AS [Setup_AccountsCashBankIdentification.IdentificationId], 
            T.IdentificationType AS [Setup_AccountsCashBankIdentification.IdentificationType], 
            T.AccountsControlId AS [Setup_AccountsCashBankIdentification.AccountsControlId], 
            T.AccountsSubsidiaryId AS [Setup_AccountsCashBankIdentification.AccountsSubsidiaryId], 
            T.CompanyId AS [Setup_AccountsCashBankIdentification.CompanyId], 
            T.EntryBy AS [Setup_AccountsCashBankIdentification.EntryBy], 
            T.EntryDate AS [Setup_AccountsCashBankIdentification.EntryDate], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Setup_AccountsCashBankIdentification AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Setup_AccountsControl.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView256()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_AccountsControl
        [BTS_OPSModel.Setup_AccountsControl](T1.[Setup_AccountsControl.AccountsControlId], T1.[Setup_AccountsControl.AccountsSubGroupId], T1.[Setup_AccountsControl.Name], T1.[Setup_AccountsControl.CompanyId], T1.[Setup_AccountsControl.EntryBy])
    FROM (
        SELECT 
            T.AccountsControlId AS [Setup_AccountsControl.AccountsControlId], 
            T.AccountsSubGroupId AS [Setup_AccountsControl.AccountsSubGroupId], 
            T.Name AS [Setup_AccountsControl.Name], 
            T.CompanyId AS [Setup_AccountsControl.CompanyId], 
            T.EntryBy AS [Setup_AccountsControl.EntryBy], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Setup_AccountsControl AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Setup_AccountsDetail_Location.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView257()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_AccountsDetail_Location
        [BTS_OPSModel.Setup_AccountsDetail_Location](T1.[Setup_AccountsDetail_Location.AccountsDetailId], T1.[Setup_AccountsDetail_Location.AccountsId], T1.[Setup_AccountsDetail_Location.LocationId], T1.[Setup_AccountsDetail_Location.OpeningBalance], T1.[Setup_AccountsDetail_Location.OpeningBalance1], T1.[Setup_AccountsDetail_Location.OpeningBalance2])
    FROM (
        SELECT 
            T.AccountsDetailId AS [Setup_AccountsDetail_Location.AccountsDetailId], 
            T.AccountsId AS [Setup_AccountsDetail_Location.AccountsId], 
            T.LocationId AS [Setup_AccountsDetail_Location.LocationId], 
            T.OpeningBalance AS [Setup_AccountsDetail_Location.OpeningBalance], 
            T.OpeningBalance1 AS [Setup_AccountsDetail_Location.OpeningBalance1], 
            T.OpeningBalance2 AS [Setup_AccountsDetail_Location.OpeningBalance2], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Setup_AccountsDetail_Location AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Setup_AccountsGroup.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView258()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_AccountsGroup
        [BTS_OPSModel.Setup_AccountsGroup](T1.[Setup_AccountsGroup.AccountsGroupId], T1.[Setup_AccountsGroup.Code], T1.[Setup_AccountsGroup.Name], T1.[Setup_AccountsGroup.BalanceType], T1.[Setup_AccountsGroup.IsDefault], T1.[Setup_AccountsGroup.CompanyId])
    FROM (
        SELECT 
            T.AccountsGroupId AS [Setup_AccountsGroup.AccountsGroupId], 
            T.Code AS [Setup_AccountsGroup.Code], 
            T.Name AS [Setup_AccountsGroup.Name], 
            T.BalanceType AS [Setup_AccountsGroup.BalanceType], 
            T.IsDefault AS [Setup_AccountsGroup.IsDefault], 
            T.CompanyId AS [Setup_AccountsGroup.CompanyId], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Setup_AccountsGroup AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Setup_AccountsSubGroup.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView259()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_AccountsSubGroup
        [BTS_OPSModel.Setup_AccountsSubGroup](T1.[Setup_AccountsSubGroup.AccountsSubGroupId], T1.[Setup_AccountsSubGroup.AccountsGroupId], T1.[Setup_AccountsSubGroup.Name], T1.[Setup_AccountsSubGroup.CompanyId], T1.[Setup_AccountsSubGroup.EntryBy])
    FROM (
        SELECT 
            T.AccountsSubGroupId AS [Setup_AccountsSubGroup.AccountsSubGroupId], 
            T.AccountsGroupId AS [Setup_AccountsSubGroup.AccountsGroupId], 
            T.Name AS [Setup_AccountsSubGroup.Name], 
            T.CompanyId AS [Setup_AccountsSubGroup.CompanyId], 
            T.EntryBy AS [Setup_AccountsSubGroup.EntryBy], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Setup_AccountsSubGroup AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Setup_AccountsSubsidiary.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView260()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_AccountsSubsidiary
        [BTS_OPSModel.Setup_AccountsSubsidiary](T1.[Setup_AccountsSubsidiary.AccountsSubsidiaryId], T1.[Setup_AccountsSubsidiary.AccountsControlId], T1.[Setup_AccountsSubsidiary.Name], T1.[Setup_AccountsSubsidiary.CompanyId], T1.[Setup_AccountsSubsidiary.EntryBy])
    FROM (
        SELECT 
            T.AccountsSubsidiaryId AS [Setup_AccountsSubsidiary.AccountsSubsidiaryId], 
            T.AccountsControlId AS [Setup_AccountsSubsidiary.AccountsControlId], 
            T.Name AS [Setup_AccountsSubsidiary.Name], 
            T.CompanyId AS [Setup_AccountsSubsidiary.CompanyId], 
            T.EntryBy AS [Setup_AccountsSubsidiary.EntryBy], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Setup_AccountsSubsidiary AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Setup_Bank.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView261()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_Bank
        [BTS_OPSModel.Setup_Bank](T1.[Setup_Bank.BankId], T1.[Setup_Bank.Name], T1.[Setup_Bank.Address], T1.[Setup_Bank.Branch], T1.[Setup_Bank.BankAccountNo], T1.[Setup_Bank.IsOwnBank], T1.[Setup_Bank.AccountsId], T1.[Setup_Bank.CompanyId], T1.[Setup_Bank.EntryBy], T1.[Setup_Bank.EntryDate], T1.[Setup_Bank.EditedBy], T1.[Setup_Bank.EditedDate])
    FROM (
        SELECT 
            T.BankId AS [Setup_Bank.BankId], 
            T.Name AS [Setup_Bank.Name], 
            T.Address AS [Setup_Bank.Address], 
            T.Branch AS [Setup_Bank.Branch], 
            T.BankAccountNo AS [Setup_Bank.BankAccountNo], 
            T.IsOwnBank AS [Setup_Bank.IsOwnBank], 
            T.AccountsId AS [Setup_Bank.AccountsId], 
            T.CompanyId AS [Setup_Bank.CompanyId], 
            T.EntryBy AS [Setup_Bank.EntryBy], 
            T.EntryDate AS [Setup_Bank.EntryDate], 
            T.EditedBy AS [Setup_Bank.EditedBy], 
            T.EditedDate AS [Setup_Bank.EditedDate], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Setup_Bank AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Setup_Brand.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView262()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_Brand
        [BTS_OPSModel.Setup_Brand](T1.[Setup_Brand.BrandId], T1.[Setup_Brand.Code], T1.[Setup_Brand.Name], T1.[Setup_Brand.CompanyId], T1.[Setup_Brand.EntryBy], T1.[Setup_Brand.EntryDate], T1.[Setup_Brand.EditedBy], T1.[Setup_Brand.EditedDate])
    FROM (
        SELECT 
            T.BrandId AS [Setup_Brand.BrandId], 
            T.Code AS [Setup_Brand.Code], 
            T.Name AS [Setup_Brand.Name], 
            T.CompanyId AS [Setup_Brand.CompanyId], 
            T.EntryBy AS [Setup_Brand.EntryBy], 
            T.EntryDate AS [Setup_Brand.EntryDate], 
            T.EditedBy AS [Setup_Brand.EditedBy], 
            T.EditedDate AS [Setup_Brand.EditedDate], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Setup_Brand AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Setup_Capacity.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView263()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_Capacity
        [BTS_OPSModel.Setup_Capacity](T1.[Setup_Capacity.CapacityId], T1.[Setup_Capacity.Code], T1.[Setup_Capacity.Name], T1.[Setup_Capacity.CompanyId], T1.[Setup_Capacity.EntryBy], T1.[Setup_Capacity.EntryDate])
    FROM (
        SELECT 
            T.CapacityId AS [Setup_Capacity.CapacityId], 
            T.Code AS [Setup_Capacity.Code], 
            T.Name AS [Setup_Capacity.Name], 
            T.CompanyId AS [Setup_Capacity.CompanyId], 
            T.EntryBy AS [Setup_Capacity.EntryBy], 
            T.EntryDate AS [Setup_Capacity.EntryDate], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Setup_Capacity AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Setup_Charge.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView264()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_Charge
        [BTS_OPSModel.Setup_Charge](T1.[Setup_Charge.ChargeId], T1.[Setup_Charge.Code], T1.[Setup_Charge.Name], T1.[Setup_Charge.CompanyId], T1.[Setup_Charge.EntryBy], T1.[Setup_Charge.EntryDate])
    FROM (
        SELECT 
            T.ChargeId AS [Setup_Charge.ChargeId], 
            T.Code AS [Setup_Charge.Code], 
            T.Name AS [Setup_Charge.Name], 
            T.CompanyId AS [Setup_Charge.CompanyId], 
            T.EntryBy AS [Setup_Charge.EntryBy], 
            T.EntryDate AS [Setup_Charge.EntryDate], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Setup_Charge AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Setup_Color.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView265()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_Color
        [BTS_OPSModel.Setup_Color](T1.[Setup_Color.ColorId], T1.[Setup_Color.Code], T1.[Setup_Color.Name], T1.[Setup_Color.CompanyId], T1.[Setup_Color.EntryBy], T1.[Setup_Color.EntryDate])
    FROM (
        SELECT 
            T.ColorId AS [Setup_Color.ColorId], 
            T.Code AS [Setup_Color.Code], 
            T.Name AS [Setup_Color.Name], 
            T.CompanyId AS [Setup_Color.CompanyId], 
            T.EntryBy AS [Setup_Color.EntryBy], 
            T.EntryDate AS [Setup_Color.EntryDate], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Setup_Color AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Setup_Company.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView266()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_Company
        [BTS_OPSModel.Setup_Company](T1.[Setup_Company.CompanyId], T1.[Setup_Company.Code], T1.[Setup_Company.Name], T1.[Setup_Company.Address], T1.[Setup_Company.PhoneNo], T1.[Setup_Company.FaxNo], T1.[Setup_Company.OpeningDate], T1.[Setup_Company.BaseCurrency], T1.[Setup_Company.Currency1], T1.[Setup_Company.Currency2], T1.[Setup_Company.VATRegNo], T1.[Setup_Company.FinStartingMonth], T1.[Setup_Company.GovtFinStartingMonth], T1.[Setup_Company.MaxWidthInPixel], T1.[Setup_Company.MaxHeightInPixel], T1.[Setup_Company.CompanyOpeningDate])
    FROM (
        SELECT 
            T.CompanyId AS [Setup_Company.CompanyId], 
            T.Code AS [Setup_Company.Code], 
            T.Name AS [Setup_Company.Name], 
            T.Address AS [Setup_Company.Address], 
            T.PhoneNo AS [Setup_Company.PhoneNo], 
            T.FaxNo AS [Setup_Company.FaxNo], 
            T.OpeningDate AS [Setup_Company.OpeningDate], 
            T.BaseCurrency AS [Setup_Company.BaseCurrency], 
            T.Currency1 AS [Setup_Company.Currency1], 
            T.Currency2 AS [Setup_Company.Currency2], 
            T.VATRegNo AS [Setup_Company.VATRegNo], 
            T.FinStartingMonth AS [Setup_Company.FinStartingMonth], 
            T.GovtFinStartingMonth AS [Setup_Company.GovtFinStartingMonth], 
            T.MaxWidthInPixel AS [Setup_Company.MaxWidthInPixel], 
            T.MaxHeightInPixel AS [Setup_Company.MaxHeightInPixel], 
            T.CompanyOpeningDate AS [Setup_Company.CompanyOpeningDate], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Setup_Company AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Setup_ConvertionRatio.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView267()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_ConvertionRatio
        [BTS_OPSModel.Setup_ConvertionRatio](T1.[Setup_ConvertionRatio.ConvertionRatioId], T1.[Setup_ConvertionRatio.RatioNo], T1.[Setup_ConvertionRatio.RatioTitle], T1.[Setup_ConvertionRatio.RatioDate], T1.[Setup_ConvertionRatio.Description], T1.[Setup_ConvertionRatio.Approved], T1.[Setup_ConvertionRatio.ApprovedBy], T1.[Setup_ConvertionRatio.ApprovedDate], T1.[Setup_ConvertionRatio.CancelReason], T1.[Setup_ConvertionRatio.CompanyId], T1.[Setup_ConvertionRatio.EntryBy], T1.[Setup_ConvertionRatio.EntryDate])
    FROM (
        SELECT 
            T.ConvertionRatioId AS [Setup_ConvertionRatio.ConvertionRatioId], 
            T.RatioNo AS [Setup_ConvertionRatio.RatioNo], 
            T.RatioTitle AS [Setup_ConvertionRatio.RatioTitle], 
            T.RatioDate AS [Setup_ConvertionRatio.RatioDate], 
            T.Description AS [Setup_ConvertionRatio.Description], 
            T.Approved AS [Setup_ConvertionRatio.Approved], 
            T.ApprovedBy AS [Setup_ConvertionRatio.ApprovedBy], 
            T.ApprovedDate AS [Setup_ConvertionRatio.ApprovedDate], 
            T.CancelReason AS [Setup_ConvertionRatio.CancelReason], 
            T.CompanyId AS [Setup_ConvertionRatio.CompanyId], 
            T.EntryBy AS [Setup_ConvertionRatio.EntryBy], 
            T.EntryDate AS [Setup_ConvertionRatio.EntryDate], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Setup_ConvertionRatio AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Setup_ConvertionRatioDetail.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView268()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_ConvertionRatioDetail
        [BTS_OPSModel.Setup_ConvertionRatioDetail](T1.[Setup_ConvertionRatioDetail.ConvertionRatioDetailId], T1.[Setup_ConvertionRatioDetail.ConvertionRatioId], T1.[Setup_ConvertionRatioDetail.ProductFor], T1.[Setup_ConvertionRatioDetail.ProductId], T1.[Setup_ConvertionRatioDetail.ProductDimensionId], T1.[Setup_ConvertionRatioDetail.UnitTypeId], T1.[Setup_ConvertionRatioDetail.Quantity], T1.[Setup_ConvertionRatioDetail.Remarks])
    FROM (
        SELECT 
            T.ConvertionRatioDetailId AS [Setup_ConvertionRatioDetail.ConvertionRatioDetailId], 
            T.ConvertionRatioId AS [Setup_ConvertionRatioDetail.ConvertionRatioId], 
            T.ProductFor AS [Setup_ConvertionRatioDetail.ProductFor], 
            T.ProductId AS [Setup_ConvertionRatioDetail.ProductId], 
            T.ProductDimensionId AS [Setup_ConvertionRatioDetail.ProductDimensionId], 
            T.UnitTypeId AS [Setup_ConvertionRatioDetail.UnitTypeId], 
            T.Quantity AS [Setup_ConvertionRatioDetail.Quantity], 
            T.Remarks AS [Setup_ConvertionRatioDetail.Remarks], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Setup_ConvertionRatioDetail AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Setup_CostingControl.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView269()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_CostingControl
        [BTS_OPSModel.Setup_CostingControl](T1.[Setup_CostingControl.CostingControlId], T1.[Setup_CostingControl.CostingGroupId], T1.[Setup_CostingControl.Name], T1.[Setup_CostingControl.CostAllocationMethod], T1.[Setup_CostingControl.CompanyId], T1.[Setup_CostingControl.EntryBy], T1.[Setup_CostingControl.EntryDate], T1.[Setup_CostingControl.EditedBy], T1.[Setup_CostingControl.EditedDate])
    FROM (
        SELECT 
            T.CostingControlId AS [Setup_CostingControl.CostingControlId], 
            T.CostingGroupId AS [Setup_CostingControl.CostingGroupId], 
            T.Name AS [Setup_CostingControl.Name], 
            T.CostAllocationMethod AS [Setup_CostingControl.CostAllocationMethod], 
            T.CompanyId AS [Setup_CostingControl.CompanyId], 
            T.EntryBy AS [Setup_CostingControl.EntryBy], 
            T.EntryDate AS [Setup_CostingControl.EntryDate], 
            T.EditedBy AS [Setup_CostingControl.EditedBy], 
            T.EditedDate AS [Setup_CostingControl.EditedDate], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Setup_CostingControl AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Setup_CostingGroup.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView270()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_CostingGroup
        [BTS_OPSModel.Setup_CostingGroup](T1.[Setup_CostingGroup.CostingGroupId], T1.[Setup_CostingGroup.Code], T1.[Setup_CostingGroup.Name])
    FROM (
        SELECT 
            T.CostingGroupId AS [Setup_CostingGroup.CostingGroupId], 
            T.Code AS [Setup_CostingGroup.Code], 
            T.Name AS [Setup_CostingGroup.Name], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Setup_CostingGroup AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Setup_CostingHead.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView271()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_CostingHead
        [BTS_OPSModel.Setup_CostingHead](T1.[Setup_CostingHead.CostingHeadId], T1.[Setup_CostingHead.CostingControlId], T1.[Setup_CostingHead.Name], T1.[Setup_CostingHead.AccountsId], T1.[Setup_CostingHead.CompanyId], T1.[Setup_CostingHead.EntryBy], T1.[Setup_CostingHead.EntryDate], T1.[Setup_CostingHead.EditedBy], T1.[Setup_CostingHead.EditedDate])
    FROM (
        SELECT 
            T.CostingHeadId AS [Setup_CostingHead.CostingHeadId], 
            T.CostingControlId AS [Setup_CostingHead.CostingControlId], 
            T.Name AS [Setup_CostingHead.Name], 
            T.AccountsId AS [Setup_CostingHead.AccountsId], 
            T.CompanyId AS [Setup_CostingHead.CompanyId], 
            T.EntryBy AS [Setup_CostingHead.EntryBy], 
            T.EntryDate AS [Setup_CostingHead.EntryDate], 
            T.EditedBy AS [Setup_CostingHead.EditedBy], 
            T.EditedDate AS [Setup_CostingHead.EditedDate], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Setup_CostingHead AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Setup_Country.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView272()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_Country
        [BTS_OPSModel.Setup_Country](T1.[Setup_Country.CountryId], T1.[Setup_Country.Code], T1.[Setup_Country.Name])
    FROM (
        SELECT 
            T.CountryId AS [Setup_Country.CountryId], 
            T.Code AS [Setup_Country.Code], 
            T.Name AS [Setup_Country.Name], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Setup_Country AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Setup_Customer.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView273()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_Customer
        [BTS_OPSModel.Setup_Customer](T1.[Setup_Customer.CustomerId], T1.[Setup_Customer.CustomerGroupId], T1.[Setup_Customer.Code], T1.[Setup_Customer.Name], T1.[Setup_Customer.Address], T1.[Setup_Customer.PhoneNo], T1.[Setup_Customer.Fax], T1.[Setup_Customer.Email], T1.[Setup_Customer.PhoneNo1], T1.[Setup_Customer.PhoneNo2], T1.[Setup_Customer.SalesPersonId], T1.[Setup_Customer.IsCombined], T1.[Setup_Customer.IsActive], T1.[Setup_Customer.Type], T1.[Setup_Customer.ContactPerson], T1.[Setup_Customer.ContactPersonMobile], T1.[Setup_Customer.ProfessionId], T1.[Setup_Customer.Designation], T1.[Setup_Customer.ReferenceName], T1.[Setup_Customer.ReferenceContactNo], T1.[Setup_Customer.SupplierId], T1.[Setup_Customer.OpeningBalance], T1.[Setup_Customer.OpeningDate], T1.[Setup_Customer.ChequeDishonourBalance], T1.[Setup_Customer.ChequeDishonourOpeningDate], T1.[Setup_Customer.CreditLimit], T1.[Setup_Customer.LedgerLimit], T1.[Setup_Customer.CreditAllowedDays], T1.[Setup_Customer.IsLocked], T1.[Setup_Customer.IsRMALocked], T1.[Setup_Customer.AccountsId], T1.[Setup_Customer.SelectedCurrency], T1.[Setup_Customer.Currency1Rate], T1.[Setup_Customer.Currency2Rate], T1.[Setup_Customer.OpeningBalance1], T1.[Setup_Customer.OpeningBalance2], T1.[Setup_Customer.ChequeDishonourBalance1], T1.[Setup_Customer.ChequeDishonourBalance2], T1.[Setup_Customer.CreditLimit1], T1.[Setup_Customer.CreditLimit2], T1.[Setup_Customer.LedgerLimit1], T1.[Setup_Customer.LedgerLimit2], T1.[Setup_Customer.CollectedAmount], T1.[Setup_Customer.Collected1Amount], T1.[Setup_Customer.Collected2Amount], T1.[Setup_Customer.TransactionType], T1.[Setup_Customer.IsWalkIn], T1.[Setup_Customer.CompanyId], T1.[Setup_Customer.LocationId], T1.[Setup_Customer.EntryBy], T1.[Setup_Customer.EntryDate], T1.[Setup_Customer.EditedBy], T1.[Setup_Customer.EditedDate])
    FROM (
        SELECT 
            T.CustomerId AS [Setup_Customer.CustomerId], 
            T.CustomerGroupId AS [Setup_Customer.CustomerGroupId], 
            T.Code AS [Setup_Customer.Code], 
            T.Name AS [Setup_Customer.Name], 
            T.Address AS [Setup_Customer.Address], 
            T.PhoneNo AS [Setup_Customer.PhoneNo], 
            T.Fax AS [Setup_Customer.Fax], 
            T.Email AS [Setup_Customer.Email], 
            T.PhoneNo1 AS [Setup_Customer.PhoneNo1], 
            T.PhoneNo2 AS [Setup_Customer.PhoneNo2], 
            T.SalesPersonId AS [Setup_Customer.SalesPersonId], 
            T.IsCombined AS [Setup_Customer.IsCombined], 
            T.IsActive AS [Setup_Customer.IsActive], 
            T.Type AS [Setup_Customer.Type], 
            T.ContactPerson AS [Setup_Customer.ContactPerson], 
            T.ContactPersonMobile AS [Setup_Customer.ContactPersonMobile], 
            T.ProfessionId AS [Setup_Customer.ProfessionId], 
            T.Designation AS [Setup_Customer.Designation], 
            T.ReferenceName AS [Setup_Customer.ReferenceName], 
            T.ReferenceContactNo AS [Setup_Customer.ReferenceContactNo], 
            T.SupplierId AS [Setup_Customer.SupplierId], 
            T.OpeningBalance AS [Setup_Customer.OpeningBalance], 
            T.OpeningDate AS [Setup_Customer.OpeningDate], 
            T.ChequeDishonourBalance AS [Setup_Customer.ChequeDishonourBalance], 
            T.ChequeDishonourOpeningDate AS [Setup_Customer.ChequeDishonourOpeningDate], 
            T.CreditLimit AS [Setup_Customer.CreditLimit], 
            T.LedgerLimit AS [Setup_Customer.LedgerLimit], 
            T.CreditAllowedDays AS [Setup_Customer.CreditAllowedDays], 
            T.IsLocked AS [Setup_Customer.IsLocked], 
            T.IsRMALocked AS [Setup_Customer.IsRMALocked], 
            T.AccountsId AS [Setup_Customer.AccountsId], 
            T.SelectedCurrency AS [Setup_Customer.SelectedCurrency], 
            T.Currency1Rate AS [Setup_Customer.Currency1Rate], 
            T.Currency2Rate AS [Setup_Customer.Currency2Rate], 
            T.OpeningBalance1 AS [Setup_Customer.OpeningBalance1], 
            T.OpeningBalance2 AS [Setup_Customer.OpeningBalance2], 
            T.ChequeDishonourBalance1 AS [Setup_Customer.ChequeDishonourBalance1], 
            T.ChequeDishonourBalance2 AS [Setup_Customer.ChequeDishonourBalance2], 
            T.CreditLimit1 AS [Setup_Customer.CreditLimit1], 
            T.CreditLimit2 AS [Setup_Customer.CreditLimit2], 
            T.LedgerLimit1 AS [Setup_Customer.LedgerLimit1], 
            T.LedgerLimit2 AS [Setup_Customer.LedgerLimit2], 
            T.CollectedAmount AS [Setup_Customer.CollectedAmount], 
            T.Collected1Amount AS [Setup_Customer.Collected1Amount], 
            T.Collected2Amount AS [Setup_Customer.Collected2Amount], 
            T.TransactionType AS [Setup_Customer.TransactionType], 
            T.IsWalkIn AS [Setup_Customer.IsWalkIn], 
            T.CompanyId AS [Setup_Customer.CompanyId], 
            T.LocationId AS [Setup_Customer.LocationId], 
            T.EntryBy AS [Setup_Customer.EntryBy], 
            T.EntryDate AS [Setup_Customer.EntryDate], 
            T.EditedBy AS [Setup_Customer.EditedBy], 
            T.EditedDate AS [Setup_Customer.EditedDate], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Setup_Customer AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Setup_CustomerGroup.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView274()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_CustomerGroup
        [BTS_OPSModel.Setup_CustomerGroup](T1.[Setup_CustomerGroup.CustomerGroupId], T1.[Setup_CustomerGroup.Name], T1.[Setup_CustomerGroup.IsDefaultSelected], T1.[Setup_CustomerGroup.CompanyId], T1.[Setup_CustomerGroup.EntryBy], T1.[Setup_CustomerGroup.EntryDate])
    FROM (
        SELECT 
            T.CustomerGroupId AS [Setup_CustomerGroup.CustomerGroupId], 
            T.Name AS [Setup_CustomerGroup.Name], 
            T.IsDefaultSelected AS [Setup_CustomerGroup.IsDefaultSelected], 
            T.CompanyId AS [Setup_CustomerGroup.CompanyId], 
            T.EntryBy AS [Setup_CustomerGroup.EntryBy], 
            T.EntryDate AS [Setup_CustomerGroup.EntryDate], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Setup_CustomerGroup AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Setup_Designation.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView275()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_Designation
        [BTS_OPSModel.Setup_Designation](T1.[Setup_Designation.DesignationId], T1.[Setup_Designation.Name], T1.[Setup_Designation.CompanyId], T1.[Setup_Designation.EntryBy], T1.[Setup_Designation.EntryDate])
    FROM (
        SELECT 
            T.DesignationId AS [Setup_Designation.DesignationId], 
            T.Name AS [Setup_Designation.Name], 
            T.CompanyId AS [Setup_Designation.CompanyId], 
            T.EntryBy AS [Setup_Designation.EntryBy], 
            T.EntryDate AS [Setup_Designation.EntryDate], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Setup_Designation AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Setup_DocumentsGroup.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView276()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_DocumentsGroup
        [BTS_OPSModel.Setup_DocumentsGroup](T1.[Setup_DocumentsGroup.GroupId], T1.[Setup_DocumentsGroup.Name], T1.[Setup_DocumentsGroup.CompanyId], T1.[Setup_DocumentsGroup.EntryBy], T1.[Setup_DocumentsGroup.EntryDate], T1.[Setup_DocumentsGroup.EditedBy], T1.[Setup_DocumentsGroup.EditedDate])
    FROM (
        SELECT 
            T.GroupId AS [Setup_DocumentsGroup.GroupId], 
            T.Name AS [Setup_DocumentsGroup.Name], 
            T.CompanyId AS [Setup_DocumentsGroup.CompanyId], 
            T.EntryBy AS [Setup_DocumentsGroup.EntryBy], 
            T.EntryDate AS [Setup_DocumentsGroup.EntryDate], 
            T.EditedBy AS [Setup_DocumentsGroup.EditedBy], 
            T.EditedDate AS [Setup_DocumentsGroup.EditedDate], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Setup_DocumentsGroup AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Setup_DocumentsTitle.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView277()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_DocumentsTitle
        [BTS_OPSModel.Setup_DocumentsTitle](T1.[Setup_DocumentsTitle.TitleId], T1.[Setup_DocumentsTitle.GroupId], T1.[Setup_DocumentsTitle.Name], T1.[Setup_DocumentsTitle.CompanyId], T1.[Setup_DocumentsTitle.EntryBy], T1.[Setup_DocumentsTitle.EntryDate], T1.[Setup_DocumentsTitle.EditedBy], T1.[Setup_DocumentsTitle.EditedDate])
    FROM (
        SELECT 
            T.TitleId AS [Setup_DocumentsTitle.TitleId], 
            T.GroupId AS [Setup_DocumentsTitle.GroupId], 
            T.Name AS [Setup_DocumentsTitle.Name], 
            T.CompanyId AS [Setup_DocumentsTitle.CompanyId], 
            T.EntryBy AS [Setup_DocumentsTitle.EntryBy], 
            T.EntryDate AS [Setup_DocumentsTitle.EntryDate], 
            T.EditedBy AS [Setup_DocumentsTitle.EditedBy], 
            T.EditedDate AS [Setup_DocumentsTitle.EditedDate], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Setup_DocumentsTitle AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Setup_Employee.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView278()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_Employee
        [BTS_OPSModel.Setup_Employee](T1.[Setup_Employee.EmployeeId], T1.[Setup_Employee.Code], T1.[Setup_Employee.Name], T1.[Setup_Employee.IsActive], T1.[Setup_Employee.DesignationId], T1.[Setup_Employee.ContactNo], T1.[Setup_Employee.Role], T1.[Setup_Employee.Email], T1.[Setup_Employee.NIDNo], T1.[Setup_Employee.PassportNo], T1.[Setup_Employee.AccountsId], T1.[Setup_Employee.BankId], T1.[Setup_Employee.BankAccountNo], T1.[Setup_Employee.CompanyId], T1.[Setup_Employee.EntryBy], T1.[Setup_Employee.EntryDate])
    FROM (
        SELECT 
            T.EmployeeId AS [Setup_Employee.EmployeeId], 
            T.Code AS [Setup_Employee.Code], 
            T.Name AS [Setup_Employee.Name], 
            T.IsActive AS [Setup_Employee.IsActive], 
            T.DesignationId AS [Setup_Employee.DesignationId], 
            T.ContactNo AS [Setup_Employee.ContactNo], 
            T.Role AS [Setup_Employee.Role], 
            T.Email AS [Setup_Employee.Email], 
            T.NIDNo AS [Setup_Employee.NIDNo], 
            T.PassportNo AS [Setup_Employee.PassportNo], 
            T.AccountsId AS [Setup_Employee.AccountsId], 
            T.BankId AS [Setup_Employee.BankId], 
            T.BankAccountNo AS [Setup_Employee.BankAccountNo], 
            T.CompanyId AS [Setup_Employee.CompanyId], 
            T.EntryBy AS [Setup_Employee.EntryBy], 
            T.EntryDate AS [Setup_Employee.EntryDate], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Setup_Employee AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Setup_Features.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView279()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_Features
        [BTS_OPSModel.Setup_Features](T1.[Setup_Features.FeatureId], T1.[Setup_Features.FeatureName], T1.[Setup_Features.DefaultValue], T1.[Setup_Features.Description])
    FROM (
        SELECT 
            T.FeatureId AS [Setup_Features.FeatureId], 
            T.FeatureName AS [Setup_Features.FeatureName], 
            T.DefaultValue AS [Setup_Features.DefaultValue], 
            T.Description AS [Setup_Features.Description], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Setup_Features AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Setup_GeoDistrict.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView280()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_GeoDistrict
        [BTS_OPSModel.Setup_GeoDistrict](T1.[Setup_GeoDistrict.DistrictId], T1.[Setup_GeoDistrict.DivisionId], T1.[Setup_GeoDistrict.DistrictName], T1.[Setup_GeoDistrict.CompanyId], T1.[Setup_GeoDistrict.EntryBy], T1.[Setup_GeoDistrict.EntryDate])
    FROM (
        SELECT 
            T.DistrictId AS [Setup_GeoDistrict.DistrictId], 
            T.DivisionId AS [Setup_GeoDistrict.DivisionId], 
            T.DistrictName AS [Setup_GeoDistrict.DistrictName], 
            T.CompanyId AS [Setup_GeoDistrict.CompanyId], 
            T.EntryBy AS [Setup_GeoDistrict.EntryBy], 
            T.EntryDate AS [Setup_GeoDistrict.EntryDate], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Setup_GeoDistrict AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Setup_GeoDivision.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView281()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_GeoDivision
        [BTS_OPSModel.Setup_GeoDivision](T1.[Setup_GeoDivision.DivisionId], T1.[Setup_GeoDivision.RegionId], T1.[Setup_GeoDivision.DivisionName], T1.[Setup_GeoDivision.CompanyId], T1.[Setup_GeoDivision.EntryBy], T1.[Setup_GeoDivision.EntryDate])
    FROM (
        SELECT 
            T.DivisionId AS [Setup_GeoDivision.DivisionId], 
            T.RegionId AS [Setup_GeoDivision.RegionId], 
            T.DivisionName AS [Setup_GeoDivision.DivisionName], 
            T.CompanyId AS [Setup_GeoDivision.CompanyId], 
            T.EntryBy AS [Setup_GeoDivision.EntryBy], 
            T.EntryDate AS [Setup_GeoDivision.EntryDate], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Setup_GeoDivision AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Setup_GeoPoliceStation.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView282()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_GeoPoliceStation
        [BTS_OPSModel.Setup_GeoPoliceStation](T1.[Setup_GeoPoliceStation.PoliceStationId], T1.[Setup_GeoPoliceStation.DistrictId], T1.[Setup_GeoPoliceStation.PoliceStationName], T1.[Setup_GeoPoliceStation.CompanyId], T1.[Setup_GeoPoliceStation.EntryBy], T1.[Setup_GeoPoliceStation.EntryDate])
    FROM (
        SELECT 
            T.PoliceStationId AS [Setup_GeoPoliceStation.PoliceStationId], 
            T.DistrictId AS [Setup_GeoPoliceStation.DistrictId], 
            T.PoliceStationName AS [Setup_GeoPoliceStation.PoliceStationName], 
            T.CompanyId AS [Setup_GeoPoliceStation.CompanyId], 
            T.EntryBy AS [Setup_GeoPoliceStation.EntryBy], 
            T.EntryDate AS [Setup_GeoPoliceStation.EntryDate], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Setup_GeoPoliceStation AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Setup_GeoRegion.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView283()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_GeoRegion
        [BTS_OPSModel.Setup_GeoRegion](T1.[Setup_GeoRegion.RegionId], T1.[Setup_GeoRegion.RegionName], T1.[Setup_GeoRegion.CompanyId], T1.[Setup_GeoRegion.EntryBy], T1.[Setup_GeoRegion.EntryDate])
    FROM (
        SELECT 
            T.RegionId AS [Setup_GeoRegion.RegionId], 
            T.RegionName AS [Setup_GeoRegion.RegionName], 
            T.CompanyId AS [Setup_GeoRegion.CompanyId], 
            T.EntryBy AS [Setup_GeoRegion.EntryBy], 
            T.EntryDate AS [Setup_GeoRegion.EntryDate], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Setup_GeoRegion AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Setup_GovtDuty.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView284()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_GovtDuty
        [BTS_OPSModel.Setup_GovtDuty](T1.[Setup_GovtDuty.GovtDutyId], T1.[Setup_GovtDuty.DutyName], T1.[Setup_GovtDuty.Description], T1.[Setup_GovtDuty.DutyOrder], T1.[Setup_GovtDuty.DefaultValue], T1.[Setup_GovtDuty.AccountsId])
    FROM (
        SELECT 
            T.GovtDutyId AS [Setup_GovtDuty.GovtDutyId], 
            T.DutyName AS [Setup_GovtDuty.DutyName], 
            T.Description AS [Setup_GovtDuty.Description], 
            T.DutyOrder AS [Setup_GovtDuty.DutyOrder], 
            T.DefaultValue AS [Setup_GovtDuty.DefaultValue], 
            T.AccountsId AS [Setup_GovtDuty.AccountsId], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Setup_GovtDuty AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Setup_GovtDutyAdjustment.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView285()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_GovtDutyAdjustment
        [BTS_OPSModel.Setup_GovtDutyAdjustment](T1.[Setup_GovtDutyAdjustment.AdjustmentId], T1.[Setup_GovtDutyAdjustment.AdjustmentName], T1.[Setup_GovtDutyAdjustment.Description], T1.[Setup_GovtDutyAdjustment.AccountsId])
    FROM (
        SELECT 
            T.AdjustmentId AS [Setup_GovtDutyAdjustment.AdjustmentId], 
            T.AdjustmentName AS [Setup_GovtDutyAdjustment.AdjustmentName], 
            T.Description AS [Setup_GovtDutyAdjustment.Description], 
            T.AccountsId AS [Setup_GovtDutyAdjustment.AccountsId], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Setup_GovtDutyAdjustment AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Setup_HSCode.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView286()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_HSCode
        [BTS_OPSModel.Setup_HSCode](T1.[Setup_HSCode.HSCodeId], T1.[Setup_HSCode.HSCode], T1.[Setup_HSCode.Description], T1.[Setup_HSCode.DetailDescription])
    FROM (
        SELECT 
            T.HSCodeId AS [Setup_HSCode.HSCodeId], 
            T.HSCode AS [Setup_HSCode.HSCode], 
            T.Description AS [Setup_HSCode.Description], 
            T.DetailDescription AS [Setup_HSCode.DetailDescription], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Setup_HSCode AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Setup_Location.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView287()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_Location
        [BTS_OPSModel.Setup_Location](T1.[Setup_Location.LocationId], T1.[Setup_Location.Code], T1.[Setup_Location.Name], T1.[Setup_Location.IsLoginLocation], T1.[Setup_Location.Address], T1.[Setup_Location.ContactNo], T1.[Setup_Location.InChargeId], T1.[Setup_Location.IsWareHouse], T1.[Setup_Location.MasterLocationId], T1.[Setup_Location.IsPortLocation], T1.[Setup_Location.DefaultCurrency], T1.[Setup_Location.POSPrinterWidth], T1.[Setup_Location.CompanyId], T1.[Setup_Location.EntryBy], T1.[Setup_Location.EntryDate])
    FROM (
        SELECT 
            T.LocationId AS [Setup_Location.LocationId], 
            T.Code AS [Setup_Location.Code], 
            T.Name AS [Setup_Location.Name], 
            T.IsLoginLocation AS [Setup_Location.IsLoginLocation], 
            T.Address AS [Setup_Location.Address], 
            T.ContactNo AS [Setup_Location.ContactNo], 
            T.InChargeId AS [Setup_Location.InChargeId], 
            T.IsWareHouse AS [Setup_Location.IsWareHouse], 
            T.MasterLocationId AS [Setup_Location.MasterLocationId], 
            T.IsPortLocation AS [Setup_Location.IsPortLocation], 
            T.DefaultCurrency AS [Setup_Location.DefaultCurrency], 
            T.POSPrinterWidth AS [Setup_Location.POSPrinterWidth], 
            T.CompanyId AS [Setup_Location.CompanyId], 
            T.EntryBy AS [Setup_Location.EntryBy], 
            T.EntryDate AS [Setup_Location.EntryDate], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Setup_Location AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Setup_Measurement.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView288()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_Measurement
        [BTS_OPSModel.Setup_Measurement](T1.[Setup_Measurement.MeasurementId], T1.[Setup_Measurement.Code], T1.[Setup_Measurement.Name], T1.[Setup_Measurement.LengthValue], T1.[Setup_Measurement.WidthValue], T1.[Setup_Measurement.HeightValue], T1.[Setup_Measurement.CompanyId], T1.[Setup_Measurement.EntryBy], T1.[Setup_Measurement.EntryDate])
    FROM (
        SELECT 
            T.MeasurementId AS [Setup_Measurement.MeasurementId], 
            T.Code AS [Setup_Measurement.Code], 
            T.Name AS [Setup_Measurement.Name], 
            T.LengthValue AS [Setup_Measurement.LengthValue], 
            T.WidthValue AS [Setup_Measurement.WidthValue], 
            T.HeightValue AS [Setup_Measurement.HeightValue], 
            T.CompanyId AS [Setup_Measurement.CompanyId], 
            T.EntryBy AS [Setup_Measurement.EntryBy], 
            T.EntryDate AS [Setup_Measurement.EntryDate], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Setup_Measurement AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Setup_Port.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView289()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_Port
        [BTS_OPSModel.Setup_Port](T1.[Setup_Port.PortId], T1.[Setup_Port.PortCode], T1.[Setup_Port.PortName], T1.[Setup_Port.Address], T1.[Setup_Port.ShipmentMode], T1.[Setup_Port.CompanyId], T1.[Setup_Port.EntryBy], T1.[Setup_Port.EntryDate], T1.[Setup_Port.EditedBy], T1.[Setup_Port.EditedDate])
    FROM (
        SELECT 
            T.PortId AS [Setup_Port.PortId], 
            T.PortCode AS [Setup_Port.PortCode], 
            T.PortName AS [Setup_Port.PortName], 
            T.Address AS [Setup_Port.Address], 
            T.ShipmentMode AS [Setup_Port.ShipmentMode], 
            T.CompanyId AS [Setup_Port.CompanyId], 
            T.EntryBy AS [Setup_Port.EntryBy], 
            T.EntryDate AS [Setup_Port.EntryDate], 
            T.EditedBy AS [Setup_Port.EditedBy], 
            T.EditedDate AS [Setup_Port.EditedDate], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Setup_Port AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Setup_Price.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView290()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_Price
        [BTS_OPSModel.Setup_Price](T1.[Setup_Price.PriceId], T1.[Setup_Price.PriceTypeId], T1.[Setup_Price.ProductId], T1.[Setup_Price.ProductDimensionId], T1.[Setup_Price.UnitTypeId], T1.[Setup_Price.SelectedCurrency], T1.[Setup_Price.Price], T1.[Setup_Price.Price1Rate], T1.[Setup_Price.Price1], T1.[Setup_Price.Price2Rate], T1.[Setup_Price.Price2], T1.[Setup_Price.CompanyId], T1.[Setup_Price.EntryBy], T1.[Setup_Price.EntryDate])
    FROM (
        SELECT 
            T.PriceId AS [Setup_Price.PriceId], 
            T.PriceTypeId AS [Setup_Price.PriceTypeId], 
            T.ProductId AS [Setup_Price.ProductId], 
            T.ProductDimensionId AS [Setup_Price.ProductDimensionId], 
            T.UnitTypeId AS [Setup_Price.UnitTypeId], 
            T.SelectedCurrency AS [Setup_Price.SelectedCurrency], 
            T.Price AS [Setup_Price.Price], 
            T.Price1Rate AS [Setup_Price.Price1Rate], 
            T.Price1 AS [Setup_Price.Price1], 
            T.Price2Rate AS [Setup_Price.Price2Rate], 
            T.Price2 AS [Setup_Price.Price2], 
            T.CompanyId AS [Setup_Price.CompanyId], 
            T.EntryBy AS [Setup_Price.EntryBy], 
            T.EntryDate AS [Setup_Price.EntryDate], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Setup_Price AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Setup_PriceDetail.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView291()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_PriceDetail
        [BTS_OPSModel.Setup_PriceDetail](T1.[Setup_PriceDetail.PriceDetailId], T1.[Setup_PriceDetail.PriceId], T1.[Setup_PriceDetail.Price], T1.[Setup_PriceDetail.Price1Rate], T1.[Setup_PriceDetail.Price1], T1.[Setup_PriceDetail.Price2Rate], T1.[Setup_PriceDetail.Price2], T1.[Setup_PriceDetail.LowerRangeQty], T1.[Setup_PriceDetail.UpperRangeQty], T1.[Setup_PriceDetail.EntryBy], T1.[Setup_PriceDetail.EntryDate])
    FROM (
        SELECT 
            T.PriceDetailId AS [Setup_PriceDetail.PriceDetailId], 
            T.PriceId AS [Setup_PriceDetail.PriceId], 
            T.Price AS [Setup_PriceDetail.Price], 
            T.Price1Rate AS [Setup_PriceDetail.Price1Rate], 
            T.Price1 AS [Setup_PriceDetail.Price1], 
            T.Price2Rate AS [Setup_PriceDetail.Price2Rate], 
            T.Price2 AS [Setup_PriceDetail.Price2], 
            T.LowerRangeQty AS [Setup_PriceDetail.LowerRangeQty], 
            T.UpperRangeQty AS [Setup_PriceDetail.UpperRangeQty], 
            T.EntryBy AS [Setup_PriceDetail.EntryBy], 
            T.EntryDate AS [Setup_PriceDetail.EntryDate], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Setup_PriceDetail AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Setup_PriceType.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView292()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_PriceType
        [BTS_OPSModel.Setup_PriceType](T1.[Setup_PriceType.PriceTypeId], T1.[Setup_PriceType.Code], T1.[Setup_PriceType.Name], T1.[Setup_PriceType.IsDetailPrice], T1.[Setup_PriceType.SelectedCurrency], T1.[Setup_PriceType.Currency1Rate], T1.[Setup_PriceType.Currency2Rate], T1.[Setup_PriceType.RangeType], T1.[Setup_PriceType.LowerLimit], T1.[Setup_PriceType.LowerLimit1], T1.[Setup_PriceType.LowerLimit2], T1.[Setup_PriceType.UpperLimit], T1.[Setup_PriceType.UpperLimit1], T1.[Setup_PriceType.UpperLimit2], T1.[Setup_PriceType.CompanyId], T1.[Setup_PriceType.EntryBy], T1.[Setup_PriceType.EntryDate])
    FROM (
        SELECT 
            T.PriceTypeId AS [Setup_PriceType.PriceTypeId], 
            T.Code AS [Setup_PriceType.Code], 
            T.Name AS [Setup_PriceType.Name], 
            T.IsDetailPrice AS [Setup_PriceType.IsDetailPrice], 
            T.SelectedCurrency AS [Setup_PriceType.SelectedCurrency], 
            T.Currency1Rate AS [Setup_PriceType.Currency1Rate], 
            T.Currency2Rate AS [Setup_PriceType.Currency2Rate], 
            T.RangeType AS [Setup_PriceType.RangeType], 
            T.LowerLimit AS [Setup_PriceType.LowerLimit], 
            T.LowerLimit1 AS [Setup_PriceType.LowerLimit1], 
            T.LowerLimit2 AS [Setup_PriceType.LowerLimit2], 
            T.UpperLimit AS [Setup_PriceType.UpperLimit], 
            T.UpperLimit1 AS [Setup_PriceType.UpperLimit1], 
            T.UpperLimit2 AS [Setup_PriceType.UpperLimit2], 
            T.CompanyId AS [Setup_PriceType.CompanyId], 
            T.EntryBy AS [Setup_PriceType.EntryBy], 
            T.EntryDate AS [Setup_PriceType.EntryDate], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Setup_PriceType AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Setup_Problem.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView293()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_Problem
        [BTS_OPSModel.Setup_Problem](T1.[Setup_Problem.ProblemId], T1.[Setup_Problem.OperationalEventId], T1.[Setup_Problem.Name], T1.[Setup_Problem.CompanyId], T1.[Setup_Problem.EntryBy], T1.[Setup_Problem.EntryDate], T1.[Setup_Problem.EditedBy], T1.[Setup_Problem.EditedDate])
    FROM (
        SELECT 
            T.ProblemId AS [Setup_Problem.ProblemId], 
            T.OperationalEventId AS [Setup_Problem.OperationalEventId], 
            T.Name AS [Setup_Problem.Name], 
            T.CompanyId AS [Setup_Problem.CompanyId], 
            T.EntryBy AS [Setup_Problem.EntryBy], 
            T.EntryDate AS [Setup_Problem.EntryDate], 
            T.EditedBy AS [Setup_Problem.EditedBy], 
            T.EditedDate AS [Setup_Problem.EditedDate], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Setup_Problem AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Setup_Product.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView294()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_Product
        [BTS_OPSModel.Setup_Product](T1.[Setup_Product.ProductId], T1.[Setup_Product.Code], T1.[Setup_Product.ProductGroupId], T1.[Setup_Product.ProductSubGroupId], T1.[Setup_Product.ProductCategoryId], T1.[Setup_Product.BrandId], T1.[Setup_Product.Model], T1.[Setup_Product.Name], T1.[Setup_Product.ShortSpecification], T1.[Setup_Product.WebName], T1.[Setup_Product.SerialAvailable], T1.[Setup_Product.IsActive], T1.[Setup_Product.PrimaryUnitTypeId], T1.[Setup_Product.SecondaryUnitTypeId], T1.[Setup_Product.TertiaryUnitTypeId], T1.[Setup_Product.SecondaryConversionRatio], T1.[Setup_Product.TertiaryConversionRatio], T1.[Setup_Product.ReorderPoint], T1.[Setup_Product.MinStockQuantity], T1.[Setup_Product.ReturnAllowedDays], T1.[Setup_Product.CreditNoteAllowedDays], T1.[Setup_Product.DebitNoteAllowedDays], T1.[Setup_Product.IsStockMaintain], T1.[Setup_Product.IsSaleable], T1.[Setup_Product.ProductType], T1.[Setup_Product.ProductCondition], T1.[Setup_Product.AccountsId], T1.[Setup_Product.IsWarrantyAvailable], T1.[Setup_Product.IsLifeTimeWarranty], T1.[Setup_Product.WarrantyDays], T1.[Setup_Product.AdditionalWarrantyDays], T1.[Setup_Product.IsServiceWarranty], T1.[Setup_Product.ServiceWarrantyDays], T1.[Setup_Product.Height], T1.[Setup_Product.Width], T1.[Setup_Product.Thickness], T1.[Setup_Product.CapacityId], T1.[Setup_Product.Capacity], T1.[Setup_Product.OriginCountryId], T1.[Setup_Product.HSCodeId], T1.[Setup_Product.CompanyId], T1.[Setup_Product.EntryBy], T1.[Setup_Product.EntryDate], T1.[Setup_Product.EditedBy], T1.[Setup_Product.EditedDate])
    FROM (
        SELECT 
            T.ProductId AS [Setup_Product.ProductId], 
            T.Code AS [Setup_Product.Code], 
            T.ProductGroupId AS [Setup_Product.ProductGroupId], 
            T.ProductSubGroupId AS [Setup_Product.ProductSubGroupId], 
            T.ProductCategoryId AS [Setup_Product.ProductCategoryId], 
            T.BrandId AS [Setup_Product.BrandId], 
            T.Model AS [Setup_Product.Model], 
            T.Name AS [Setup_Product.Name], 
            T.ShortSpecification AS [Setup_Product.ShortSpecification], 
            T.WebName AS [Setup_Product.WebName], 
            T.SerialAvailable AS [Setup_Product.SerialAvailable], 
            T.IsActive AS [Setup_Product.IsActive], 
            T.PrimaryUnitTypeId AS [Setup_Product.PrimaryUnitTypeId], 
            T.SecondaryUnitTypeId AS [Setup_Product.SecondaryUnitTypeId], 
            T.TertiaryUnitTypeId AS [Setup_Product.TertiaryUnitTypeId], 
            T.SecondaryConversionRatio AS [Setup_Product.SecondaryConversionRatio], 
            T.TertiaryConversionRatio AS [Setup_Product.TertiaryConversionRatio], 
            T.ReorderPoint AS [Setup_Product.ReorderPoint], 
            T.MinStockQuantity AS [Setup_Product.MinStockQuantity], 
            T.ReturnAllowedDays AS [Setup_Product.ReturnAllowedDays], 
            T.CreditNoteAllowedDays AS [Setup_Product.CreditNoteAllowedDays], 
            T.DebitNoteAllowedDays AS [Setup_Product.DebitNoteAllowedDays], 
            T.IsStockMaintain AS [Setup_Product.IsStockMaintain], 
            T.IsSaleable AS [Setup_Product.IsSaleable], 
            T.ProductType AS [Setup_Product.ProductType], 
            T.ProductCondition AS [Setup_Product.ProductCondition], 
            T.AccountsId AS [Setup_Product.AccountsId], 
            T.IsWarrantyAvailable AS [Setup_Product.IsWarrantyAvailable], 
            T.IsLifeTimeWarranty AS [Setup_Product.IsLifeTimeWarranty], 
            T.WarrantyDays AS [Setup_Product.WarrantyDays], 
            T.AdditionalWarrantyDays AS [Setup_Product.AdditionalWarrantyDays], 
            T.IsServiceWarranty AS [Setup_Product.IsServiceWarranty], 
            T.ServiceWarrantyDays AS [Setup_Product.ServiceWarrantyDays], 
            T.Height AS [Setup_Product.Height], 
            T.Width AS [Setup_Product.Width], 
            T.Thickness AS [Setup_Product.Thickness], 
            T.CapacityId AS [Setup_Product.CapacityId], 
            T.Capacity AS [Setup_Product.Capacity], 
            T.OriginCountryId AS [Setup_Product.OriginCountryId], 
            T.HSCodeId AS [Setup_Product.HSCodeId], 
            T.CompanyId AS [Setup_Product.CompanyId], 
            T.EntryBy AS [Setup_Product.EntryBy], 
            T.EntryDate AS [Setup_Product.EntryDate], 
            T.EditedBy AS [Setup_Product.EditedBy], 
            T.EditedDate AS [Setup_Product.EditedDate], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Setup_Product AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Setup_ProductCategory.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView295()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_ProductCategory
        [BTS_OPSModel.Setup_ProductCategory](T1.[Setup_ProductCategory.ProductCategoryId], T1.[Setup_ProductCategory.Code], T1.[Setup_ProductCategory.Name], T1.[Setup_ProductCategory.ProductGroupId], T1.[Setup_ProductCategory.CompanyId], T1.[Setup_ProductCategory.EntryBy], T1.[Setup_ProductCategory.EntryDate], T1.[Setup_ProductCategory.EditedBy], T1.[Setup_ProductCategory.EditedDate])
    FROM (
        SELECT 
            T.ProductCategoryId AS [Setup_ProductCategory.ProductCategoryId], 
            T.Code AS [Setup_ProductCategory.Code], 
            T.Name AS [Setup_ProductCategory.Name], 
            T.ProductGroupId AS [Setup_ProductCategory.ProductGroupId], 
            T.CompanyId AS [Setup_ProductCategory.CompanyId], 
            T.EntryBy AS [Setup_ProductCategory.EntryBy], 
            T.EntryDate AS [Setup_ProductCategory.EntryDate], 
            T.EditedBy AS [Setup_ProductCategory.EditedBy], 
            T.EditedDate AS [Setup_ProductCategory.EditedDate], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Setup_ProductCategory AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Setup_ProductDimension.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView296()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_ProductDimension
        [BTS_OPSModel.Setup_ProductDimension](T1.[Setup_ProductDimension.ProductDimensionId], T1.[Setup_ProductDimension.Code], T1.[Setup_ProductDimension.ProductId], T1.[Setup_ProductDimension.MeasurementId], T1.[Setup_ProductDimension.SizeId], T1.[Setup_ProductDimension.StyleId], T1.[Setup_ProductDimension.ColorId], T1.[Setup_ProductDimension.SKUCode], T1.[Setup_ProductDimension.EntryBy], T1.[Setup_ProductDimension.EntryDate])
    FROM (
        SELECT 
            T.ProductDimensionId AS [Setup_ProductDimension.ProductDimensionId], 
            T.Code AS [Setup_ProductDimension.Code], 
            T.ProductId AS [Setup_ProductDimension.ProductId], 
            T.MeasurementId AS [Setup_ProductDimension.MeasurementId], 
            T.SizeId AS [Setup_ProductDimension.SizeId], 
            T.StyleId AS [Setup_ProductDimension.StyleId], 
            T.ColorId AS [Setup_ProductDimension.ColorId], 
            T.SKUCode AS [Setup_ProductDimension.SKUCode], 
            T.EntryBy AS [Setup_ProductDimension.EntryBy], 
            T.EntryDate AS [Setup_ProductDimension.EntryDate], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Setup_ProductDimension AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Setup_ProductGroup.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView297()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_ProductGroup
        [BTS_OPSModel.Setup_ProductGroup](T1.[Setup_ProductGroup.ProductGroupId], T1.[Setup_ProductGroup.Code], T1.[Setup_ProductGroup.Name], T1.[Setup_ProductGroup.CompanyId], T1.[Setup_ProductGroup.EntryBy], T1.[Setup_ProductGroup.EntryDate], T1.[Setup_ProductGroup.EditedBy], T1.[Setup_ProductGroup.EditedDate])
    FROM (
        SELECT 
            T.ProductGroupId AS [Setup_ProductGroup.ProductGroupId], 
            T.Code AS [Setup_ProductGroup.Code], 
            T.Name AS [Setup_ProductGroup.Name], 
            T.CompanyId AS [Setup_ProductGroup.CompanyId], 
            T.EntryBy AS [Setup_ProductGroup.EntryBy], 
            T.EntryDate AS [Setup_ProductGroup.EntryDate], 
            T.EditedBy AS [Setup_ProductGroup.EditedBy], 
            T.EditedDate AS [Setup_ProductGroup.EditedDate], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Setup_ProductGroup AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Setup_ProductSubGroup.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView298()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_ProductSubGroup
        [BTS_OPSModel.Setup_ProductSubGroup](T1.[Setup_ProductSubGroup.ProductSubGroupId], T1.[Setup_ProductSubGroup.Code], T1.[Setup_ProductSubGroup.Name], T1.[Setup_ProductSubGroup.ProductGroupId], T1.[Setup_ProductSubGroup.CompanyId], T1.[Setup_ProductSubGroup.EntryBy], T1.[Setup_ProductSubGroup.EntryDate], T1.[Setup_ProductSubGroup.EditedBy], T1.[Setup_ProductSubGroup.EditedDate])
    FROM (
        SELECT 
            T.ProductSubGroupId AS [Setup_ProductSubGroup.ProductSubGroupId], 
            T.Code AS [Setup_ProductSubGroup.Code], 
            T.Name AS [Setup_ProductSubGroup.Name], 
            T.ProductGroupId AS [Setup_ProductSubGroup.ProductGroupId], 
            T.CompanyId AS [Setup_ProductSubGroup.CompanyId], 
            T.EntryBy AS [Setup_ProductSubGroup.EntryBy], 
            T.EntryDate AS [Setup_ProductSubGroup.EntryDate], 
            T.EditedBy AS [Setup_ProductSubGroup.EditedBy], 
            T.EditedDate AS [Setup_ProductSubGroup.EditedDate], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Setup_ProductSubGroup AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Setup_Profession.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView299()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_Profession
        [BTS_OPSModel.Setup_Profession](T1.[Setup_Profession.ProfessionId], T1.[Setup_Profession.Name], T1.[Setup_Profession.CompanyId], T1.[Setup_Profession.EntryBy], T1.[Setup_Profession.EntryDate])
    FROM (
        SELECT 
            T.ProfessionId AS [Setup_Profession.ProfessionId], 
            T.Name AS [Setup_Profession.Name], 
            T.CompanyId AS [Setup_Profession.CompanyId], 
            T.EntryBy AS [Setup_Profession.EntryBy], 
            T.EntryDate AS [Setup_Profession.EntryDate], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Setup_Profession AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Setup_Project.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView300()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_Project
        [BTS_OPSModel.Setup_Project](T1.[Setup_Project.ProjectId], T1.[Setup_Project.Name], T1.[Setup_Project.Description], T1.[Setup_Project.StartDate], T1.[Setup_Project.EndDate], T1.[Setup_Project.IsActive], T1.[Setup_Project.CompanyId], T1.[Setup_Project.EntryBy])
    FROM (
        SELECT 
            T.ProjectId AS [Setup_Project.ProjectId], 
            T.Name AS [Setup_Project.Name], 
            T.Description AS [Setup_Project.Description], 
            T.StartDate AS [Setup_Project.StartDate], 
            T.EndDate AS [Setup_Project.EndDate], 
            T.IsActive AS [Setup_Project.IsActive], 
            T.CompanyId AS [Setup_Project.CompanyId], 
            T.EntryBy AS [Setup_Project.EntryBy], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Setup_Project AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Setup_RelatedProduct.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView301()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_RelatedProduct
        [BTS_OPSModel.Setup_RelatedProduct](T1.[Setup_RelatedProduct.RelatedProductId], T1.[Setup_RelatedProduct.ProductId], T1.[Setup_RelatedProduct.RelatedOrSpareProductId], T1.[Setup_RelatedProduct.Type], T1.[Setup_RelatedProduct.EntryBy], T1.[Setup_RelatedProduct.EntryDate])
    FROM (
        SELECT 
            T.RelatedProductId AS [Setup_RelatedProduct.RelatedProductId], 
            T.ProductId AS [Setup_RelatedProduct.ProductId], 
            T.RelatedOrSpareProductId AS [Setup_RelatedProduct.RelatedOrSpareProductId], 
            T.Type AS [Setup_RelatedProduct.Type], 
            T.EntryBy AS [Setup_RelatedProduct.EntryBy], 
            T.EntryDate AS [Setup_RelatedProduct.EntryDate], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Setup_RelatedProduct AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Setup_Size.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView302()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_Size
        [BTS_OPSModel.Setup_Size](T1.[Setup_Size.SizeId], T1.[Setup_Size.Code], T1.[Setup_Size.Name], T1.[Setup_Size.CompanyId], T1.[Setup_Size.EntryBy], T1.[Setup_Size.EntryDate])
    FROM (
        SELECT 
            T.SizeId AS [Setup_Size.SizeId], 
            T.Code AS [Setup_Size.Code], 
            T.Name AS [Setup_Size.Name], 
            T.CompanyId AS [Setup_Size.CompanyId], 
            T.EntryBy AS [Setup_Size.EntryBy], 
            T.EntryDate AS [Setup_Size.EntryDate], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Setup_Size AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Setup_Style.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView303()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_Style
        [BTS_OPSModel.Setup_Style](T1.[Setup_Style.StyleId], T1.[Setup_Style.Code], T1.[Setup_Style.Name], T1.[Setup_Style.CompanyId], T1.[Setup_Style.EntryBy], T1.[Setup_Style.EntryDate])
    FROM (
        SELECT 
            T.StyleId AS [Setup_Style.StyleId], 
            T.Code AS [Setup_Style.Code], 
            T.Name AS [Setup_Style.Name], 
            T.CompanyId AS [Setup_Style.CompanyId], 
            T.EntryBy AS [Setup_Style.EntryBy], 
            T.EntryDate AS [Setup_Style.EntryDate], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Setup_Style AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Setup_SubFeatures.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView304()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_SubFeatures
        [BTS_OPSModel.Setup_SubFeatures](T1.[Setup_SubFeatures.SubFeatureId], T1.[Setup_SubFeatures.FeatureId], T1.[Setup_SubFeatures.SubFeatureName], T1.[Setup_SubFeatures.DefaultValue], T1.[Setup_SubFeatures.Group], T1.[Setup_SubFeatures.Description])
    FROM (
        SELECT 
            T.SubFeatureId AS [Setup_SubFeatures.SubFeatureId], 
            T.FeatureId AS [Setup_SubFeatures.FeatureId], 
            T.SubFeatureName AS [Setup_SubFeatures.SubFeatureName], 
            T.DefaultValue AS [Setup_SubFeatures.DefaultValue], 
            T.[Group] AS [Setup_SubFeatures.Group], 
            T.Description AS [Setup_SubFeatures.Description], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Setup_SubFeatures AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Setup_Supplier.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView305()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_Supplier
        [BTS_OPSModel.Setup_Supplier](T1.[Setup_Supplier.SupplierId], T1.[Setup_Supplier.SupplierGroupId], T1.[Setup_Supplier.Code], T1.[Setup_Supplier.Name], T1.[Setup_Supplier.Address], T1.[Setup_Supplier.Phone], T1.[Setup_Supplier.Fax], T1.[Setup_Supplier.Email], T1.[Setup_Supplier.URL], T1.[Setup_Supplier.ContactPerson], T1.[Setup_Supplier.ContactPersonMobile], T1.[Setup_Supplier.ProfessionId], T1.[Setup_Supplier.Designation], T1.[Setup_Supplier.BankId], T1.[Setup_Supplier.BankAccountName], T1.[Setup_Supplier.BankAccountNumber], T1.[Setup_Supplier.AccountsId], T1.[Setup_Supplier.SelectedCurrency], T1.[Setup_Supplier.Currency1Rate], T1.[Setup_Supplier.Currency2Rate], T1.[Setup_Supplier.OpeningDate], T1.[Setup_Supplier.OpeningBalance], T1.[Setup_Supplier.OpeningBalance1], T1.[Setup_Supplier.OpeningBalance2], T1.[Setup_Supplier.PaidAmount], T1.[Setup_Supplier.Paid1Amount], T1.[Setup_Supplier.Paid2Amount], T1.[Setup_Supplier.IsActive], T1.[Setup_Supplier.CompanyId], T1.[Setup_Supplier.LocationId], T1.[Setup_Supplier.EntryBy], T1.[Setup_Supplier.EntryDate], T1.[Setup_Supplier.EditedBy], T1.[Setup_Supplier.EditedDate])
    FROM (
        SELECT 
            T.SupplierId AS [Setup_Supplier.SupplierId], 
            T.SupplierGroupId AS [Setup_Supplier.SupplierGroupId], 
            T.Code AS [Setup_Supplier.Code], 
            T.Name AS [Setup_Supplier.Name], 
            T.Address AS [Setup_Supplier.Address], 
            T.Phone AS [Setup_Supplier.Phone], 
            T.Fax AS [Setup_Supplier.Fax], 
            T.Email AS [Setup_Supplier.Email], 
            T.URL AS [Setup_Supplier.URL], 
            T.ContactPerson AS [Setup_Supplier.ContactPerson], 
            T.ContactPersonMobile AS [Setup_Supplier.ContactPersonMobile], 
            T.ProfessionId AS [Setup_Supplier.ProfessionId], 
            T.Designation AS [Setup_Supplier.Designation], 
            T.BankId AS [Setup_Supplier.BankId], 
            T.BankAccountName AS [Setup_Supplier.BankAccountName], 
            T.BankAccountNumber AS [Setup_Supplier.BankAccountNumber], 
            T.AccountsId AS [Setup_Supplier.AccountsId], 
            T.SelectedCurrency AS [Setup_Supplier.SelectedCurrency], 
            T.Currency1Rate AS [Setup_Supplier.Currency1Rate], 
            T.Currency2Rate AS [Setup_Supplier.Currency2Rate], 
            T.OpeningDate AS [Setup_Supplier.OpeningDate], 
            T.OpeningBalance AS [Setup_Supplier.OpeningBalance], 
            T.OpeningBalance1 AS [Setup_Supplier.OpeningBalance1], 
            T.OpeningBalance2 AS [Setup_Supplier.OpeningBalance2], 
            T.PaidAmount AS [Setup_Supplier.PaidAmount], 
            T.Paid1Amount AS [Setup_Supplier.Paid1Amount], 
            T.Paid2Amount AS [Setup_Supplier.Paid2Amount], 
            T.IsActive AS [Setup_Supplier.IsActive], 
            T.CompanyId AS [Setup_Supplier.CompanyId], 
            T.LocationId AS [Setup_Supplier.LocationId], 
            T.EntryBy AS [Setup_Supplier.EntryBy], 
            T.EntryDate AS [Setup_Supplier.EntryDate], 
            T.EditedBy AS [Setup_Supplier.EditedBy], 
            T.EditedDate AS [Setup_Supplier.EditedDate], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Setup_Supplier AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Setup_SupplierGroup.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView306()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_SupplierGroup
        [BTS_OPSModel.Setup_SupplierGroup](T1.[Setup_SupplierGroup.SupplierGroupId], T1.[Setup_SupplierGroup.Name], T1.[Setup_SupplierGroup.CompanyId], T1.[Setup_SupplierGroup.EntryBy], T1.[Setup_SupplierGroup.EntryDate])
    FROM (
        SELECT 
            T.SupplierGroupId AS [Setup_SupplierGroup.SupplierGroupId], 
            T.Name AS [Setup_SupplierGroup.Name], 
            T.CompanyId AS [Setup_SupplierGroup.CompanyId], 
            T.EntryBy AS [Setup_SupplierGroup.EntryBy], 
            T.EntryDate AS [Setup_SupplierGroup.EntryDate], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Setup_SupplierGroup AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Setup_TemplateHeader.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView307()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_TemplateHeader
        [BTS_OPSModel.Setup_TemplateHeader](T1.[Setup_TemplateHeader.TemplateHeaderId], T1.[Setup_TemplateHeader.Name], T1.[Setup_TemplateHeader.Description], T1.[Setup_TemplateHeader.CompanyId], T1.[Setup_TemplateHeader.EntryBy], T1.[Setup_TemplateHeader.EntryDate])
    FROM (
        SELECT 
            T.TemplateHeaderId AS [Setup_TemplateHeader.TemplateHeaderId], 
            T.Name AS [Setup_TemplateHeader.Name], 
            T.Description AS [Setup_TemplateHeader.Description], 
            T.CompanyId AS [Setup_TemplateHeader.CompanyId], 
            T.EntryBy AS [Setup_TemplateHeader.EntryBy], 
            T.EntryDate AS [Setup_TemplateHeader.EntryDate], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Setup_TemplateHeader AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Setup_TermsAndConditions.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView308()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_TermsAndConditions
        [BTS_OPSModel.Setup_TermsAndConditions](T1.[Setup_TermsAndConditions.TermsAndConditionsId], T1.[Setup_TermsAndConditions.OperationalEventId], T1.[Setup_TermsAndConditions.TemplateHeaderId], T1.[Setup_TermsAndConditions.Detail], T1.[Setup_TermsAndConditions.CompanyId], T1.[Setup_TermsAndConditions.EntryBy], T1.[Setup_TermsAndConditions.EntryDate])
    FROM (
        SELECT 
            T.TermsAndConditionsId AS [Setup_TermsAndConditions.TermsAndConditionsId], 
            T.OperationalEventId AS [Setup_TermsAndConditions.OperationalEventId], 
            T.TemplateHeaderId AS [Setup_TermsAndConditions.TemplateHeaderId], 
            T.Detail AS [Setup_TermsAndConditions.Detail], 
            T.CompanyId AS [Setup_TermsAndConditions.CompanyId], 
            T.EntryBy AS [Setup_TermsAndConditions.EntryBy], 
            T.EntryDate AS [Setup_TermsAndConditions.EntryDate], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Setup_TermsAndConditions AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Setup_Transport.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView309()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_Transport
        [BTS_OPSModel.Setup_Transport](T1.[Setup_Transport.TransportId], T1.[Setup_Transport.Name], T1.[Setup_Transport.CompanyId], T1.[Setup_Transport.EntryBy], T1.[Setup_Transport.EntryDate])
    FROM (
        SELECT 
            T.TransportId AS [Setup_Transport.TransportId], 
            T.Name AS [Setup_Transport.Name], 
            T.CompanyId AS [Setup_Transport.CompanyId], 
            T.EntryBy AS [Setup_Transport.EntryBy], 
            T.EntryDate AS [Setup_Transport.EntryDate], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Setup_Transport AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Setup_TransportType.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView310()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_TransportType
        [BTS_OPSModel.Setup_TransportType](T1.[Setup_TransportType.TransportTypeId], T1.[Setup_TransportType.Name], T1.[Setup_TransportType.CompanyId], T1.[Setup_TransportType.EntryBy], T1.[Setup_TransportType.EntryDate])
    FROM (
        SELECT 
            T.TransportTypeId AS [Setup_TransportType.TransportTypeId], 
            T.Name AS [Setup_TransportType.Name], 
            T.CompanyId AS [Setup_TransportType.CompanyId], 
            T.EntryBy AS [Setup_TransportType.EntryBy], 
            T.EntryDate AS [Setup_TransportType.EntryDate], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Setup_TransportType AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Setup_UnitType.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView311()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Setup_UnitType
        [BTS_OPSModel.Setup_UnitType](T1.[Setup_UnitType.UnitTypeId], T1.[Setup_UnitType.Code], T1.[Setup_UnitType.Name], T1.[Setup_UnitType.CompanyId], T1.[Setup_UnitType.EntryBy], T1.[Setup_UnitType.EntryDate])
    FROM (
        SELECT 
            T.UnitTypeId AS [Setup_UnitType.UnitTypeId], 
            T.Code AS [Setup_UnitType.Code], 
            T.Name AS [Setup_UnitType.Name], 
            T.CompanyId AS [Setup_UnitType.CompanyId], 
            T.EntryBy AS [Setup_UnitType.EntryBy], 
            T.EntryDate AS [Setup_UnitType.EntryDate], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Setup_UnitType AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Stock_BadStock.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView312()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Stock_BadStock
        [BTS_OPSModel.Stock_BadStock](T1.[Stock_BadStock.BadStockId], T1.[Stock_BadStock.ProductId], T1.[Stock_BadStock.ProductDimensionId], T1.[Stock_BadStock.UnitTypeId], T1.[Stock_BadStock.Quantity], T1.[Stock_BadStock.Cost], T1.[Stock_BadStock.Cost1], T1.[Stock_BadStock.Cost2], T1.[Stock_BadStock.ReferenceNo], T1.[Stock_BadStock.ReferenceDate], T1.[Stock_BadStock.GoodsReceiveId], T1.[Stock_BadStock.ImportedStockInId], T1.[Stock_BadStock.SupplierId], T1.[Stock_BadStock.LocationId], T1.[Stock_BadStock.WareHouseId], T1.[Stock_BadStock.CompanyId], T1.[Stock_BadStock.EntryDate])
    FROM (
        SELECT 
            T.BadStockId AS [Stock_BadStock.BadStockId], 
            T.ProductId AS [Stock_BadStock.ProductId], 
            T.ProductDimensionId AS [Stock_BadStock.ProductDimensionId], 
            T.UnitTypeId AS [Stock_BadStock.UnitTypeId], 
            T.Quantity AS [Stock_BadStock.Quantity], 
            T.Cost AS [Stock_BadStock.Cost], 
            T.Cost1 AS [Stock_BadStock.Cost1], 
            T.Cost2 AS [Stock_BadStock.Cost2], 
            T.ReferenceNo AS [Stock_BadStock.ReferenceNo], 
            T.ReferenceDate AS [Stock_BadStock.ReferenceDate], 
            T.GoodsReceiveId AS [Stock_BadStock.GoodsReceiveId], 
            T.ImportedStockInId AS [Stock_BadStock.ImportedStockInId], 
            T.SupplierId AS [Stock_BadStock.SupplierId], 
            T.LocationId AS [Stock_BadStock.LocationId], 
            T.WareHouseId AS [Stock_BadStock.WareHouseId], 
            T.CompanyId AS [Stock_BadStock.CompanyId], 
            T.EntryDate AS [Stock_BadStock.EntryDate], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Stock_BadStock AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Stock_BadStockSerial.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView313()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Stock_BadStockSerial
        [BTS_OPSModel.Stock_BadStockSerial](T1.[Stock_BadStockSerial.BadStockSerialId], T1.[Stock_BadStockSerial.BadStockId], T1.[Stock_BadStockSerial.Serial], T1.[Stock_BadStockSerial.AdditionalSerial])
    FROM (
        SELECT 
            T.BadStockSerialId AS [Stock_BadStockSerial.BadStockSerialId], 
            T.BadStockId AS [Stock_BadStockSerial.BadStockId], 
            T.Serial AS [Stock_BadStockSerial.Serial], 
            T.AdditionalSerial AS [Stock_BadStockSerial.AdditionalSerial], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Stock_BadStockSerial AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Stock_CurrentStock.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView314()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Stock_CurrentStock
        [BTS_OPSModel.Stock_CurrentStock](T1.[Stock_CurrentStock.CurrentStockId], T1.[Stock_CurrentStock.ProductId], T1.[Stock_CurrentStock.ProductDimensionId], T1.[Stock_CurrentStock.UnitTypeId], T1.[Stock_CurrentStock.Quantity], T1.[Stock_CurrentStock.Cost], T1.[Stock_CurrentStock.Cost1], T1.[Stock_CurrentStock.Cost2], T1.[Stock_CurrentStock.BatchNo], T1.[Stock_CurrentStock.ManufactureDate], T1.[Stock_CurrentStock.ExpireDate], T1.[Stock_CurrentStock.ReferenceNo], T1.[Stock_CurrentStock.ReferenceDate], T1.[Stock_CurrentStock.GoodsReceiveId], T1.[Stock_CurrentStock.ImportedStockInId], T1.[Stock_CurrentStock.SupplierId], T1.[Stock_CurrentStock.LocationId], T1.[Stock_CurrentStock.WareHouseId], T1.[Stock_CurrentStock.CompanyId], T1.[Stock_CurrentStock.EntryDate])
    FROM (
        SELECT 
            T.CurrentStockId AS [Stock_CurrentStock.CurrentStockId], 
            T.ProductId AS [Stock_CurrentStock.ProductId], 
            T.ProductDimensionId AS [Stock_CurrentStock.ProductDimensionId], 
            T.UnitTypeId AS [Stock_CurrentStock.UnitTypeId], 
            T.Quantity AS [Stock_CurrentStock.Quantity], 
            T.Cost AS [Stock_CurrentStock.Cost], 
            T.Cost1 AS [Stock_CurrentStock.Cost1], 
            T.Cost2 AS [Stock_CurrentStock.Cost2], 
            T.BatchNo AS [Stock_CurrentStock.BatchNo], 
            T.ManufactureDate AS [Stock_CurrentStock.ManufactureDate], 
            T.ExpireDate AS [Stock_CurrentStock.ExpireDate], 
            T.ReferenceNo AS [Stock_CurrentStock.ReferenceNo], 
            T.ReferenceDate AS [Stock_CurrentStock.ReferenceDate], 
            T.GoodsReceiveId AS [Stock_CurrentStock.GoodsReceiveId], 
            T.ImportedStockInId AS [Stock_CurrentStock.ImportedStockInId], 
            T.SupplierId AS [Stock_CurrentStock.SupplierId], 
            T.LocationId AS [Stock_CurrentStock.LocationId], 
            T.WareHouseId AS [Stock_CurrentStock.WareHouseId], 
            T.CompanyId AS [Stock_CurrentStock.CompanyId], 
            T.EntryDate AS [Stock_CurrentStock.EntryDate], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Stock_CurrentStock AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Stock_CurrentStockSerial.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView315()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Stock_CurrentStockSerial
        [BTS_OPSModel.Stock_CurrentStockSerial](T1.[Stock_CurrentStockSerial.CurrentStockSerialId], T1.[Stock_CurrentStockSerial.CurrentStockId], T1.[Stock_CurrentStockSerial.Serial], T1.[Stock_CurrentStockSerial.AdditionalSerial])
    FROM (
        SELECT 
            T.CurrentStockSerialId AS [Stock_CurrentStockSerial.CurrentStockSerialId], 
            T.CurrentStockId AS [Stock_CurrentStockSerial.CurrentStockId], 
            T.Serial AS [Stock_CurrentStockSerial.Serial], 
            T.AdditionalSerial AS [Stock_CurrentStockSerial.AdditionalSerial], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Stock_CurrentStockSerial AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Stock_LIMStock.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView316()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Stock_LIMStock
        [BTS_OPSModel.Stock_LIMStock](T1.[Stock_LIMStock.LIMStockId], T1.[Stock_LIMStock.ProductId], T1.[Stock_LIMStock.ProductDimensionId], T1.[Stock_LIMStock.UnitTypeId], T1.[Stock_LIMStock.Quantity], T1.[Stock_LIMStock.Cost], T1.[Stock_LIMStock.Cost1], T1.[Stock_LIMStock.Cost2], T1.[Stock_LIMStock.ReferenceNo], T1.[Stock_LIMStock.ReferenceDate], T1.[Stock_LIMStock.LocationId], T1.[Stock_LIMStock.CompanyId], T1.[Stock_LIMStock.EntryDate], T1.[Stock_LIMStock.SupplierId])
    FROM (
        SELECT 
            T.LIMStockId AS [Stock_LIMStock.LIMStockId], 
            T.ProductId AS [Stock_LIMStock.ProductId], 
            T.ProductDimensionId AS [Stock_LIMStock.ProductDimensionId], 
            T.UnitTypeId AS [Stock_LIMStock.UnitTypeId], 
            T.Quantity AS [Stock_LIMStock.Quantity], 
            T.Cost AS [Stock_LIMStock.Cost], 
            T.Cost1 AS [Stock_LIMStock.Cost1], 
            T.Cost2 AS [Stock_LIMStock.Cost2], 
            T.ReferenceNo AS [Stock_LIMStock.ReferenceNo], 
            T.ReferenceDate AS [Stock_LIMStock.ReferenceDate], 
            T.LocationId AS [Stock_LIMStock.LocationId], 
            T.CompanyId AS [Stock_LIMStock.CompanyId], 
            T.EntryDate AS [Stock_LIMStock.EntryDate], 
            T.SupplierId AS [Stock_LIMStock.SupplierId], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Stock_LIMStock AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Stock_RMAStock.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView317()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Stock_RMAStock
        [BTS_OPSModel.Stock_RMAStock](T1.[Stock_RMAStock.RMAStockId], T1.[Stock_RMAStock.ProductId], T1.[Stock_RMAStock.ProductDimensionId], T1.[Stock_RMAStock.UnitTypeId], T1.[Stock_RMAStock.Quantity], T1.[Stock_RMAStock.Cost], T1.[Stock_RMAStock.Cost1], T1.[Stock_RMAStock.Cost2], T1.[Stock_RMAStock.ReferenceNo], T1.[Stock_RMAStock.ReferenceDate], T1.[Stock_RMAStock.GoodsReceiveId], T1.[Stock_RMAStock.ImportedStockInId], T1.[Stock_RMAStock.SupplierId], T1.[Stock_RMAStock.LocationId], T1.[Stock_RMAStock.WareHouseId], T1.[Stock_RMAStock.CompanyId], T1.[Stock_RMAStock.EntryDate])
    FROM (
        SELECT 
            T.RMAStockId AS [Stock_RMAStock.RMAStockId], 
            T.ProductId AS [Stock_RMAStock.ProductId], 
            T.ProductDimensionId AS [Stock_RMAStock.ProductDimensionId], 
            T.UnitTypeId AS [Stock_RMAStock.UnitTypeId], 
            T.Quantity AS [Stock_RMAStock.Quantity], 
            T.Cost AS [Stock_RMAStock.Cost], 
            T.Cost1 AS [Stock_RMAStock.Cost1], 
            T.Cost2 AS [Stock_RMAStock.Cost2], 
            T.ReferenceNo AS [Stock_RMAStock.ReferenceNo], 
            T.ReferenceDate AS [Stock_RMAStock.ReferenceDate], 
            T.GoodsReceiveId AS [Stock_RMAStock.GoodsReceiveId], 
            T.ImportedStockInId AS [Stock_RMAStock.ImportedStockInId], 
            T.SupplierId AS [Stock_RMAStock.SupplierId], 
            T.LocationId AS [Stock_RMAStock.LocationId], 
            T.WareHouseId AS [Stock_RMAStock.WareHouseId], 
            T.CompanyId AS [Stock_RMAStock.CompanyId], 
            T.EntryDate AS [Stock_RMAStock.EntryDate], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Stock_RMAStock AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Stock_RMAStockSerial.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView318()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Stock_RMAStockSerial
        [BTS_OPSModel.Stock_RMAStockSerial](T1.[Stock_RMAStockSerial.RMAStockSerialId], T1.[Stock_RMAStockSerial.RMAStockId], T1.[Stock_RMAStockSerial.Serial], T1.[Stock_RMAStockSerial.AdditionalSerial])
    FROM (
        SELECT 
            T.RMAStockSerialId AS [Stock_RMAStockSerial.RMAStockSerialId], 
            T.RMAStockId AS [Stock_RMAStockSerial.RMAStockId], 
            T.Serial AS [Stock_RMAStockSerial.Serial], 
            T.AdditionalSerial AS [Stock_RMAStockSerial.AdditionalSerial], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Stock_RMAStockSerial AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Stock_TransitStock.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView319()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Stock_TransitStock
        [BTS_OPSModel.Stock_TransitStock](T1.[Stock_TransitStock.TransitStockId], T1.[Stock_TransitStock.TransitType], T1.[Stock_TransitStock.ProductId], T1.[Stock_TransitStock.ProductDimensionId], T1.[Stock_TransitStock.UnitTypeId], T1.[Stock_TransitStock.Quantity], T1.[Stock_TransitStock.Cost], T1.[Stock_TransitStock.Cost1], T1.[Stock_TransitStock.Cost2], T1.[Stock_TransitStock.BatchNo], T1.[Stock_TransitStock.ManufactureDate], T1.[Stock_TransitStock.ExpireDate], T1.[Stock_TransitStock.ReferenceNo], T1.[Stock_TransitStock.ReferenceDate], T1.[Stock_TransitStock.GoodsReceiveId], T1.[Stock_TransitStock.ImportedStockInId], T1.[Stock_TransitStock.SupplierId], T1.[Stock_TransitStock.LocationId], T1.[Stock_TransitStock.WareHouseId], T1.[Stock_TransitStock.CompanyId], T1.[Stock_TransitStock.EntryDate])
    FROM (
        SELECT 
            T.TransitStockId AS [Stock_TransitStock.TransitStockId], 
            T.TransitType AS [Stock_TransitStock.TransitType], 
            T.ProductId AS [Stock_TransitStock.ProductId], 
            T.ProductDimensionId AS [Stock_TransitStock.ProductDimensionId], 
            T.UnitTypeId AS [Stock_TransitStock.UnitTypeId], 
            T.Quantity AS [Stock_TransitStock.Quantity], 
            T.Cost AS [Stock_TransitStock.Cost], 
            T.Cost1 AS [Stock_TransitStock.Cost1], 
            T.Cost2 AS [Stock_TransitStock.Cost2], 
            T.BatchNo AS [Stock_TransitStock.BatchNo], 
            T.ManufactureDate AS [Stock_TransitStock.ManufactureDate], 
            T.ExpireDate AS [Stock_TransitStock.ExpireDate], 
            T.ReferenceNo AS [Stock_TransitStock.ReferenceNo], 
            T.ReferenceDate AS [Stock_TransitStock.ReferenceDate], 
            T.GoodsReceiveId AS [Stock_TransitStock.GoodsReceiveId], 
            T.ImportedStockInId AS [Stock_TransitStock.ImportedStockInId], 
            T.SupplierId AS [Stock_TransitStock.SupplierId], 
            T.LocationId AS [Stock_TransitStock.LocationId], 
            T.WareHouseId AS [Stock_TransitStock.WareHouseId], 
            T.CompanyId AS [Stock_TransitStock.CompanyId], 
            T.EntryDate AS [Stock_TransitStock.EntryDate], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Stock_TransitStock AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Stock_TransitStockSerial.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView320()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Stock_TransitStockSerial
        [BTS_OPSModel.Stock_TransitStockSerial](T1.[Stock_TransitStockSerial.TransitStockSerialId], T1.[Stock_TransitStockSerial.TransitStockId], T1.[Stock_TransitStockSerial.Serial], T1.[Stock_TransitStockSerial.AdditionalSerial])
    FROM (
        SELECT 
            T.TransitStockSerialId AS [Stock_TransitStockSerial.TransitStockSerialId], 
            T.TransitStockId AS [Stock_TransitStockSerial.TransitStockId], 
            T.Serial AS [Stock_TransitStockSerial.Serial], 
            T.AdditionalSerial AS [Stock_TransitStockSerial.AdditionalSerial], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Stock_TransitStockSerial AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_ChequeInfo.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView321()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_ChequeInfo
        [BTS_OPSModel.Task_ChequeInfo](T1.[Task_ChequeInfo.ChequeInfoId], T1.[Task_ChequeInfo.CollectionDetailId], T1.[Task_ChequeInfo.EntryVoucherId], T1.[Task_ChequeInfo.BankId], T1.[Task_ChequeInfo.ChequeNo], T1.[Task_ChequeInfo.ChequeDate], T1.[Task_ChequeInfo.Amount], T1.[Task_ChequeInfo.Amount1], T1.[Task_ChequeInfo.Amount2], T1.[Task_ChequeInfo.Status], T1.[Task_ChequeInfo.StatusDate], T1.[Task_ChequeInfo.PaymentDetailId], T1.[Task_ChequeInfo.LocationId], T1.[Task_ChequeInfo.CompanyId], T1.[Task_ChequeInfo.EntryBy], T1.[Task_ChequeInfo.EntryDate])
    FROM (
        SELECT 
            T.ChequeInfoId AS [Task_ChequeInfo.ChequeInfoId], 
            T.CollectionDetailId AS [Task_ChequeInfo.CollectionDetailId], 
            T.EntryVoucherId AS [Task_ChequeInfo.EntryVoucherId], 
            T.BankId AS [Task_ChequeInfo.BankId], 
            T.ChequeNo AS [Task_ChequeInfo.ChequeNo], 
            T.ChequeDate AS [Task_ChequeInfo.ChequeDate], 
            T.Amount AS [Task_ChequeInfo.Amount], 
            T.Amount1 AS [Task_ChequeInfo.Amount1], 
            T.Amount2 AS [Task_ChequeInfo.Amount2], 
            T.Status AS [Task_ChequeInfo.Status], 
            T.StatusDate AS [Task_ChequeInfo.StatusDate], 
            T.PaymentDetailId AS [Task_ChequeInfo.PaymentDetailId], 
            T.LocationId AS [Task_ChequeInfo.LocationId], 
            T.CompanyId AS [Task_ChequeInfo.CompanyId], 
            T.EntryBy AS [Task_ChequeInfo.EntryBy], 
            T.EntryDate AS [Task_ChequeInfo.EntryDate], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_ChequeInfo AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_ChequeTreatment.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView322()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_ChequeTreatment
        [BTS_OPSModel.Task_ChequeTreatment](T1.[Task_ChequeTreatment.TreatmentId], T1.[Task_ChequeTreatment.ChequeInfoId], T1.[Task_ChequeTreatment.Status], T1.[Task_ChequeTreatment.StatusDate], T1.[Task_ChequeTreatment.TreatmentBankId], T1.[Task_ChequeTreatment.VoucherId], T1.[Task_ChequeTreatment.EntryBy], T1.[Task_ChequeTreatment.EntryDate])
    FROM (
        SELECT 
            T.TreatmentId AS [Task_ChequeTreatment.TreatmentId], 
            T.ChequeInfoId AS [Task_ChequeTreatment.ChequeInfoId], 
            T.Status AS [Task_ChequeTreatment.Status], 
            T.StatusDate AS [Task_ChequeTreatment.StatusDate], 
            T.TreatmentBankId AS [Task_ChequeTreatment.TreatmentBankId], 
            T.VoucherId AS [Task_ChequeTreatment.VoucherId], 
            T.EntryBy AS [Task_ChequeTreatment.EntryBy], 
            T.EntryDate AS [Task_ChequeTreatment.EntryDate], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_ChequeTreatment AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_Collection.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView323()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_Collection
        [BTS_OPSModel.Task_Collection](T1.[Task_Collection.CollectionId], T1.[Task_Collection.CollectionNo], T1.[Task_Collection.CollectionDate], T1.[Task_Collection.CollectionAgainst], T1.[Task_Collection.CustomerId], T1.[Task_Collection.SalesPersonId], T1.[Task_Collection.SelectedCurrency], T1.[Task_Collection.Currency1Rate], T1.[Task_Collection.Currency2Rate], T1.[Task_Collection.CollectedAmount], T1.[Task_Collection.CollectedAmount1], T1.[Task_Collection.CollectedAmount2], T1.[Task_Collection.SecurityDeposit], T1.[Task_Collection.SecurityDeposit1], T1.[Task_Collection.SecurityDeposit2], T1.[Task_Collection.RecoveryDate], T1.[Task_Collection.OthersAdjustment], T1.[Task_Collection.OthersAdjustment1], T1.[Task_Collection.OthersAdjustment2], T1.[Task_Collection.CollectedBy], T1.[Task_Collection.MRNo], T1.[Task_Collection.Remarks], T1.[Task_Collection.OperationTypeId], T1.[Task_Collection.OperationalEventId], T1.[Task_Collection.Approved], T1.[Task_Collection.ApprovedBy], T1.[Task_Collection.ApprovedDate], T1.[Task_Collection.CancelReason], T1.[Task_Collection.VoucherId], T1.[Task_Collection.LocationId], T1.[Task_Collection.CompanyId], T1.[Task_Collection.EntryBy], T1.[Task_Collection.EntryDate], T1.[Task_Collection.EditedBy], T1.[Task_Collection.EditedDate])
    FROM (
        SELECT 
            T.CollectionId AS [Task_Collection.CollectionId], 
            T.CollectionNo AS [Task_Collection.CollectionNo], 
            T.CollectionDate AS [Task_Collection.CollectionDate], 
            T.CollectionAgainst AS [Task_Collection.CollectionAgainst], 
            T.CustomerId AS [Task_Collection.CustomerId], 
            T.SalesPersonId AS [Task_Collection.SalesPersonId], 
            T.SelectedCurrency AS [Task_Collection.SelectedCurrency], 
            T.Currency1Rate AS [Task_Collection.Currency1Rate], 
            T.Currency2Rate AS [Task_Collection.Currency2Rate], 
            T.CollectedAmount AS [Task_Collection.CollectedAmount], 
            T.CollectedAmount1 AS [Task_Collection.CollectedAmount1], 
            T.CollectedAmount2 AS [Task_Collection.CollectedAmount2], 
            T.SecurityDeposit AS [Task_Collection.SecurityDeposit], 
            T.SecurityDeposit1 AS [Task_Collection.SecurityDeposit1], 
            T.SecurityDeposit2 AS [Task_Collection.SecurityDeposit2], 
            T.RecoveryDate AS [Task_Collection.RecoveryDate], 
            T.OthersAdjustment AS [Task_Collection.OthersAdjustment], 
            T.OthersAdjustment1 AS [Task_Collection.OthersAdjustment1], 
            T.OthersAdjustment2 AS [Task_Collection.OthersAdjustment2], 
            T.CollectedBy AS [Task_Collection.CollectedBy], 
            T.MRNo AS [Task_Collection.MRNo], 
            T.Remarks AS [Task_Collection.Remarks], 
            T.OperationTypeId AS [Task_Collection.OperationTypeId], 
            T.OperationalEventId AS [Task_Collection.OperationalEventId], 
            T.Approved AS [Task_Collection.Approved], 
            T.ApprovedBy AS [Task_Collection.ApprovedBy], 
            T.ApprovedDate AS [Task_Collection.ApprovedDate], 
            T.CancelReason AS [Task_Collection.CancelReason], 
            T.VoucherId AS [Task_Collection.VoucherId], 
            T.LocationId AS [Task_Collection.LocationId], 
            T.CompanyId AS [Task_Collection.CompanyId], 
            T.EntryBy AS [Task_Collection.EntryBy], 
            T.EntryDate AS [Task_Collection.EntryDate], 
            T.EditedBy AS [Task_Collection.EditedBy], 
            T.EditedDate AS [Task_Collection.EditedDate], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_Collection AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_Collection_GovtDutyAdjustment.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView324()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_Collection_GovtDutyAdjustment
        [BTS_OPSModel.Task_Collection_GovtDutyAdjustment](T1.[Task_Collection_GovtDutyAdjustment.CollectionAdjustmentId], T1.[Task_Collection_GovtDutyAdjustment.CollectionId], T1.[Task_Collection_GovtDutyAdjustment.GovtDutyAdjustmentId], T1.[Task_Collection_GovtDutyAdjustment.Amount], T1.[Task_Collection_GovtDutyAdjustment.Amount1], T1.[Task_Collection_GovtDutyAdjustment.Amount2])
    FROM (
        SELECT 
            T.CollectionAdjustmentId AS [Task_Collection_GovtDutyAdjustment.CollectionAdjustmentId], 
            T.CollectionId AS [Task_Collection_GovtDutyAdjustment.CollectionId], 
            T.GovtDutyAdjustmentId AS [Task_Collection_GovtDutyAdjustment.GovtDutyAdjustmentId], 
            T.Amount AS [Task_Collection_GovtDutyAdjustment.Amount], 
            T.Amount1 AS [Task_Collection_GovtDutyAdjustment.Amount1], 
            T.Amount2 AS [Task_Collection_GovtDutyAdjustment.Amount2], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_Collection_GovtDutyAdjustment AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_CollectionDetail.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView325()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_CollectionDetail
        [BTS_OPSModel.Task_CollectionDetail](T1.[Task_CollectionDetail.CollectionDetailId], T1.[Task_CollectionDetail.CollectionId], T1.[Task_CollectionDetail.PaymentModeId], T1.[Task_CollectionDetail.Amount], T1.[Task_CollectionDetail.Amount1], T1.[Task_CollectionDetail.Amount2], T1.[Task_CollectionDetail.VoucherId])
    FROM (
        SELECT 
            T.CollectionDetailId AS [Task_CollectionDetail.CollectionDetailId], 
            T.CollectionId AS [Task_CollectionDetail.CollectionId], 
            T.PaymentModeId AS [Task_CollectionDetail.PaymentModeId], 
            T.Amount AS [Task_CollectionDetail.Amount], 
            T.Amount1 AS [Task_CollectionDetail.Amount1], 
            T.Amount2 AS [Task_CollectionDetail.Amount2], 
            T.VoucherId AS [Task_CollectionDetail.VoucherId], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_CollectionDetail AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_CollectionMapping.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView326()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_CollectionMapping
        [BTS_OPSModel.Task_CollectionMapping](T1.[Task_CollectionMapping.MappingId], T1.[Task_CollectionMapping.CollectionId], T1.[Task_CollectionMapping.SalesOrderId], T1.[Task_CollectionMapping.InvoiceId], T1.[Task_CollectionMapping.Amount], T1.[Task_CollectionMapping.Amount1], T1.[Task_CollectionMapping.Amount2])
    FROM (
        SELECT 
            T.MappingId AS [Task_CollectionMapping.MappingId], 
            T.CollectionId AS [Task_CollectionMapping.CollectionId], 
            T.SalesOrderId AS [Task_CollectionMapping.SalesOrderId], 
            T.InvoiceId AS [Task_CollectionMapping.InvoiceId], 
            T.Amount AS [Task_CollectionMapping.Amount], 
            T.Amount1 AS [Task_CollectionMapping.Amount1], 
            T.Amount2 AS [Task_CollectionMapping.Amount2], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_CollectionMapping AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_CollectionNos.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView327()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_CollectionNos
        [BTS_OPSModel.Task_CollectionNos](T1.[Task_CollectionNos.Id], T1.[Task_CollectionNos.CollectionNo], T1.[Task_CollectionNos.Year], T1.[Task_CollectionNos.CompanyId])
    FROM (
        SELECT 
            T.Id AS [Task_CollectionNos.Id], 
            T.CollectionNo AS [Task_CollectionNos.CollectionNo], 
            T.Year AS [Task_CollectionNos.Year], 
            T.CompanyId AS [Task_CollectionNos.CompanyId], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_CollectionNos AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_ComplainReceive.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView328()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_ComplainReceive
        [BTS_OPSModel.Task_ComplainReceive](T1.[Task_ComplainReceive.ReceiveId], T1.[Task_ComplainReceive.ReceiveNo], T1.[Task_ComplainReceive.ReceiveDate], T1.[Task_ComplainReceive.SelectedCurrency], T1.[Task_ComplainReceive.Currency1Rate], T1.[Task_ComplainReceive.Currency2Rate], T1.[Task_ComplainReceive.AgainstPreviousSales], T1.[Task_ComplainReceive.CustomerId], T1.[Task_ComplainReceive.RequestedBy], T1.[Task_ComplainReceive.TotalChargeAmount], T1.[Task_ComplainReceive.TotalCharge1Amount], T1.[Task_ComplainReceive.TotalCharge2Amount], T1.[Task_ComplainReceive.Remarks], T1.[Task_ComplainReceive.Approved], T1.[Task_ComplainReceive.ApprovedBy], T1.[Task_ComplainReceive.ApprovedDate], T1.[Task_ComplainReceive.CancelReason], T1.[Task_ComplainReceive.LocationId], T1.[Task_ComplainReceive.CompanyId], T1.[Task_ComplainReceive.EntryBy], T1.[Task_ComplainReceive.EntryDate])
    FROM (
        SELECT 
            T.ReceiveId AS [Task_ComplainReceive.ReceiveId], 
            T.ReceiveNo AS [Task_ComplainReceive.ReceiveNo], 
            T.ReceiveDate AS [Task_ComplainReceive.ReceiveDate], 
            T.SelectedCurrency AS [Task_ComplainReceive.SelectedCurrency], 
            T.Currency1Rate AS [Task_ComplainReceive.Currency1Rate], 
            T.Currency2Rate AS [Task_ComplainReceive.Currency2Rate], 
            T.AgainstPreviousSales AS [Task_ComplainReceive.AgainstPreviousSales], 
            T.CustomerId AS [Task_ComplainReceive.CustomerId], 
            T.RequestedBy AS [Task_ComplainReceive.RequestedBy], 
            T.TotalChargeAmount AS [Task_ComplainReceive.TotalChargeAmount], 
            T.TotalCharge1Amount AS [Task_ComplainReceive.TotalCharge1Amount], 
            T.TotalCharge2Amount AS [Task_ComplainReceive.TotalCharge2Amount], 
            T.Remarks AS [Task_ComplainReceive.Remarks], 
            T.Approved AS [Task_ComplainReceive.Approved], 
            T.ApprovedBy AS [Task_ComplainReceive.ApprovedBy], 
            T.ApprovedDate AS [Task_ComplainReceive.ApprovedDate], 
            T.CancelReason AS [Task_ComplainReceive.CancelReason], 
            T.LocationId AS [Task_ComplainReceive.LocationId], 
            T.CompanyId AS [Task_ComplainReceive.CompanyId], 
            T.EntryBy AS [Task_ComplainReceive.EntryBy], 
            T.EntryDate AS [Task_ComplainReceive.EntryDate], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_ComplainReceive AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_ComplainReceive_Charge.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView329()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_ComplainReceive_Charge
        [BTS_OPSModel.Task_ComplainReceive_Charge](T1.[Task_ComplainReceive_Charge.ReceiveChargeId], T1.[Task_ComplainReceive_Charge.ReceiveId], T1.[Task_ComplainReceive_Charge.ChargeEventId], T1.[Task_ComplainReceive_Charge.ChargeAmount], T1.[Task_ComplainReceive_Charge.Charge1Amount], T1.[Task_ComplainReceive_Charge.Charge2Amount])
    FROM (
        SELECT 
            T.ReceiveChargeId AS [Task_ComplainReceive_Charge.ReceiveChargeId], 
            T.ReceiveId AS [Task_ComplainReceive_Charge.ReceiveId], 
            T.ChargeEventId AS [Task_ComplainReceive_Charge.ChargeEventId], 
            T.ChargeAmount AS [Task_ComplainReceive_Charge.ChargeAmount], 
            T.Charge1Amount AS [Task_ComplainReceive_Charge.Charge1Amount], 
            T.Charge2Amount AS [Task_ComplainReceive_Charge.Charge2Amount], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_ComplainReceive_Charge AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_ComplainReceiveDetail.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView330()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_ComplainReceiveDetail
        [BTS_OPSModel.Task_ComplainReceiveDetail](T1.[Task_ComplainReceiveDetail.ReceiveDetailId], T1.[Task_ComplainReceiveDetail.ReceiveId], T1.[Task_ComplainReceiveDetail.InvoiceId], T1.[Task_ComplainReceiveDetail.ProductId], T1.[Task_ComplainReceiveDetail.ProductDimensionId], T1.[Task_ComplainReceiveDetail.UnitTypeId], T1.[Task_ComplainReceiveDetail.Serial], T1.[Task_ComplainReceiveDetail.AdditionalSerial], T1.[Task_ComplainReceiveDetail.IsWarrantyAvailable], T1.[Task_ComplainReceiveDetail.IsServiceWarranty], T1.[Task_ComplainReceiveDetail.IsOnlyService], T1.[Task_ComplainReceiveDetail.Cost], T1.[Task_ComplainReceiveDetail.Cost1], T1.[Task_ComplainReceiveDetail.Cost2], T1.[Task_ComplainReceiveDetail.Remarks], T1.[Task_ComplainReceiveDetail.TotalSpareAmount], T1.[Task_ComplainReceiveDetail.TotalSpareAmount1], T1.[Task_ComplainReceiveDetail.TotalSpareAmount2], T1.[Task_ComplainReceiveDetail.TotalSpareDiscount], T1.[Task_ComplainReceiveDetail.TotalSpareDiscount1], T1.[Task_ComplainReceiveDetail.TotalSpareDiscount2], T1.[Task_ComplainReceiveDetail.TotalServiceAmount], T1.[Task_ComplainReceiveDetail.TotalServiceAmount1], T1.[Task_ComplainReceiveDetail.TotalServiceAmount2], T1.[Task_ComplainReceiveDetail.TotalServiceDiscount], T1.[Task_ComplainReceiveDetail.TotalServiceDiscount1], T1.[Task_ComplainReceiveDetail.TotalServiceDiscount2])
    FROM (
        SELECT 
            T.ReceiveDetailId AS [Task_ComplainReceiveDetail.ReceiveDetailId], 
            T.ReceiveId AS [Task_ComplainReceiveDetail.ReceiveId], 
            T.InvoiceId AS [Task_ComplainReceiveDetail.InvoiceId], 
            T.ProductId AS [Task_ComplainReceiveDetail.ProductId], 
            T.ProductDimensionId AS [Task_ComplainReceiveDetail.ProductDimensionId], 
            T.UnitTypeId AS [Task_ComplainReceiveDetail.UnitTypeId], 
            T.Serial AS [Task_ComplainReceiveDetail.Serial], 
            T.AdditionalSerial AS [Task_ComplainReceiveDetail.AdditionalSerial], 
            T.IsWarrantyAvailable AS [Task_ComplainReceiveDetail.IsWarrantyAvailable], 
            T.IsServiceWarranty AS [Task_ComplainReceiveDetail.IsServiceWarranty], 
            T.IsOnlyService AS [Task_ComplainReceiveDetail.IsOnlyService], 
            T.Cost AS [Task_ComplainReceiveDetail.Cost], 
            T.Cost1 AS [Task_ComplainReceiveDetail.Cost1], 
            T.Cost2 AS [Task_ComplainReceiveDetail.Cost2], 
            T.Remarks AS [Task_ComplainReceiveDetail.Remarks], 
            T.TotalSpareAmount AS [Task_ComplainReceiveDetail.TotalSpareAmount], 
            T.TotalSpareAmount1 AS [Task_ComplainReceiveDetail.TotalSpareAmount1], 
            T.TotalSpareAmount2 AS [Task_ComplainReceiveDetail.TotalSpareAmount2], 
            T.TotalSpareDiscount AS [Task_ComplainReceiveDetail.TotalSpareDiscount], 
            T.TotalSpareDiscount1 AS [Task_ComplainReceiveDetail.TotalSpareDiscount1], 
            T.TotalSpareDiscount2 AS [Task_ComplainReceiveDetail.TotalSpareDiscount2], 
            T.TotalServiceAmount AS [Task_ComplainReceiveDetail.TotalServiceAmount], 
            T.TotalServiceAmount1 AS [Task_ComplainReceiveDetail.TotalServiceAmount1], 
            T.TotalServiceAmount2 AS [Task_ComplainReceiveDetail.TotalServiceAmount2], 
            T.TotalServiceDiscount AS [Task_ComplainReceiveDetail.TotalServiceDiscount], 
            T.TotalServiceDiscount1 AS [Task_ComplainReceiveDetail.TotalServiceDiscount1], 
            T.TotalServiceDiscount2 AS [Task_ComplainReceiveDetail.TotalServiceDiscount2], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_ComplainReceiveDetail AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_ComplainReceiveDetail_Problem.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView331()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_ComplainReceiveDetail_Problem
        [BTS_OPSModel.Task_ComplainReceiveDetail_Problem](T1.[Task_ComplainReceiveDetail_Problem.ReceiveDetailProblemId], T1.[Task_ComplainReceiveDetail_Problem.ReceiveDetailId], T1.[Task_ComplainReceiveDetail_Problem.ProblemId], T1.[Task_ComplainReceiveDetail_Problem.Note])
    FROM (
        SELECT 
            T.ReceiveDetailProblemId AS [Task_ComplainReceiveDetail_Problem.ReceiveDetailProblemId], 
            T.ReceiveDetailId AS [Task_ComplainReceiveDetail_Problem.ReceiveDetailId], 
            T.ProblemId AS [Task_ComplainReceiveDetail_Problem.ProblemId], 
            T.Note AS [Task_ComplainReceiveDetail_Problem.Note], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_ComplainReceiveDetail_Problem AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_ComplainReceiveDetail_SpareProduct.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView332()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_ComplainReceiveDetail_SpareProduct
        [BTS_OPSModel.Task_ComplainReceiveDetail_SpareProduct](T1.[Task_ComplainReceiveDetail_SpareProduct.ReceiveDetailSpareId], T1.[Task_ComplainReceiveDetail_SpareProduct.ReceiveDetailId], T1.[Task_ComplainReceiveDetail_SpareProduct.ProductId], T1.[Task_ComplainReceiveDetail_SpareProduct.ProductDimensionId], T1.[Task_ComplainReceiveDetail_SpareProduct.UnitTypeId], T1.[Task_ComplainReceiveDetail_SpareProduct.Quantity], T1.[Task_ComplainReceiveDetail_SpareProduct.Price], T1.[Task_ComplainReceiveDetail_SpareProduct.Price1], T1.[Task_ComplainReceiveDetail_SpareProduct.Price2], T1.[Task_ComplainReceiveDetail_SpareProduct.Discount], T1.[Task_ComplainReceiveDetail_SpareProduct.Discount1], T1.[Task_ComplainReceiveDetail_SpareProduct.Discount2])
    FROM (
        SELECT 
            T.ReceiveDetailSpareId AS [Task_ComplainReceiveDetail_SpareProduct.ReceiveDetailSpareId], 
            T.ReceiveDetailId AS [Task_ComplainReceiveDetail_SpareProduct.ReceiveDetailId], 
            T.ProductId AS [Task_ComplainReceiveDetail_SpareProduct.ProductId], 
            T.ProductDimensionId AS [Task_ComplainReceiveDetail_SpareProduct.ProductDimensionId], 
            T.UnitTypeId AS [Task_ComplainReceiveDetail_SpareProduct.UnitTypeId], 
            T.Quantity AS [Task_ComplainReceiveDetail_SpareProduct.Quantity], 
            T.Price AS [Task_ComplainReceiveDetail_SpareProduct.Price], 
            T.Price1 AS [Task_ComplainReceiveDetail_SpareProduct.Price1], 
            T.Price2 AS [Task_ComplainReceiveDetail_SpareProduct.Price2], 
            T.Discount AS [Task_ComplainReceiveDetail_SpareProduct.Discount], 
            T.Discount1 AS [Task_ComplainReceiveDetail_SpareProduct.Discount1], 
            T.Discount2 AS [Task_ComplainReceiveDetail_SpareProduct.Discount2], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_ComplainReceiveDetail_SpareProduct AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_ComplainReceiveNos.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView333()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_ComplainReceiveNos
        [BTS_OPSModel.Task_ComplainReceiveNos](T1.[Task_ComplainReceiveNos.Id], T1.[Task_ComplainReceiveNos.ReceiveNo], T1.[Task_ComplainReceiveNos.Year], T1.[Task_ComplainReceiveNos.CompanyId])
    FROM (
        SELECT 
            T.Id AS [Task_ComplainReceiveNos.Id], 
            T.ReceiveNo AS [Task_ComplainReceiveNos.ReceiveNo], 
            T.Year AS [Task_ComplainReceiveNos.Year], 
            T.CompanyId AS [Task_ComplainReceiveNos.CompanyId], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_ComplainReceiveNos AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_Convertion.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView334()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_Convertion
        [BTS_OPSModel.Task_Convertion](T1.[Task_Convertion.ConvertionId], T1.[Task_Convertion.ConvertionNo], T1.[Task_Convertion.ConvertionDate], T1.[Task_Convertion.ConvertionType], T1.[Task_Convertion.ConvertionFor], T1.[Task_Convertion.ConvertionRatioId], T1.[Task_Convertion.Remarks], T1.[Task_Convertion.Approved], T1.[Task_Convertion.ApprovedBy], T1.[Task_Convertion.ApprovedDate], T1.[Task_Convertion.CancelReason], T1.[Task_Convertion.LocationId], T1.[Task_Convertion.CompanyId], T1.[Task_Convertion.EntryBy], T1.[Task_Convertion.EntryDate])
    FROM (
        SELECT 
            T.ConvertionId AS [Task_Convertion.ConvertionId], 
            T.ConvertionNo AS [Task_Convertion.ConvertionNo], 
            T.ConvertionDate AS [Task_Convertion.ConvertionDate], 
            T.ConvertionType AS [Task_Convertion.ConvertionType], 
            T.ConvertionFor AS [Task_Convertion.ConvertionFor], 
            T.ConvertionRatioId AS [Task_Convertion.ConvertionRatioId], 
            T.Remarks AS [Task_Convertion.Remarks], 
            T.Approved AS [Task_Convertion.Approved], 
            T.ApprovedBy AS [Task_Convertion.ApprovedBy], 
            T.ApprovedDate AS [Task_Convertion.ApprovedDate], 
            T.CancelReason AS [Task_Convertion.CancelReason], 
            T.LocationId AS [Task_Convertion.LocationId], 
            T.CompanyId AS [Task_Convertion.CompanyId], 
            T.EntryBy AS [Task_Convertion.EntryBy], 
            T.EntryDate AS [Task_Convertion.EntryDate], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_Convertion AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_ConvertionDetail.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView335()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_ConvertionDetail
        [BTS_OPSModel.Task_ConvertionDetail](T1.[Task_ConvertionDetail.ConvertionDetailId], T1.[Task_ConvertionDetail.ConvertionId], T1.[Task_ConvertionDetail.ProductFor], T1.[Task_ConvertionDetail.ProductId], T1.[Task_ConvertionDetail.ProductDimensionId], T1.[Task_ConvertionDetail.UnitTypeId], T1.[Task_ConvertionDetail.WareHouseId], T1.[Task_ConvertionDetail.Quantity], T1.[Task_ConvertionDetail.Cost], T1.[Task_ConvertionDetail.Cost1], T1.[Task_ConvertionDetail.Cost2], T1.[Task_ConvertionDetail.PrimaryUnitTypeId], T1.[Task_ConvertionDetail.SecondaryUnitTypeId], T1.[Task_ConvertionDetail.TertiaryUnitTypeId], T1.[Task_ConvertionDetail.SecondaryConversionRatio], T1.[Task_ConvertionDetail.TertiaryConversionRatio], T1.[Task_ConvertionDetail.ReferenceNo], T1.[Task_ConvertionDetail.ReferenceDate], T1.[Task_ConvertionDetail.GoodsReceiveId], T1.[Task_ConvertionDetail.ImportedStockInId], T1.[Task_ConvertionDetail.SupplierId])
    FROM (
        SELECT 
            T.ConvertionDetailId AS [Task_ConvertionDetail.ConvertionDetailId], 
            T.ConvertionId AS [Task_ConvertionDetail.ConvertionId], 
            T.ProductFor AS [Task_ConvertionDetail.ProductFor], 
            T.ProductId AS [Task_ConvertionDetail.ProductId], 
            T.ProductDimensionId AS [Task_ConvertionDetail.ProductDimensionId], 
            T.UnitTypeId AS [Task_ConvertionDetail.UnitTypeId], 
            T.WareHouseId AS [Task_ConvertionDetail.WareHouseId], 
            T.Quantity AS [Task_ConvertionDetail.Quantity], 
            T.Cost AS [Task_ConvertionDetail.Cost], 
            T.Cost1 AS [Task_ConvertionDetail.Cost1], 
            T.Cost2 AS [Task_ConvertionDetail.Cost2], 
            T.PrimaryUnitTypeId AS [Task_ConvertionDetail.PrimaryUnitTypeId], 
            T.SecondaryUnitTypeId AS [Task_ConvertionDetail.SecondaryUnitTypeId], 
            T.TertiaryUnitTypeId AS [Task_ConvertionDetail.TertiaryUnitTypeId], 
            T.SecondaryConversionRatio AS [Task_ConvertionDetail.SecondaryConversionRatio], 
            T.TertiaryConversionRatio AS [Task_ConvertionDetail.TertiaryConversionRatio], 
            T.ReferenceNo AS [Task_ConvertionDetail.ReferenceNo], 
            T.ReferenceDate AS [Task_ConvertionDetail.ReferenceDate], 
            T.GoodsReceiveId AS [Task_ConvertionDetail.GoodsReceiveId], 
            T.ImportedStockInId AS [Task_ConvertionDetail.ImportedStockInId], 
            T.SupplierId AS [Task_ConvertionDetail.SupplierId], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_ConvertionDetail AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_ConvertionDetailSerial.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView336()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_ConvertionDetailSerial
        [BTS_OPSModel.Task_ConvertionDetailSerial](T1.[Task_ConvertionDetailSerial.ConvertionDetailSerialId], T1.[Task_ConvertionDetailSerial.ConvertionDetailId], T1.[Task_ConvertionDetailSerial.Serial], T1.[Task_ConvertionDetailSerial.AdditionalSerial])
    FROM (
        SELECT 
            T.ConvertionDetailSerialId AS [Task_ConvertionDetailSerial.ConvertionDetailSerialId], 
            T.ConvertionDetailId AS [Task_ConvertionDetailSerial.ConvertionDetailId], 
            T.Serial AS [Task_ConvertionDetailSerial.Serial], 
            T.AdditionalSerial AS [Task_ConvertionDetailSerial.AdditionalSerial], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_ConvertionDetailSerial AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_ConvertionNos.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView337()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_ConvertionNos
        [BTS_OPSModel.Task_ConvertionNos](T1.[Task_ConvertionNos.Id], T1.[Task_ConvertionNos.ConvertionNo], T1.[Task_ConvertionNos.Year], T1.[Task_ConvertionNos.CompanyId])
    FROM (
        SELECT 
            T.Id AS [Task_ConvertionNos.Id], 
            T.ConvertionNo AS [Task_ConvertionNos.ConvertionNo], 
            T.Year AS [Task_ConvertionNos.Year], 
            T.CompanyId AS [Task_ConvertionNos.CompanyId], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_ConvertionNos AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_CustomerDelivery.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView338()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_CustomerDelivery
        [BTS_OPSModel.Task_CustomerDelivery](T1.[Task_CustomerDelivery.DeliveryId], T1.[Task_CustomerDelivery.DeliveryNo], T1.[Task_CustomerDelivery.DeliveryDate], T1.[Task_CustomerDelivery.SelectedCurrency], T1.[Task_CustomerDelivery.Currency1Rate], T1.[Task_CustomerDelivery.Currency2Rate], T1.[Task_CustomerDelivery.CustomerId], T1.[Task_CustomerDelivery.TotalAmount], T1.[Task_CustomerDelivery.TotalAmount1], T1.[Task_CustomerDelivery.TotalAmount2], T1.[Task_CustomerDelivery.TotalChargeAmount], T1.[Task_CustomerDelivery.TotalChargeAmount1], T1.[Task_CustomerDelivery.TotalChargeAmount2], T1.[Task_CustomerDelivery.Discount], T1.[Task_CustomerDelivery.Discount1], T1.[Task_CustomerDelivery.Discount2], T1.[Task_CustomerDelivery.RequestedBy], T1.[Task_CustomerDelivery.Approved], T1.[Task_CustomerDelivery.ApprovedBy], T1.[Task_CustomerDelivery.ApprovedDate], T1.[Task_CustomerDelivery.CancelReason], T1.[Task_CustomerDelivery.Remarks], T1.[Task_CustomerDelivery.VoucherId], T1.[Task_CustomerDelivery.LocationId], T1.[Task_CustomerDelivery.CompanyId], T1.[Task_CustomerDelivery.EntryBy], T1.[Task_CustomerDelivery.EntryDate])
    FROM (
        SELECT 
            T.DeliveryId AS [Task_CustomerDelivery.DeliveryId], 
            T.DeliveryNo AS [Task_CustomerDelivery.DeliveryNo], 
            T.DeliveryDate AS [Task_CustomerDelivery.DeliveryDate], 
            T.SelectedCurrency AS [Task_CustomerDelivery.SelectedCurrency], 
            T.Currency1Rate AS [Task_CustomerDelivery.Currency1Rate], 
            T.Currency2Rate AS [Task_CustomerDelivery.Currency2Rate], 
            T.CustomerId AS [Task_CustomerDelivery.CustomerId], 
            T.TotalAmount AS [Task_CustomerDelivery.TotalAmount], 
            T.TotalAmount1 AS [Task_CustomerDelivery.TotalAmount1], 
            T.TotalAmount2 AS [Task_CustomerDelivery.TotalAmount2], 
            T.TotalChargeAmount AS [Task_CustomerDelivery.TotalChargeAmount], 
            T.TotalChargeAmount1 AS [Task_CustomerDelivery.TotalChargeAmount1], 
            T.TotalChargeAmount2 AS [Task_CustomerDelivery.TotalChargeAmount2], 
            T.Discount AS [Task_CustomerDelivery.Discount], 
            T.Discount1 AS [Task_CustomerDelivery.Discount1], 
            T.Discount2 AS [Task_CustomerDelivery.Discount2], 
            T.RequestedBy AS [Task_CustomerDelivery.RequestedBy], 
            T.Approved AS [Task_CustomerDelivery.Approved], 
            T.ApprovedBy AS [Task_CustomerDelivery.ApprovedBy], 
            T.ApprovedDate AS [Task_CustomerDelivery.ApprovedDate], 
            T.CancelReason AS [Task_CustomerDelivery.CancelReason], 
            T.Remarks AS [Task_CustomerDelivery.Remarks], 
            T.VoucherId AS [Task_CustomerDelivery.VoucherId], 
            T.LocationId AS [Task_CustomerDelivery.LocationId], 
            T.CompanyId AS [Task_CustomerDelivery.CompanyId], 
            T.EntryBy AS [Task_CustomerDelivery.EntryBy], 
            T.EntryDate AS [Task_CustomerDelivery.EntryDate], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_CustomerDelivery AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_CustomerDelivery_Charge.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView339()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_CustomerDelivery_Charge
        [BTS_OPSModel.Task_CustomerDelivery_Charge](T1.[Task_CustomerDelivery_Charge.DeliveryChargeId], T1.[Task_CustomerDelivery_Charge.DeliveryId], T1.[Task_CustomerDelivery_Charge.ChargeEventId], T1.[Task_CustomerDelivery_Charge.ChargeAmount], T1.[Task_CustomerDelivery_Charge.Charge1Amount], T1.[Task_CustomerDelivery_Charge.Charge2Amount])
    FROM (
        SELECT 
            T.DeliveryChargeId AS [Task_CustomerDelivery_Charge.DeliveryChargeId], 
            T.DeliveryId AS [Task_CustomerDelivery_Charge.DeliveryId], 
            T.ChargeEventId AS [Task_CustomerDelivery_Charge.ChargeEventId], 
            T.ChargeAmount AS [Task_CustomerDelivery_Charge.ChargeAmount], 
            T.Charge1Amount AS [Task_CustomerDelivery_Charge.Charge1Amount], 
            T.Charge2Amount AS [Task_CustomerDelivery_Charge.Charge2Amount], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_CustomerDelivery_Charge AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_CustomerDeliveryDetail.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView340()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_CustomerDeliveryDetail
        [BTS_OPSModel.Task_CustomerDeliveryDetail](T1.[Task_CustomerDeliveryDetail.DeliveryDetailId], T1.[Task_CustomerDeliveryDetail.DeliveryId], T1.[Task_CustomerDeliveryDetail.ComplainReceiveId], T1.[Task_CustomerDeliveryDetail.PreviousProductId], T1.[Task_CustomerDeliveryDetail.PreviousProductDimensionId], T1.[Task_CustomerDeliveryDetail.PreviousUnitTypeId], T1.[Task_CustomerDeliveryDetail.PreviousSerial], T1.[Task_CustomerDeliveryDetail.NewProductId], T1.[Task_CustomerDeliveryDetail.NewProductDimensionId], T1.[Task_CustomerDeliveryDetail.NewUnitTypeId], T1.[Task_CustomerDeliveryDetail.NewSerial], T1.[Task_CustomerDeliveryDetail.Cost], T1.[Task_CustomerDeliveryDetail.Cost1], T1.[Task_CustomerDeliveryDetail.Cost2], T1.[Task_CustomerDeliveryDetail.IsAdjustmentRequired], T1.[Task_CustomerDeliveryDetail.AdjustmentType], T1.[Task_CustomerDeliveryDetail.AdjustedAmount], T1.[Task_CustomerDeliveryDetail.AdjustedAmount1], T1.[Task_CustomerDeliveryDetail.AdjustedAmount2], T1.[Task_CustomerDeliveryDetail.DeliveryType], T1.[Task_CustomerDeliveryDetail.TotalSpareAmount], T1.[Task_CustomerDeliveryDetail.TotalSpareAmount1], T1.[Task_CustomerDeliveryDetail.TotalSpareAmount2], T1.[Task_CustomerDeliveryDetail.TotalSpareDiscount], T1.[Task_CustomerDeliveryDetail.TotalSpareDiscount1], T1.[Task_CustomerDeliveryDetail.TotalSpareDiscount2], T1.[Task_CustomerDeliveryDetail.TotalServiceAmount], T1.[Task_CustomerDeliveryDetail.TotalServiceAmount1], T1.[Task_CustomerDeliveryDetail.TotalServiceAmount2], T1.[Task_CustomerDeliveryDetail.TotalServiceDiscount], T1.[Task_CustomerDeliveryDetail.TotalServiceDiscount1], T1.[Task_CustomerDeliveryDetail.TotalServiceDiscount2])
    FROM (
        SELECT 
            T.DeliveryDetailId AS [Task_CustomerDeliveryDetail.DeliveryDetailId], 
            T.DeliveryId AS [Task_CustomerDeliveryDetail.DeliveryId], 
            T.ComplainReceiveId AS [Task_CustomerDeliveryDetail.ComplainReceiveId], 
            T.PreviousProductId AS [Task_CustomerDeliveryDetail.PreviousProductId], 
            T.PreviousProductDimensionId AS [Task_CustomerDeliveryDetail.PreviousProductDimensionId], 
            T.PreviousUnitTypeId AS [Task_CustomerDeliveryDetail.PreviousUnitTypeId], 
            T.PreviousSerial AS [Task_CustomerDeliveryDetail.PreviousSerial], 
            T.NewProductId AS [Task_CustomerDeliveryDetail.NewProductId], 
            T.NewProductDimensionId AS [Task_CustomerDeliveryDetail.NewProductDimensionId], 
            T.NewUnitTypeId AS [Task_CustomerDeliveryDetail.NewUnitTypeId], 
            T.NewSerial AS [Task_CustomerDeliveryDetail.NewSerial], 
            T.Cost AS [Task_CustomerDeliveryDetail.Cost], 
            T.Cost1 AS [Task_CustomerDeliveryDetail.Cost1], 
            T.Cost2 AS [Task_CustomerDeliveryDetail.Cost2], 
            T.IsAdjustmentRequired AS [Task_CustomerDeliveryDetail.IsAdjustmentRequired], 
            T.AdjustmentType AS [Task_CustomerDeliveryDetail.AdjustmentType], 
            T.AdjustedAmount AS [Task_CustomerDeliveryDetail.AdjustedAmount], 
            T.AdjustedAmount1 AS [Task_CustomerDeliveryDetail.AdjustedAmount1], 
            T.AdjustedAmount2 AS [Task_CustomerDeliveryDetail.AdjustedAmount2], 
            T.DeliveryType AS [Task_CustomerDeliveryDetail.DeliveryType], 
            T.TotalSpareAmount AS [Task_CustomerDeliveryDetail.TotalSpareAmount], 
            T.TotalSpareAmount1 AS [Task_CustomerDeliveryDetail.TotalSpareAmount1], 
            T.TotalSpareAmount2 AS [Task_CustomerDeliveryDetail.TotalSpareAmount2], 
            T.TotalSpareDiscount AS [Task_CustomerDeliveryDetail.TotalSpareDiscount], 
            T.TotalSpareDiscount1 AS [Task_CustomerDeliveryDetail.TotalSpareDiscount1], 
            T.TotalSpareDiscount2 AS [Task_CustomerDeliveryDetail.TotalSpareDiscount2], 
            T.TotalServiceAmount AS [Task_CustomerDeliveryDetail.TotalServiceAmount], 
            T.TotalServiceAmount1 AS [Task_CustomerDeliveryDetail.TotalServiceAmount1], 
            T.TotalServiceAmount2 AS [Task_CustomerDeliveryDetail.TotalServiceAmount2], 
            T.TotalServiceDiscount AS [Task_CustomerDeliveryDetail.TotalServiceDiscount], 
            T.TotalServiceDiscount1 AS [Task_CustomerDeliveryDetail.TotalServiceDiscount1], 
            T.TotalServiceDiscount2 AS [Task_CustomerDeliveryDetail.TotalServiceDiscount2], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_CustomerDeliveryDetail AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_CustomerDeliveryDetail_Problem.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView341()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_CustomerDeliveryDetail_Problem
        [BTS_OPSModel.Task_CustomerDeliveryDetail_Problem](T1.[Task_CustomerDeliveryDetail_Problem.DeliveryDetailProblemId], T1.[Task_CustomerDeliveryDetail_Problem.DeliveryDetailId], T1.[Task_CustomerDeliveryDetail_Problem.ProblemId], T1.[Task_CustomerDeliveryDetail_Problem.Note])
    FROM (
        SELECT 
            T.DeliveryDetailProblemId AS [Task_CustomerDeliveryDetail_Problem.DeliveryDetailProblemId], 
            T.DeliveryDetailId AS [Task_CustomerDeliveryDetail_Problem.DeliveryDetailId], 
            T.ProblemId AS [Task_CustomerDeliveryDetail_Problem.ProblemId], 
            T.Note AS [Task_CustomerDeliveryDetail_Problem.Note], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_CustomerDeliveryDetail_Problem AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_CustomerDeliveryDetail_SpareProduct.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView342()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_CustomerDeliveryDetail_SpareProduct
        [BTS_OPSModel.Task_CustomerDeliveryDetail_SpareProduct](T1.[Task_CustomerDeliveryDetail_SpareProduct.DeliveryDetailSpareId], T1.[Task_CustomerDeliveryDetail_SpareProduct.DeliveryDetailId], T1.[Task_CustomerDeliveryDetail_SpareProduct.ProductId], T1.[Task_CustomerDeliveryDetail_SpareProduct.ProductDimensionId], T1.[Task_CustomerDeliveryDetail_SpareProduct.UnitTypeId], T1.[Task_CustomerDeliveryDetail_SpareProduct.Quantity], T1.[Task_CustomerDeliveryDetail_SpareProduct.Price], T1.[Task_CustomerDeliveryDetail_SpareProduct.Price1], T1.[Task_CustomerDeliveryDetail_SpareProduct.Price2], T1.[Task_CustomerDeliveryDetail_SpareProduct.Discount], T1.[Task_CustomerDeliveryDetail_SpareProduct.Discount1], T1.[Task_CustomerDeliveryDetail_SpareProduct.Discount2], T1.[Task_CustomerDeliveryDetail_SpareProduct.Cost], T1.[Task_CustomerDeliveryDetail_SpareProduct.Cost1], T1.[Task_CustomerDeliveryDetail_SpareProduct.Cost2], T1.[Task_CustomerDeliveryDetail_SpareProduct.SpareType], T1.[Task_CustomerDeliveryDetail_SpareProduct.Remarks])
    FROM (
        SELECT 
            T.DeliveryDetailSpareId AS [Task_CustomerDeliveryDetail_SpareProduct.DeliveryDetailSpareId], 
            T.DeliveryDetailId AS [Task_CustomerDeliveryDetail_SpareProduct.DeliveryDetailId], 
            T.ProductId AS [Task_CustomerDeliveryDetail_SpareProduct.ProductId], 
            T.ProductDimensionId AS [Task_CustomerDeliveryDetail_SpareProduct.ProductDimensionId], 
            T.UnitTypeId AS [Task_CustomerDeliveryDetail_SpareProduct.UnitTypeId], 
            T.Quantity AS [Task_CustomerDeliveryDetail_SpareProduct.Quantity], 
            T.Price AS [Task_CustomerDeliveryDetail_SpareProduct.Price], 
            T.Price1 AS [Task_CustomerDeliveryDetail_SpareProduct.Price1], 
            T.Price2 AS [Task_CustomerDeliveryDetail_SpareProduct.Price2], 
            T.Discount AS [Task_CustomerDeliveryDetail_SpareProduct.Discount], 
            T.Discount1 AS [Task_CustomerDeliveryDetail_SpareProduct.Discount1], 
            T.Discount2 AS [Task_CustomerDeliveryDetail_SpareProduct.Discount2], 
            T.Cost AS [Task_CustomerDeliveryDetail_SpareProduct.Cost], 
            T.Cost1 AS [Task_CustomerDeliveryDetail_SpareProduct.Cost1], 
            T.Cost2 AS [Task_CustomerDeliveryDetail_SpareProduct.Cost2], 
            T.SpareType AS [Task_CustomerDeliveryDetail_SpareProduct.SpareType], 
            T.Remarks AS [Task_CustomerDeliveryDetail_SpareProduct.Remarks], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_CustomerDeliveryDetail_SpareProduct AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_CustomerDeliveryDetail_SpareSerial.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView343()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_CustomerDeliveryDetail_SpareSerial
        [BTS_OPSModel.Task_CustomerDeliveryDetail_SpareSerial](T1.[Task_CustomerDeliveryDetail_SpareSerial.DeliveryDetailSpareSerialId], T1.[Task_CustomerDeliveryDetail_SpareSerial.DeliveryDetailSpareId], T1.[Task_CustomerDeliveryDetail_SpareSerial.Serial], T1.[Task_CustomerDeliveryDetail_SpareSerial.AdditionalSerial])
    FROM (
        SELECT 
            T.DeliveryDetailSpareSerialId AS [Task_CustomerDeliveryDetail_SpareSerial.DeliveryDetailSpareSerialId], 
            T.DeliveryDetailSpareId AS [Task_CustomerDeliveryDetail_SpareSerial.DeliveryDetailSpareId], 
            T.Serial AS [Task_CustomerDeliveryDetail_SpareSerial.Serial], 
            T.AdditionalSerial AS [Task_CustomerDeliveryDetail_SpareSerial.AdditionalSerial], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_CustomerDeliveryDetail_SpareSerial AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_CustomerDeliveryNos.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView344()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_CustomerDeliveryNos
        [BTS_OPSModel.Task_CustomerDeliveryNos](T1.[Task_CustomerDeliveryNos.Id], T1.[Task_CustomerDeliveryNos.DeliveryNo], T1.[Task_CustomerDeliveryNos.Year], T1.[Task_CustomerDeliveryNos.CompanyId])
    FROM (
        SELECT 
            T.Id AS [Task_CustomerDeliveryNos.Id], 
            T.DeliveryNo AS [Task_CustomerDeliveryNos.DeliveryNo], 
            T.Year AS [Task_CustomerDeliveryNos.Year], 
            T.CompanyId AS [Task_CustomerDeliveryNos.CompanyId], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_CustomerDeliveryNos AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_DeliveryChallan.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView345()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_DeliveryChallan
        [BTS_OPSModel.Task_DeliveryChallan](T1.[Task_DeliveryChallan.ChallanId], T1.[Task_DeliveryChallan.ChallanNo], T1.[Task_DeliveryChallan.ChallanDate], T1.[Task_DeliveryChallan.CustomerId], T1.[Task_DeliveryChallan.CustomerDetail], T1.[Task_DeliveryChallan.BuyerId], T1.[Task_DeliveryChallan.SalesOrderId], T1.[Task_DeliveryChallan.DeliveryFromId], T1.[Task_DeliveryChallan.DeliveryPlace], T1.[Task_DeliveryChallan.ContactPerson], T1.[Task_DeliveryChallan.ContactPersonNo], T1.[Task_DeliveryChallan.TransportId], T1.[Task_DeliveryChallan.TransportTypeId], T1.[Task_DeliveryChallan.VehicleNo], T1.[Task_DeliveryChallan.DriverName], T1.[Task_DeliveryChallan.DriverContactNo], T1.[Task_DeliveryChallan.IsSettledByInvoice], T1.[Task_DeliveryChallan.Approved], T1.[Task_DeliveryChallan.ApprovedBy], T1.[Task_DeliveryChallan.ApprovedDate], T1.[Task_DeliveryChallan.CancelReason], T1.[Task_DeliveryChallan.TransactionFrom], T1.[Task_DeliveryChallan.GovtDutyChallanNo], T1.[Task_DeliveryChallan.LocationId], T1.[Task_DeliveryChallan.CompanyId], T1.[Task_DeliveryChallan.EntryBy], T1.[Task_DeliveryChallan.EntryDate], T1.[Task_DeliveryChallan.EditedBy], T1.[Task_DeliveryChallan.EditedDate])
    FROM (
        SELECT 
            T.ChallanId AS [Task_DeliveryChallan.ChallanId], 
            T.ChallanNo AS [Task_DeliveryChallan.ChallanNo], 
            T.ChallanDate AS [Task_DeliveryChallan.ChallanDate], 
            T.CustomerId AS [Task_DeliveryChallan.CustomerId], 
            T.CustomerDetail AS [Task_DeliveryChallan.CustomerDetail], 
            T.BuyerId AS [Task_DeliveryChallan.BuyerId], 
            T.SalesOrderId AS [Task_DeliveryChallan.SalesOrderId], 
            T.DeliveryFromId AS [Task_DeliveryChallan.DeliveryFromId], 
            T.DeliveryPlace AS [Task_DeliveryChallan.DeliveryPlace], 
            T.ContactPerson AS [Task_DeliveryChallan.ContactPerson], 
            T.ContactPersonNo AS [Task_DeliveryChallan.ContactPersonNo], 
            T.TransportId AS [Task_DeliveryChallan.TransportId], 
            T.TransportTypeId AS [Task_DeliveryChallan.TransportTypeId], 
            T.VehicleNo AS [Task_DeliveryChallan.VehicleNo], 
            T.DriverName AS [Task_DeliveryChallan.DriverName], 
            T.DriverContactNo AS [Task_DeliveryChallan.DriverContactNo], 
            T.IsSettledByInvoice AS [Task_DeliveryChallan.IsSettledByInvoice], 
            T.Approved AS [Task_DeliveryChallan.Approved], 
            T.ApprovedBy AS [Task_DeliveryChallan.ApprovedBy], 
            T.ApprovedDate AS [Task_DeliveryChallan.ApprovedDate], 
            T.CancelReason AS [Task_DeliveryChallan.CancelReason], 
            T.TransactionFrom AS [Task_DeliveryChallan.TransactionFrom], 
            T.GovtDutyChallanNo AS [Task_DeliveryChallan.GovtDutyChallanNo], 
            T.LocationId AS [Task_DeliveryChallan.LocationId], 
            T.CompanyId AS [Task_DeliveryChallan.CompanyId], 
            T.EntryBy AS [Task_DeliveryChallan.EntryBy], 
            T.EntryDate AS [Task_DeliveryChallan.EntryDate], 
            T.EditedBy AS [Task_DeliveryChallan.EditedBy], 
            T.EditedDate AS [Task_DeliveryChallan.EditedDate], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_DeliveryChallan AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_DeliveryChallan_Charge.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView346()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_DeliveryChallan_Charge
        [BTS_OPSModel.Task_DeliveryChallan_Charge](T1.[Task_DeliveryChallan_Charge.DeliveryChallanChargeId], T1.[Task_DeliveryChallan_Charge.ChallanId], T1.[Task_DeliveryChallan_Charge.ChargeEventId], T1.[Task_DeliveryChallan_Charge.ChargeAmount], T1.[Task_DeliveryChallan_Charge.Charge1Amount], T1.[Task_DeliveryChallan_Charge.Charge2Amount])
    FROM (
        SELECT 
            T.DeliveryChallanChargeId AS [Task_DeliveryChallan_Charge.DeliveryChallanChargeId], 
            T.ChallanId AS [Task_DeliveryChallan_Charge.ChallanId], 
            T.ChargeEventId AS [Task_DeliveryChallan_Charge.ChargeEventId], 
            T.ChargeAmount AS [Task_DeliveryChallan_Charge.ChargeAmount], 
            T.Charge1Amount AS [Task_DeliveryChallan_Charge.Charge1Amount], 
            T.Charge2Amount AS [Task_DeliveryChallan_Charge.Charge2Amount], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_DeliveryChallan_Charge AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_DeliveryChallanDetail.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView347()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_DeliveryChallanDetail
        [BTS_OPSModel.Task_DeliveryChallanDetail](T1.[Task_DeliveryChallanDetail.ChallanDetailId], T1.[Task_DeliveryChallanDetail.ChallanId], T1.[Task_DeliveryChallanDetail.ProductId], T1.[Task_DeliveryChallanDetail.ProductDimensionId], T1.[Task_DeliveryChallanDetail.UnitTypeId], T1.[Task_DeliveryChallanDetail.Quantity], T1.[Task_DeliveryChallanDetail.InvoicedQuantity], T1.[Task_DeliveryChallanDetail.Price], T1.[Task_DeliveryChallanDetail.Price1], T1.[Task_DeliveryChallanDetail.Price2], T1.[Task_DeliveryChallanDetail.DiscountType], T1.[Task_DeliveryChallanDetail.DiscountValue], T1.[Task_DeliveryChallanDetail.Discount1Value], T1.[Task_DeliveryChallanDetail.Discount2Value], T1.[Task_DeliveryChallanDetail.Discount], T1.[Task_DeliveryChallanDetail.Discount1], T1.[Task_DeliveryChallanDetail.Discount2], T1.[Task_DeliveryChallanDetail.InvoiceDiscount], T1.[Task_DeliveryChallanDetail.InvoiceDiscount1], T1.[Task_DeliveryChallanDetail.InvoiceDiscount2], T1.[Task_DeliveryChallanDetail.Cost], T1.[Task_DeliveryChallanDetail.Cost1], T1.[Task_DeliveryChallanDetail.Cost2], T1.[Task_DeliveryChallanDetail.PrimaryUnitTypeId], T1.[Task_DeliveryChallanDetail.SecondaryUnitTypeId], T1.[Task_DeliveryChallanDetail.TertiaryUnitTypeId], T1.[Task_DeliveryChallanDetail.SecondaryConversionRatio], T1.[Task_DeliveryChallanDetail.TertiaryConversionRatio], T1.[Task_DeliveryChallanDetail.WareHouseId], T1.[Task_DeliveryChallanDetail.IsIncludingGovtDuty], T1.[Task_DeliveryChallanDetail.BatchNo], T1.[Task_DeliveryChallanDetail.ManufactureDate], T1.[Task_DeliveryChallanDetail.ExpireDate], T1.[Task_DeliveryChallanDetail.ReferenceNo], T1.[Task_DeliveryChallanDetail.ReferenceDate], T1.[Task_DeliveryChallanDetail.GoodsReceiveId], T1.[Task_DeliveryChallanDetail.ImportedStockInId], T1.[Task_DeliveryChallanDetail.SupplierId], T1.[Task_DeliveryChallanDetail.ShortSpecification], T1.[Task_DeliveryChallanDetail.IsWarrantyAvailable], T1.[Task_DeliveryChallanDetail.WarrantyDays], T1.[Task_DeliveryChallanDetail.IsServiceWarranty], T1.[Task_DeliveryChallanDetail.ServiceWarrantyDays])
    FROM (
        SELECT 
            T.ChallanDetailId AS [Task_DeliveryChallanDetail.ChallanDetailId], 
            T.ChallanId AS [Task_DeliveryChallanDetail.ChallanId], 
            T.ProductId AS [Task_DeliveryChallanDetail.ProductId], 
            T.ProductDimensionId AS [Task_DeliveryChallanDetail.ProductDimensionId], 
            T.UnitTypeId AS [Task_DeliveryChallanDetail.UnitTypeId], 
            T.Quantity AS [Task_DeliveryChallanDetail.Quantity], 
            T.InvoicedQuantity AS [Task_DeliveryChallanDetail.InvoicedQuantity], 
            T.Price AS [Task_DeliveryChallanDetail.Price], 
            T.Price1 AS [Task_DeliveryChallanDetail.Price1], 
            T.Price2 AS [Task_DeliveryChallanDetail.Price2], 
            T.DiscountType AS [Task_DeliveryChallanDetail.DiscountType], 
            T.DiscountValue AS [Task_DeliveryChallanDetail.DiscountValue], 
            T.Discount1Value AS [Task_DeliveryChallanDetail.Discount1Value], 
            T.Discount2Value AS [Task_DeliveryChallanDetail.Discount2Value], 
            T.Discount AS [Task_DeliveryChallanDetail.Discount], 
            T.Discount1 AS [Task_DeliveryChallanDetail.Discount1], 
            T.Discount2 AS [Task_DeliveryChallanDetail.Discount2], 
            T.InvoiceDiscount AS [Task_DeliveryChallanDetail.InvoiceDiscount], 
            T.InvoiceDiscount1 AS [Task_DeliveryChallanDetail.InvoiceDiscount1], 
            T.InvoiceDiscount2 AS [Task_DeliveryChallanDetail.InvoiceDiscount2], 
            T.Cost AS [Task_DeliveryChallanDetail.Cost], 
            T.Cost1 AS [Task_DeliveryChallanDetail.Cost1], 
            T.Cost2 AS [Task_DeliveryChallanDetail.Cost2], 
            T.PrimaryUnitTypeId AS [Task_DeliveryChallanDetail.PrimaryUnitTypeId], 
            T.SecondaryUnitTypeId AS [Task_DeliveryChallanDetail.SecondaryUnitTypeId], 
            T.TertiaryUnitTypeId AS [Task_DeliveryChallanDetail.TertiaryUnitTypeId], 
            T.SecondaryConversionRatio AS [Task_DeliveryChallanDetail.SecondaryConversionRatio], 
            T.TertiaryConversionRatio AS [Task_DeliveryChallanDetail.TertiaryConversionRatio], 
            T.WareHouseId AS [Task_DeliveryChallanDetail.WareHouseId], 
            T.IsIncludingGovtDuty AS [Task_DeliveryChallanDetail.IsIncludingGovtDuty], 
            T.BatchNo AS [Task_DeliveryChallanDetail.BatchNo], 
            T.ManufactureDate AS [Task_DeliveryChallanDetail.ManufactureDate], 
            T.ExpireDate AS [Task_DeliveryChallanDetail.ExpireDate], 
            T.ReferenceNo AS [Task_DeliveryChallanDetail.ReferenceNo], 
            T.ReferenceDate AS [Task_DeliveryChallanDetail.ReferenceDate], 
            T.GoodsReceiveId AS [Task_DeliveryChallanDetail.GoodsReceiveId], 
            T.ImportedStockInId AS [Task_DeliveryChallanDetail.ImportedStockInId], 
            T.SupplierId AS [Task_DeliveryChallanDetail.SupplierId], 
            T.ShortSpecification AS [Task_DeliveryChallanDetail.ShortSpecification], 
            T.IsWarrantyAvailable AS [Task_DeliveryChallanDetail.IsWarrantyAvailable], 
            T.WarrantyDays AS [Task_DeliveryChallanDetail.WarrantyDays], 
            T.IsServiceWarranty AS [Task_DeliveryChallanDetail.IsServiceWarranty], 
            T.ServiceWarrantyDays AS [Task_DeliveryChallanDetail.ServiceWarrantyDays], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_DeliveryChallanDetail AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_DeliveryChallanDetail_GovtDuty.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView348()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_DeliveryChallanDetail_GovtDuty
        [BTS_OPSModel.Task_DeliveryChallanDetail_GovtDuty](T1.[Task_DeliveryChallanDetail_GovtDuty.Id], T1.[Task_DeliveryChallanDetail_GovtDuty.ChallanDetailId], T1.[Task_DeliveryChallanDetail_GovtDuty.GovtDutyId], T1.[Task_DeliveryChallanDetail_GovtDuty.RateType], T1.[Task_DeliveryChallanDetail_GovtDuty.RateValue], T1.[Task_DeliveryChallanDetail_GovtDuty.RateValue1], T1.[Task_DeliveryChallanDetail_GovtDuty.RateValue2], T1.[Task_DeliveryChallanDetail_GovtDuty.RateAmount], T1.[Task_DeliveryChallanDetail_GovtDuty.RateAmount1], T1.[Task_DeliveryChallanDetail_GovtDuty.RateAmount2], T1.[Task_DeliveryChallanDetail_GovtDuty.ExemptedType], T1.[Task_DeliveryChallanDetail_GovtDuty.ExemptedValue], T1.[Task_DeliveryChallanDetail_GovtDuty.ExemptedValue1], T1.[Task_DeliveryChallanDetail_GovtDuty.ExemptedValue2], T1.[Task_DeliveryChallanDetail_GovtDuty.ExemptedAmount], T1.[Task_DeliveryChallanDetail_GovtDuty.ExemptedAmount1], T1.[Task_DeliveryChallanDetail_GovtDuty.ExemptedAmount2])
    FROM (
        SELECT 
            T.Id AS [Task_DeliveryChallanDetail_GovtDuty.Id], 
            T.ChallanDetailId AS [Task_DeliveryChallanDetail_GovtDuty.ChallanDetailId], 
            T.GovtDutyId AS [Task_DeliveryChallanDetail_GovtDuty.GovtDutyId], 
            T.RateType AS [Task_DeliveryChallanDetail_GovtDuty.RateType], 
            T.RateValue AS [Task_DeliveryChallanDetail_GovtDuty.RateValue], 
            T.RateValue1 AS [Task_DeliveryChallanDetail_GovtDuty.RateValue1], 
            T.RateValue2 AS [Task_DeliveryChallanDetail_GovtDuty.RateValue2], 
            T.RateAmount AS [Task_DeliveryChallanDetail_GovtDuty.RateAmount], 
            T.RateAmount1 AS [Task_DeliveryChallanDetail_GovtDuty.RateAmount1], 
            T.RateAmount2 AS [Task_DeliveryChallanDetail_GovtDuty.RateAmount2], 
            T.ExemptedType AS [Task_DeliveryChallanDetail_GovtDuty.ExemptedType], 
            T.ExemptedValue AS [Task_DeliveryChallanDetail_GovtDuty.ExemptedValue], 
            T.ExemptedValue1 AS [Task_DeliveryChallanDetail_GovtDuty.ExemptedValue1], 
            T.ExemptedValue2 AS [Task_DeliveryChallanDetail_GovtDuty.ExemptedValue2], 
            T.ExemptedAmount AS [Task_DeliveryChallanDetail_GovtDuty.ExemptedAmount], 
            T.ExemptedAmount1 AS [Task_DeliveryChallanDetail_GovtDuty.ExemptedAmount1], 
            T.ExemptedAmount2 AS [Task_DeliveryChallanDetail_GovtDuty.ExemptedAmount2], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_DeliveryChallanDetail_GovtDuty AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_DeliveryChallanDetailSerial.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView349()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_DeliveryChallanDetailSerial
        [BTS_OPSModel.Task_DeliveryChallanDetailSerial](T1.[Task_DeliveryChallanDetailSerial.ChallanDetailSerialId], T1.[Task_DeliveryChallanDetailSerial.ChallanDetailId], T1.[Task_DeliveryChallanDetailSerial.Serial], T1.[Task_DeliveryChallanDetailSerial.AdditionalSerial])
    FROM (
        SELECT 
            T.ChallanDetailSerialId AS [Task_DeliveryChallanDetailSerial.ChallanDetailSerialId], 
            T.ChallanDetailId AS [Task_DeliveryChallanDetailSerial.ChallanDetailId], 
            T.Serial AS [Task_DeliveryChallanDetailSerial.Serial], 
            T.AdditionalSerial AS [Task_DeliveryChallanDetailSerial.AdditionalSerial], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_DeliveryChallanDetailSerial AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_DeliveryChallanNos.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView350()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_DeliveryChallanNos
        [BTS_OPSModel.Task_DeliveryChallanNos](T1.[Task_DeliveryChallanNos.Id], T1.[Task_DeliveryChallanNos.ChallanNo], T1.[Task_DeliveryChallanNos.Year], T1.[Task_DeliveryChallanNos.CompanyId])
    FROM (
        SELECT 
            T.Id AS [Task_DeliveryChallanNos.Id], 
            T.ChallanNo AS [Task_DeliveryChallanNos.ChallanNo], 
            T.Year AS [Task_DeliveryChallanNos.Year], 
            T.CompanyId AS [Task_DeliveryChallanNos.CompanyId], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_DeliveryChallanNos AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_GoodsReceive.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView351()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_GoodsReceive
        [BTS_OPSModel.Task_GoodsReceive](T1.[Task_GoodsReceive.ReceiveId], T1.[Task_GoodsReceive.ReceiveNo], T1.[Task_GoodsReceive.ReceiveDate], T1.[Task_GoodsReceive.ReferenceNo], T1.[Task_GoodsReceive.ReferenceDate], T1.[Task_GoodsReceive.SupplierId], T1.[Task_GoodsReceive.OrderId], T1.[Task_GoodsReceive.Remarks], T1.[Task_GoodsReceive.SelectedCurrency], T1.[Task_GoodsReceive.Currency1Rate], T1.[Task_GoodsReceive.Currency2Rate], T1.[Task_GoodsReceive.IsSettledByRecFinalize], T1.[Task_GoodsReceive.Approved], T1.[Task_GoodsReceive.ApprovedBy], T1.[Task_GoodsReceive.ApprovedDate], T1.[Task_GoodsReceive.CancelReason], T1.[Task_GoodsReceive.PurchaseOperationType], T1.[Task_GoodsReceive.ReceiveAmount], T1.[Task_GoodsReceive.Receive1Amount], T1.[Task_GoodsReceive.Receive2Amount], T1.[Task_GoodsReceive.DiscountType], T1.[Task_GoodsReceive.DiscountValue], T1.[Task_GoodsReceive.Discount1Value], T1.[Task_GoodsReceive.Discount2Value], T1.[Task_GoodsReceive.DiscountAmount], T1.[Task_GoodsReceive.Discount1Amount], T1.[Task_GoodsReceive.Discount2Amount], T1.[Task_GoodsReceive.IsSettledByReturn], T1.[Task_GoodsReceive.VoucherId], T1.[Task_GoodsReceive.LocationId], T1.[Task_GoodsReceive.CompanyId], T1.[Task_GoodsReceive.EntryBy], T1.[Task_GoodsReceive.EntryDate], T1.[Task_GoodsReceive.EditedBy], T1.[Task_GoodsReceive.EditedDate])
    FROM (
        SELECT 
            T.ReceiveId AS [Task_GoodsReceive.ReceiveId], 
            T.ReceiveNo AS [Task_GoodsReceive.ReceiveNo], 
            T.ReceiveDate AS [Task_GoodsReceive.ReceiveDate], 
            T.ReferenceNo AS [Task_GoodsReceive.ReferenceNo], 
            T.ReferenceDate AS [Task_GoodsReceive.ReferenceDate], 
            T.SupplierId AS [Task_GoodsReceive.SupplierId], 
            T.OrderId AS [Task_GoodsReceive.OrderId], 
            T.Remarks AS [Task_GoodsReceive.Remarks], 
            T.SelectedCurrency AS [Task_GoodsReceive.SelectedCurrency], 
            T.Currency1Rate AS [Task_GoodsReceive.Currency1Rate], 
            T.Currency2Rate AS [Task_GoodsReceive.Currency2Rate], 
            T.IsSettledByRecFinalize AS [Task_GoodsReceive.IsSettledByRecFinalize], 
            T.Approved AS [Task_GoodsReceive.Approved], 
            T.ApprovedBy AS [Task_GoodsReceive.ApprovedBy], 
            T.ApprovedDate AS [Task_GoodsReceive.ApprovedDate], 
            T.CancelReason AS [Task_GoodsReceive.CancelReason], 
            T.PurchaseOperationType AS [Task_GoodsReceive.PurchaseOperationType], 
            T.ReceiveAmount AS [Task_GoodsReceive.ReceiveAmount], 
            T.Receive1Amount AS [Task_GoodsReceive.Receive1Amount], 
            T.Receive2Amount AS [Task_GoodsReceive.Receive2Amount], 
            T.DiscountType AS [Task_GoodsReceive.DiscountType], 
            T.DiscountValue AS [Task_GoodsReceive.DiscountValue], 
            T.Discount1Value AS [Task_GoodsReceive.Discount1Value], 
            T.Discount2Value AS [Task_GoodsReceive.Discount2Value], 
            T.DiscountAmount AS [Task_GoodsReceive.DiscountAmount], 
            T.Discount1Amount AS [Task_GoodsReceive.Discount1Amount], 
            T.Discount2Amount AS [Task_GoodsReceive.Discount2Amount], 
            T.IsSettledByReturn AS [Task_GoodsReceive.IsSettledByReturn], 
            T.VoucherId AS [Task_GoodsReceive.VoucherId], 
            T.LocationId AS [Task_GoodsReceive.LocationId], 
            T.CompanyId AS [Task_GoodsReceive.CompanyId], 
            T.EntryBy AS [Task_GoodsReceive.EntryBy], 
            T.EntryDate AS [Task_GoodsReceive.EntryDate], 
            T.EditedBy AS [Task_GoodsReceive.EditedBy], 
            T.EditedDate AS [Task_GoodsReceive.EditedDate], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_GoodsReceive AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_GoodsReceiveDetail.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView352()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_GoodsReceiveDetail
        [BTS_OPSModel.Task_GoodsReceiveDetail](T1.[Task_GoodsReceiveDetail.ReceiveDetailId], T1.[Task_GoodsReceiveDetail.ReceiveId], T1.[Task_GoodsReceiveDetail.ProductEntrySequence], T1.[Task_GoodsReceiveDetail.ProductId], T1.[Task_GoodsReceiveDetail.ProductDimensionId], T1.[Task_GoodsReceiveDetail.UnitTypeId], T1.[Task_GoodsReceiveDetail.WarehouseId], T1.[Task_GoodsReceiveDetail.Quantity], T1.[Task_GoodsReceiveDetail.FinalizedQuantity], T1.[Task_GoodsReceiveDetail.Price], T1.[Task_GoodsReceiveDetail.Price1], T1.[Task_GoodsReceiveDetail.Price2], T1.[Task_GoodsReceiveDetail.BatchNo], T1.[Task_GoodsReceiveDetail.ManufactureDate], T1.[Task_GoodsReceiveDetail.ExpireDate], T1.[Task_GoodsReceiveDetail.Discount], T1.[Task_GoodsReceiveDetail.Discount1], T1.[Task_GoodsReceiveDetail.Discount2], T1.[Task_GoodsReceiveDetail.PrimaryUnitTypeId], T1.[Task_GoodsReceiveDetail.SecondaryUnitTypeId], T1.[Task_GoodsReceiveDetail.TertiaryUnitTypeId], T1.[Task_GoodsReceiveDetail.SecondaryConversionRatio], T1.[Task_GoodsReceiveDetail.TertiaryConversionRatio], T1.[Task_GoodsReceiveDetail.ReturnedQuantity])
    FROM (
        SELECT 
            T.ReceiveDetailId AS [Task_GoodsReceiveDetail.ReceiveDetailId], 
            T.ReceiveId AS [Task_GoodsReceiveDetail.ReceiveId], 
            T.ProductEntrySequence AS [Task_GoodsReceiveDetail.ProductEntrySequence], 
            T.ProductId AS [Task_GoodsReceiveDetail.ProductId], 
            T.ProductDimensionId AS [Task_GoodsReceiveDetail.ProductDimensionId], 
            T.UnitTypeId AS [Task_GoodsReceiveDetail.UnitTypeId], 
            T.WarehouseId AS [Task_GoodsReceiveDetail.WarehouseId], 
            T.Quantity AS [Task_GoodsReceiveDetail.Quantity], 
            T.FinalizedQuantity AS [Task_GoodsReceiveDetail.FinalizedQuantity], 
            T.Price AS [Task_GoodsReceiveDetail.Price], 
            T.Price1 AS [Task_GoodsReceiveDetail.Price1], 
            T.Price2 AS [Task_GoodsReceiveDetail.Price2], 
            T.BatchNo AS [Task_GoodsReceiveDetail.BatchNo], 
            T.ManufactureDate AS [Task_GoodsReceiveDetail.ManufactureDate], 
            T.ExpireDate AS [Task_GoodsReceiveDetail.ExpireDate], 
            T.Discount AS [Task_GoodsReceiveDetail.Discount], 
            T.Discount1 AS [Task_GoodsReceiveDetail.Discount1], 
            T.Discount2 AS [Task_GoodsReceiveDetail.Discount2], 
            T.PrimaryUnitTypeId AS [Task_GoodsReceiveDetail.PrimaryUnitTypeId], 
            T.SecondaryUnitTypeId AS [Task_GoodsReceiveDetail.SecondaryUnitTypeId], 
            T.TertiaryUnitTypeId AS [Task_GoodsReceiveDetail.TertiaryUnitTypeId], 
            T.SecondaryConversionRatio AS [Task_GoodsReceiveDetail.SecondaryConversionRatio], 
            T.TertiaryConversionRatio AS [Task_GoodsReceiveDetail.TertiaryConversionRatio], 
            T.ReturnedQuantity AS [Task_GoodsReceiveDetail.ReturnedQuantity], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_GoodsReceiveDetail AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_GoodsReceiveDetailSerial.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView353()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_GoodsReceiveDetailSerial
        [BTS_OPSModel.Task_GoodsReceiveDetailSerial](T1.[Task_GoodsReceiveDetailSerial.ReceiveDetailSerialId], T1.[Task_GoodsReceiveDetailSerial.ReceiveDetailId], T1.[Task_GoodsReceiveDetailSerial.Serial], T1.[Task_GoodsReceiveDetailSerial.AdditionalSerial], T1.[Task_GoodsReceiveDetailSerial.IsReturned])
    FROM (
        SELECT 
            T.ReceiveDetailSerialId AS [Task_GoodsReceiveDetailSerial.ReceiveDetailSerialId], 
            T.ReceiveDetailId AS [Task_GoodsReceiveDetailSerial.ReceiveDetailId], 
            T.Serial AS [Task_GoodsReceiveDetailSerial.Serial], 
            T.AdditionalSerial AS [Task_GoodsReceiveDetailSerial.AdditionalSerial], 
            T.IsReturned AS [Task_GoodsReceiveDetailSerial.IsReturned], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_GoodsReceiveDetailSerial AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_GoodsReceiveNos.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView354()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_GoodsReceiveNos
        [BTS_OPSModel.Task_GoodsReceiveNos](T1.[Task_GoodsReceiveNos.Id], T1.[Task_GoodsReceiveNos.ReceiveNo], T1.[Task_GoodsReceiveNos.Year], T1.[Task_GoodsReceiveNos.CompanyId])
    FROM (
        SELECT 
            T.Id AS [Task_GoodsReceiveNos.Id], 
            T.ReceiveNo AS [Task_GoodsReceiveNos.ReceiveNo], 
            T.Year AS [Task_GoodsReceiveNos.Year], 
            T.CompanyId AS [Task_GoodsReceiveNos.CompanyId], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_GoodsReceiveNos AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_ImportCosting.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView355()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_ImportCosting
        [BTS_OPSModel.Task_ImportCosting](T1.[Task_ImportCosting.ImportCostingId], T1.[Task_ImportCosting.ImportCostingNo], T1.[Task_ImportCosting.LCId], T1.[Task_ImportCosting.SelectedCurrency], T1.[Task_ImportCosting.Currency1Rate], T1.[Task_ImportCosting.Currency2Rate], T1.[Task_ImportCosting.Approved], T1.[Task_ImportCosting.ApprovedBy], T1.[Task_ImportCosting.ApprovedDate], T1.[Task_ImportCosting.CancelReason], T1.[Task_ImportCosting.LocationId], T1.[Task_ImportCosting.CompanyId], T1.[Task_ImportCosting.EntryBy], T1.[Task_ImportCosting.EntryDate])
    FROM (
        SELECT 
            T.ImportCostingId AS [Task_ImportCosting.ImportCostingId], 
            T.ImportCostingNo AS [Task_ImportCosting.ImportCostingNo], 
            T.LCId AS [Task_ImportCosting.LCId], 
            T.SelectedCurrency AS [Task_ImportCosting.SelectedCurrency], 
            T.Currency1Rate AS [Task_ImportCosting.Currency1Rate], 
            T.Currency2Rate AS [Task_ImportCosting.Currency2Rate], 
            T.Approved AS [Task_ImportCosting.Approved], 
            T.ApprovedBy AS [Task_ImportCosting.ApprovedBy], 
            T.ApprovedDate AS [Task_ImportCosting.ApprovedDate], 
            T.CancelReason AS [Task_ImportCosting.CancelReason], 
            T.LocationId AS [Task_ImportCosting.LocationId], 
            T.CompanyId AS [Task_ImportCosting.CompanyId], 
            T.EntryBy AS [Task_ImportCosting.EntryBy], 
            T.EntryDate AS [Task_ImportCosting.EntryDate], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_ImportCosting AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_ImportCostingDetail.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView356()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_ImportCostingDetail
        [BTS_OPSModel.Task_ImportCostingDetail](T1.[Task_ImportCostingDetail.ImportCostingDetailId], T1.[Task_ImportCostingDetail.ImportCostingId], T1.[Task_ImportCostingDetail.CostingHeadId], T1.[Task_ImportCostingDetail.CostingType], T1.[Task_ImportCostingDetail.CostingValue], T1.[Task_ImportCostingDetail.CostingValue1], T1.[Task_ImportCostingDetail.CostingValue2], T1.[Task_ImportCostingDetail.CostingAmount], T1.[Task_ImportCostingDetail.CostingAmount1], T1.[Task_ImportCostingDetail.CostingAmount2])
    FROM (
        SELECT 
            T.ImportCostingDetailId AS [Task_ImportCostingDetail.ImportCostingDetailId], 
            T.ImportCostingId AS [Task_ImportCostingDetail.ImportCostingId], 
            T.CostingHeadId AS [Task_ImportCostingDetail.CostingHeadId], 
            T.CostingType AS [Task_ImportCostingDetail.CostingType], 
            T.CostingValue AS [Task_ImportCostingDetail.CostingValue], 
            T.CostingValue1 AS [Task_ImportCostingDetail.CostingValue1], 
            T.CostingValue2 AS [Task_ImportCostingDetail.CostingValue2], 
            T.CostingAmount AS [Task_ImportCostingDetail.CostingAmount], 
            T.CostingAmount1 AS [Task_ImportCostingDetail.CostingAmount1], 
            T.CostingAmount2 AS [Task_ImportCostingDetail.CostingAmount2], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_ImportCostingDetail AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_ImportCostingNos.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView357()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_ImportCostingNos
        [BTS_OPSModel.Task_ImportCostingNos](T1.[Task_ImportCostingNos.Id], T1.[Task_ImportCostingNos.ImportCostingNos], T1.[Task_ImportCostingNos.Year], T1.[Task_ImportCostingNos.CompanyId])
    FROM (
        SELECT 
            T.Id AS [Task_ImportCostingNos.Id], 
            T.ImportCostingNos AS [Task_ImportCostingNos.ImportCostingNos], 
            T.Year AS [Task_ImportCostingNos.Year], 
            T.CompanyId AS [Task_ImportCostingNos.CompanyId], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_ImportCostingNos AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_ImportCostingProduct.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView358()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_ImportCostingProduct
        [BTS_OPSModel.Task_ImportCostingProduct](T1.[Task_ImportCostingProduct.ImportCostingProductId], T1.[Task_ImportCostingProduct.ImportCostingId], T1.[Task_ImportCostingProduct.ProductId], T1.[Task_ImportCostingProduct.ProductDimensionId], T1.[Task_ImportCostingProduct.UnitTypeId], T1.[Task_ImportCostingProduct.Quantity], T1.[Task_ImportCostingProduct.LIMStockInQuantity], T1.[Task_ImportCostingProduct.Price], T1.[Task_ImportCostingProduct.Price1], T1.[Task_ImportCostingProduct.Price2], T1.[Task_ImportCostingProduct.WeightOrCBM], T1.[Task_ImportCostingProduct.PackingUnitTypeId], T1.[Task_ImportCostingProduct.PackingQuantity])
    FROM (
        SELECT 
            T.ImportCostingProductId AS [Task_ImportCostingProduct.ImportCostingProductId], 
            T.ImportCostingId AS [Task_ImportCostingProduct.ImportCostingId], 
            T.ProductId AS [Task_ImportCostingProduct.ProductId], 
            T.ProductDimensionId AS [Task_ImportCostingProduct.ProductDimensionId], 
            T.UnitTypeId AS [Task_ImportCostingProduct.UnitTypeId], 
            T.Quantity AS [Task_ImportCostingProduct.Quantity], 
            T.LIMStockInQuantity AS [Task_ImportCostingProduct.LIMStockInQuantity], 
            T.Price AS [Task_ImportCostingProduct.Price], 
            T.Price1 AS [Task_ImportCostingProduct.Price1], 
            T.Price2 AS [Task_ImportCostingProduct.Price2], 
            T.WeightOrCBM AS [Task_ImportCostingProduct.WeightOrCBM], 
            T.PackingUnitTypeId AS [Task_ImportCostingProduct.PackingUnitTypeId], 
            T.PackingQuantity AS [Task_ImportCostingProduct.PackingQuantity], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_ImportCostingProduct AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_ImportDocuments.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView359()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_ImportDocuments
        [BTS_OPSModel.Task_ImportDocuments](T1.[Task_ImportDocuments.ImportDocumentId], T1.[Task_ImportDocuments.LCId], T1.[Task_ImportDocuments.CostingGroupId], T1.[Task_ImportDocuments.DocumentId], T1.[Task_ImportDocuments.EntryBy], T1.[Task_ImportDocuments.EntryDate])
    FROM (
        SELECT 
            T.ImportDocumentId AS [Task_ImportDocuments.ImportDocumentId], 
            T.LCId AS [Task_ImportDocuments.LCId], 
            T.CostingGroupId AS [Task_ImportDocuments.CostingGroupId], 
            T.DocumentId AS [Task_ImportDocuments.DocumentId], 
            T.EntryBy AS [Task_ImportDocuments.EntryBy], 
            T.EntryDate AS [Task_ImportDocuments.EntryDate], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_ImportDocuments AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_ImportedStockIn.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView360()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_ImportedStockIn
        [BTS_OPSModel.Task_ImportedStockIn](T1.[Task_ImportedStockIn.StockInId], T1.[Task_ImportedStockIn.StockInNo], T1.[Task_ImportedStockIn.StockInDate], T1.[Task_ImportedStockIn.ImportAgainst], T1.[Task_ImportedStockIn.LIMStockInId], T1.[Task_ImportedStockIn.StockInLocationId], T1.[Task_ImportedStockIn.SelectedCurrency], T1.[Task_ImportedStockIn.Currency1Rate], T1.[Task_ImportedStockIn.Currency2Rate], T1.[Task_ImportedStockIn.ReferenceNo], T1.[Task_ImportedStockIn.ReferenceDate], T1.[Task_ImportedStockIn.Remarks], T1.[Task_ImportedStockIn.StockInAmount], T1.[Task_ImportedStockIn.StockIn1Amount], T1.[Task_ImportedStockIn.StockIn2Amount], T1.[Task_ImportedStockIn.Approved], T1.[Task_ImportedStockIn.ApprovedBy], T1.[Task_ImportedStockIn.ApprovedDate], T1.[Task_ImportedStockIn.CancelReason], T1.[Task_ImportedStockIn.LocationId], T1.[Task_ImportedStockIn.CompanyId], T1.[Task_ImportedStockIn.EntryBy], T1.[Task_ImportedStockIn.EntryDate])
    FROM (
        SELECT 
            T.StockInId AS [Task_ImportedStockIn.StockInId], 
            T.StockInNo AS [Task_ImportedStockIn.StockInNo], 
            T.StockInDate AS [Task_ImportedStockIn.StockInDate], 
            T.ImportAgainst AS [Task_ImportedStockIn.ImportAgainst], 
            T.LIMStockInId AS [Task_ImportedStockIn.LIMStockInId], 
            T.StockInLocationId AS [Task_ImportedStockIn.StockInLocationId], 
            T.SelectedCurrency AS [Task_ImportedStockIn.SelectedCurrency], 
            T.Currency1Rate AS [Task_ImportedStockIn.Currency1Rate], 
            T.Currency2Rate AS [Task_ImportedStockIn.Currency2Rate], 
            T.ReferenceNo AS [Task_ImportedStockIn.ReferenceNo], 
            T.ReferenceDate AS [Task_ImportedStockIn.ReferenceDate], 
            T.Remarks AS [Task_ImportedStockIn.Remarks], 
            T.StockInAmount AS [Task_ImportedStockIn.StockInAmount], 
            T.StockIn1Amount AS [Task_ImportedStockIn.StockIn1Amount], 
            T.StockIn2Amount AS [Task_ImportedStockIn.StockIn2Amount], 
            T.Approved AS [Task_ImportedStockIn.Approved], 
            T.ApprovedBy AS [Task_ImportedStockIn.ApprovedBy], 
            T.ApprovedDate AS [Task_ImportedStockIn.ApprovedDate], 
            T.CancelReason AS [Task_ImportedStockIn.CancelReason], 
            T.LocationId AS [Task_ImportedStockIn.LocationId], 
            T.CompanyId AS [Task_ImportedStockIn.CompanyId], 
            T.EntryBy AS [Task_ImportedStockIn.EntryBy], 
            T.EntryDate AS [Task_ImportedStockIn.EntryDate], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_ImportedStockIn AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_ImportedStockInDetail.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView361()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_ImportedStockInDetail
        [BTS_OPSModel.Task_ImportedStockInDetail](T1.[Task_ImportedStockInDetail.StockInDetailId], T1.[Task_ImportedStockInDetail.StockInId], T1.[Task_ImportedStockInDetail.ProductId], T1.[Task_ImportedStockInDetail.ProductDimensionId], T1.[Task_ImportedStockInDetail.UnitTypeId], T1.[Task_ImportedStockInDetail.Quantity], T1.[Task_ImportedStockInDetail.NoCostQuantity], T1.[Task_ImportedStockInDetail.Price], T1.[Task_ImportedStockInDetail.Price1], T1.[Task_ImportedStockInDetail.Price2], T1.[Task_ImportedStockInDetail.PrimaryUnitTypeId], T1.[Task_ImportedStockInDetail.SecondaryUnitTypeId], T1.[Task_ImportedStockInDetail.TertiaryUnitTypeId], T1.[Task_ImportedStockInDetail.SecondaryConversionRatio], T1.[Task_ImportedStockInDetail.TertiaryConversionRatio], T1.[Task_ImportedStockInDetail.WareHouseId])
    FROM (
        SELECT 
            T.StockInDetailId AS [Task_ImportedStockInDetail.StockInDetailId], 
            T.StockInId AS [Task_ImportedStockInDetail.StockInId], 
            T.ProductId AS [Task_ImportedStockInDetail.ProductId], 
            T.ProductDimensionId AS [Task_ImportedStockInDetail.ProductDimensionId], 
            T.UnitTypeId AS [Task_ImportedStockInDetail.UnitTypeId], 
            T.Quantity AS [Task_ImportedStockInDetail.Quantity], 
            T.NoCostQuantity AS [Task_ImportedStockInDetail.NoCostQuantity], 
            T.Price AS [Task_ImportedStockInDetail.Price], 
            T.Price1 AS [Task_ImportedStockInDetail.Price1], 
            T.Price2 AS [Task_ImportedStockInDetail.Price2], 
            T.PrimaryUnitTypeId AS [Task_ImportedStockInDetail.PrimaryUnitTypeId], 
            T.SecondaryUnitTypeId AS [Task_ImportedStockInDetail.SecondaryUnitTypeId], 
            T.TertiaryUnitTypeId AS [Task_ImportedStockInDetail.TertiaryUnitTypeId], 
            T.SecondaryConversionRatio AS [Task_ImportedStockInDetail.SecondaryConversionRatio], 
            T.TertiaryConversionRatio AS [Task_ImportedStockInDetail.TertiaryConversionRatio], 
            T.WareHouseId AS [Task_ImportedStockInDetail.WareHouseId], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_ImportedStockInDetail AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_ImportedStockInDetailSerial.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView362()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_ImportedStockInDetailSerial
        [BTS_OPSModel.Task_ImportedStockInDetailSerial](T1.[Task_ImportedStockInDetailSerial.StockInDetailSerialId], T1.[Task_ImportedStockInDetailSerial.StockInDetailId], T1.[Task_ImportedStockInDetailSerial.Serial], T1.[Task_ImportedStockInDetailSerial.AdditionalSerial])
    FROM (
        SELECT 
            T.StockInDetailSerialId AS [Task_ImportedStockInDetailSerial.StockInDetailSerialId], 
            T.StockInDetailId AS [Task_ImportedStockInDetailSerial.StockInDetailId], 
            T.Serial AS [Task_ImportedStockInDetailSerial.Serial], 
            T.AdditionalSerial AS [Task_ImportedStockInDetailSerial.AdditionalSerial], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_ImportedStockInDetailSerial AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_ImportedStockInNos.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView363()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_ImportedStockInNos
        [BTS_OPSModel.Task_ImportedStockInNos](T1.[Task_ImportedStockInNos.Id], T1.[Task_ImportedStockInNos.StockInNo], T1.[Task_ImportedStockInNos.Year], T1.[Task_ImportedStockInNos.CompanyId])
    FROM (
        SELECT 
            T.Id AS [Task_ImportedStockInNos.Id], 
            T.StockInNo AS [Task_ImportedStockInNos.StockInNo], 
            T.Year AS [Task_ImportedStockInNos.Year], 
            T.CompanyId AS [Task_ImportedStockInNos.CompanyId], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_ImportedStockInNos AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_ItemRequisition.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView364()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_ItemRequisition
        [BTS_OPSModel.Task_ItemRequisition](T1.[Task_ItemRequisition.RequisitionId], T1.[Task_ItemRequisition.RequisitionNo], T1.[Task_ItemRequisition.RequisitionDate], T1.[Task_ItemRequisition.RequestedBy], T1.[Task_ItemRequisition.Remarks], T1.[Task_ItemRequisition.IsSettled], T1.[Task_ItemRequisition.Approved], T1.[Task_ItemRequisition.ApprovedBy], T1.[Task_ItemRequisition.ApprovedDate], T1.[Task_ItemRequisition.CancelReason], T1.[Task_ItemRequisition.LocationId], T1.[Task_ItemRequisition.CompanyId], T1.[Task_ItemRequisition.EntryBy], T1.[Task_ItemRequisition.EntryDate])
    FROM (
        SELECT 
            T.RequisitionId AS [Task_ItemRequisition.RequisitionId], 
            T.RequisitionNo AS [Task_ItemRequisition.RequisitionNo], 
            T.RequisitionDate AS [Task_ItemRequisition.RequisitionDate], 
            T.RequestedBy AS [Task_ItemRequisition.RequestedBy], 
            T.Remarks AS [Task_ItemRequisition.Remarks], 
            T.IsSettled AS [Task_ItemRequisition.IsSettled], 
            T.Approved AS [Task_ItemRequisition.Approved], 
            T.ApprovedBy AS [Task_ItemRequisition.ApprovedBy], 
            T.ApprovedDate AS [Task_ItemRequisition.ApprovedDate], 
            T.CancelReason AS [Task_ItemRequisition.CancelReason], 
            T.LocationId AS [Task_ItemRequisition.LocationId], 
            T.CompanyId AS [Task_ItemRequisition.CompanyId], 
            T.EntryBy AS [Task_ItemRequisition.EntryBy], 
            T.EntryDate AS [Task_ItemRequisition.EntryDate], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_ItemRequisition AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_ItemRequisitionDetail.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView365()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_ItemRequisitionDetail
        [BTS_OPSModel.Task_ItemRequisitionDetail](T1.[Task_ItemRequisitionDetail.RequisitionDetailId], T1.[Task_ItemRequisitionDetail.RequisitionId], T1.[Task_ItemRequisitionDetail.ProductId], T1.[Task_ItemRequisitionDetail.ProductDimensionId], T1.[Task_ItemRequisitionDetail.UnitTypeId], T1.[Task_ItemRequisitionDetail.Quantity], T1.[Task_ItemRequisitionDetail.FinalizedQuantity], T1.[Task_ItemRequisitionDetail.RequiredDate], T1.[Task_ItemRequisitionDetail.Reason])
    FROM (
        SELECT 
            T.RequisitionDetailId AS [Task_ItemRequisitionDetail.RequisitionDetailId], 
            T.RequisitionId AS [Task_ItemRequisitionDetail.RequisitionId], 
            T.ProductId AS [Task_ItemRequisitionDetail.ProductId], 
            T.ProductDimensionId AS [Task_ItemRequisitionDetail.ProductDimensionId], 
            T.UnitTypeId AS [Task_ItemRequisitionDetail.UnitTypeId], 
            T.Quantity AS [Task_ItemRequisitionDetail.Quantity], 
            T.FinalizedQuantity AS [Task_ItemRequisitionDetail.FinalizedQuantity], 
            T.RequiredDate AS [Task_ItemRequisitionDetail.RequiredDate], 
            T.Reason AS [Task_ItemRequisitionDetail.Reason], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_ItemRequisitionDetail AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_ItemRequisitionNos.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView366()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_ItemRequisitionNos
        [BTS_OPSModel.Task_ItemRequisitionNos](T1.[Task_ItemRequisitionNos.Id], T1.[Task_ItemRequisitionNos.RequisitionNo], T1.[Task_ItemRequisitionNos.Year], T1.[Task_ItemRequisitionNos.CompanyId])
    FROM (
        SELECT 
            T.Id AS [Task_ItemRequisitionNos.Id], 
            T.RequisitionNo AS [Task_ItemRequisitionNos.RequisitionNo], 
            T.Year AS [Task_ItemRequisitionNos.Year], 
            T.CompanyId AS [Task_ItemRequisitionNos.CompanyId], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_ItemRequisitionNos AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_LCOpening.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView367()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_LCOpening
        [BTS_OPSModel.Task_LCOpening](T1.[Task_LCOpening.LCId], T1.[Task_LCOpening.LCNo], T1.[Task_LCOpening.LCDate], T1.[Task_LCOpening.ProformaInvoiceId], T1.[Task_LCOpening.ImporterBankId], T1.[Task_LCOpening.SupplierBankId], T1.[Task_LCOpening.SupplierId], T1.[Task_LCOpening.LCSupplierId], T1.[Task_LCOpening.SelectedCurrency], T1.[Task_LCOpening.Currency1Rate], T1.[Task_LCOpening.Currency2Rate], T1.[Task_LCOpening.LCAmount], T1.[Task_LCOpening.LCAmount1], T1.[Task_LCOpening.LCAmount2], T1.[Task_LCOpening.LCMargin], T1.[Task_LCOpening.LCMarginAmount], T1.[Task_LCOpening.LCMarginAmount1], T1.[Task_LCOpening.LCMarginAmount2], T1.[Task_LCOpening.LTRAmount], T1.[Task_LCOpening.LTRAmount1], T1.[Task_LCOpening.LTRAmount2], T1.[Task_LCOpening.LTRNo], T1.[Task_LCOpening.ReferenceNo], T1.[Task_LCOpening.ReferenceDate], T1.[Task_LCOpening.IsSettledByImportCosting], T1.[Task_LCOpening.Approved], T1.[Task_LCOpening.ApprovedBy], T1.[Task_LCOpening.ApprovedDate], T1.[Task_LCOpening.CancelReason], T1.[Task_LCOpening.LocationId], T1.[Task_LCOpening.CompanyId], T1.[Task_LCOpening.EntryBy], T1.[Task_LCOpening.EntryDate])
    FROM (
        SELECT 
            T.LCId AS [Task_LCOpening.LCId], 
            T.LCNo AS [Task_LCOpening.LCNo], 
            T.LCDate AS [Task_LCOpening.LCDate], 
            T.ProformaInvoiceId AS [Task_LCOpening.ProformaInvoiceId], 
            T.ImporterBankId AS [Task_LCOpening.ImporterBankId], 
            T.SupplierBankId AS [Task_LCOpening.SupplierBankId], 
            T.SupplierId AS [Task_LCOpening.SupplierId], 
            T.LCSupplierId AS [Task_LCOpening.LCSupplierId], 
            T.SelectedCurrency AS [Task_LCOpening.SelectedCurrency], 
            T.Currency1Rate AS [Task_LCOpening.Currency1Rate], 
            T.Currency2Rate AS [Task_LCOpening.Currency2Rate], 
            T.LCAmount AS [Task_LCOpening.LCAmount], 
            T.LCAmount1 AS [Task_LCOpening.LCAmount1], 
            T.LCAmount2 AS [Task_LCOpening.LCAmount2], 
            T.LCMargin AS [Task_LCOpening.LCMargin], 
            T.LCMarginAmount AS [Task_LCOpening.LCMarginAmount], 
            T.LCMarginAmount1 AS [Task_LCOpening.LCMarginAmount1], 
            T.LCMarginAmount2 AS [Task_LCOpening.LCMarginAmount2], 
            T.LTRAmount AS [Task_LCOpening.LTRAmount], 
            T.LTRAmount1 AS [Task_LCOpening.LTRAmount1], 
            T.LTRAmount2 AS [Task_LCOpening.LTRAmount2], 
            T.LTRNo AS [Task_LCOpening.LTRNo], 
            T.ReferenceNo AS [Task_LCOpening.ReferenceNo], 
            T.ReferenceDate AS [Task_LCOpening.ReferenceDate], 
            T.IsSettledByImportCosting AS [Task_LCOpening.IsSettledByImportCosting], 
            T.Approved AS [Task_LCOpening.Approved], 
            T.ApprovedBy AS [Task_LCOpening.ApprovedBy], 
            T.ApprovedDate AS [Task_LCOpening.ApprovedDate], 
            T.CancelReason AS [Task_LCOpening.CancelReason], 
            T.LocationId AS [Task_LCOpening.LocationId], 
            T.CompanyId AS [Task_LCOpening.CompanyId], 
            T.EntryBy AS [Task_LCOpening.EntryBy], 
            T.EntryDate AS [Task_LCOpening.EntryDate], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_LCOpening AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_LCOpeningNos.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView368()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_LCOpeningNos
        [BTS_OPSModel.Task_LCOpeningNos](T1.[Task_LCOpeningNos.Id], T1.[Task_LCOpeningNos.LCOpeningNo], T1.[Task_LCOpeningNos.Year], T1.[Task_LCOpeningNos.CompanyId])
    FROM (
        SELECT 
            T.Id AS [Task_LCOpeningNos.Id], 
            T.LCOpeningNo AS [Task_LCOpeningNos.LCOpeningNo], 
            T.Year AS [Task_LCOpeningNos.Year], 
            T.CompanyId AS [Task_LCOpeningNos.CompanyId], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_LCOpeningNos AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_LIMStockIn.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView369()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_LIMStockIn
        [BTS_OPSModel.Task_LIMStockIn](T1.[Task_LIMStockIn.StockInId], T1.[Task_LIMStockIn.StockInNo], T1.[Task_LIMStockIn.StockInDate], T1.[Task_LIMStockIn.LIMAgainst], T1.[Task_LIMStockIn.ProformaInvoiceId], T1.[Task_LIMStockIn.PartShipmentNo], T1.[Task_LIMStockIn.SelectedCurrency], T1.[Task_LIMStockIn.Currency1Rate], T1.[Task_LIMStockIn.Currency2Rate], T1.[Task_LIMStockIn.ReferenceNo], T1.[Task_LIMStockIn.ReferenceDate], T1.[Task_LIMStockIn.Remarks], T1.[Task_LIMStockIn.StockInAmount], T1.[Task_LIMStockIn.StockIn1Amount], T1.[Task_LIMStockIn.StockIn2Amount], T1.[Task_LIMStockIn.IsSettledByImportIn], T1.[Task_LIMStockIn.Approved], T1.[Task_LIMStockIn.ApprovedBy], T1.[Task_LIMStockIn.ApprovedDate], T1.[Task_LIMStockIn.CancelReason], T1.[Task_LIMStockIn.LocationId], T1.[Task_LIMStockIn.CompanyId], T1.[Task_LIMStockIn.EntryBy], T1.[Task_LIMStockIn.EntryDate])
    FROM (
        SELECT 
            T.StockInId AS [Task_LIMStockIn.StockInId], 
            T.StockInNo AS [Task_LIMStockIn.StockInNo], 
            T.StockInDate AS [Task_LIMStockIn.StockInDate], 
            T.LIMAgainst AS [Task_LIMStockIn.LIMAgainst], 
            T.ProformaInvoiceId AS [Task_LIMStockIn.ProformaInvoiceId], 
            T.PartShipmentNo AS [Task_LIMStockIn.PartShipmentNo], 
            T.SelectedCurrency AS [Task_LIMStockIn.SelectedCurrency], 
            T.Currency1Rate AS [Task_LIMStockIn.Currency1Rate], 
            T.Currency2Rate AS [Task_LIMStockIn.Currency2Rate], 
            T.ReferenceNo AS [Task_LIMStockIn.ReferenceNo], 
            T.ReferenceDate AS [Task_LIMStockIn.ReferenceDate], 
            T.Remarks AS [Task_LIMStockIn.Remarks], 
            T.StockInAmount AS [Task_LIMStockIn.StockInAmount], 
            T.StockIn1Amount AS [Task_LIMStockIn.StockIn1Amount], 
            T.StockIn2Amount AS [Task_LIMStockIn.StockIn2Amount], 
            T.IsSettledByImportIn AS [Task_LIMStockIn.IsSettledByImportIn], 
            T.Approved AS [Task_LIMStockIn.Approved], 
            T.ApprovedBy AS [Task_LIMStockIn.ApprovedBy], 
            T.ApprovedDate AS [Task_LIMStockIn.ApprovedDate], 
            T.CancelReason AS [Task_LIMStockIn.CancelReason], 
            T.LocationId AS [Task_LIMStockIn.LocationId], 
            T.CompanyId AS [Task_LIMStockIn.CompanyId], 
            T.EntryBy AS [Task_LIMStockIn.EntryBy], 
            T.EntryDate AS [Task_LIMStockIn.EntryDate], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_LIMStockIn AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_LIMStockInDetail.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView370()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_LIMStockInDetail
        [BTS_OPSModel.Task_LIMStockInDetail](T1.[Task_LIMStockInDetail.StockInDetailId], T1.[Task_LIMStockInDetail.StockInId], T1.[Task_LIMStockInDetail.PurchaseOrderNo], T1.[Task_LIMStockInDetail.ProductId], T1.[Task_LIMStockInDetail.ProductDimensionId], T1.[Task_LIMStockInDetail.UnitTypeId], T1.[Task_LIMStockInDetail.Quantity], T1.[Task_LIMStockInDetail.NoCostQuantity], T1.[Task_LIMStockInDetail.ImportInQuantity], T1.[Task_LIMStockInDetail.ImportInNoCostQuantity], T1.[Task_LIMStockInDetail.Price], T1.[Task_LIMStockInDetail.Price1], T1.[Task_LIMStockInDetail.Price2], T1.[Task_LIMStockInDetail.PrimaryUnitTypeId], T1.[Task_LIMStockInDetail.SecondaryUnitTypeId], T1.[Task_LIMStockInDetail.TertiaryUnitTypeId], T1.[Task_LIMStockInDetail.SecondaryConversionRatio], T1.[Task_LIMStockInDetail.TertiaryConversionRatio])
    FROM (
        SELECT 
            T.StockInDetailId AS [Task_LIMStockInDetail.StockInDetailId], 
            T.StockInId AS [Task_LIMStockInDetail.StockInId], 
            T.PurchaseOrderNo AS [Task_LIMStockInDetail.PurchaseOrderNo], 
            T.ProductId AS [Task_LIMStockInDetail.ProductId], 
            T.ProductDimensionId AS [Task_LIMStockInDetail.ProductDimensionId], 
            T.UnitTypeId AS [Task_LIMStockInDetail.UnitTypeId], 
            T.Quantity AS [Task_LIMStockInDetail.Quantity], 
            T.NoCostQuantity AS [Task_LIMStockInDetail.NoCostQuantity], 
            T.ImportInQuantity AS [Task_LIMStockInDetail.ImportInQuantity], 
            T.ImportInNoCostQuantity AS [Task_LIMStockInDetail.ImportInNoCostQuantity], 
            T.Price AS [Task_LIMStockInDetail.Price], 
            T.Price1 AS [Task_LIMStockInDetail.Price1], 
            T.Price2 AS [Task_LIMStockInDetail.Price2], 
            T.PrimaryUnitTypeId AS [Task_LIMStockInDetail.PrimaryUnitTypeId], 
            T.SecondaryUnitTypeId AS [Task_LIMStockInDetail.SecondaryUnitTypeId], 
            T.TertiaryUnitTypeId AS [Task_LIMStockInDetail.TertiaryUnitTypeId], 
            T.SecondaryConversionRatio AS [Task_LIMStockInDetail.SecondaryConversionRatio], 
            T.TertiaryConversionRatio AS [Task_LIMStockInDetail.TertiaryConversionRatio], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_LIMStockInDetail AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_LIMStockInNos.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView371()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_LIMStockInNos
        [BTS_OPSModel.Task_LIMStockInNos](T1.[Task_LIMStockInNos.Id], T1.[Task_LIMStockInNos.StockInNo], T1.[Task_LIMStockInNos.Year], T1.[Task_LIMStockInNos.CompanyId])
    FROM (
        SELECT 
            T.Id AS [Task_LIMStockInNos.Id], 
            T.StockInNo AS [Task_LIMStockInNos.StockInNo], 
            T.Year AS [Task_LIMStockInNos.Year], 
            T.CompanyId AS [Task_LIMStockInNos.CompanyId], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_LIMStockInNos AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_PartyAdjustment.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView372()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_PartyAdjustment
        [BTS_OPSModel.Task_PartyAdjustment](T1.[Task_PartyAdjustment.AdjustmentId], T1.[Task_PartyAdjustment.AdjustmentNo], T1.[Task_PartyAdjustment.AdjustmentDate], T1.[Task_PartyAdjustment.SelectedCurrency], T1.[Task_PartyAdjustment.Currency1Rate], T1.[Task_PartyAdjustment.Currency2Rate], T1.[Task_PartyAdjustment.AdjustmentFor], T1.[Task_PartyAdjustment.AdjustmentNature], T1.[Task_PartyAdjustment.AdjustmentType], T1.[Task_PartyAdjustment.TransactionFrom], T1.[Task_PartyAdjustment.ReferenceNo], T1.[Task_PartyAdjustment.Remarks], T1.[Task_PartyAdjustment.TotalAmount], T1.[Task_PartyAdjustment.TotalAmount1], T1.[Task_PartyAdjustment.TotalAmount2], T1.[Task_PartyAdjustment.Approved], T1.[Task_PartyAdjustment.ApprovedBy], T1.[Task_PartyAdjustment.ApprovedDate], T1.[Task_PartyAdjustment.CancelReason], T1.[Task_PartyAdjustment.VoucherId], T1.[Task_PartyAdjustment.LocationId], T1.[Task_PartyAdjustment.CompanyId], T1.[Task_PartyAdjustment.EntryBy], T1.[Task_PartyAdjustment.EntryDate])
    FROM (
        SELECT 
            T.AdjustmentId AS [Task_PartyAdjustment.AdjustmentId], 
            T.AdjustmentNo AS [Task_PartyAdjustment.AdjustmentNo], 
            T.AdjustmentDate AS [Task_PartyAdjustment.AdjustmentDate], 
            T.SelectedCurrency AS [Task_PartyAdjustment.SelectedCurrency], 
            T.Currency1Rate AS [Task_PartyAdjustment.Currency1Rate], 
            T.Currency2Rate AS [Task_PartyAdjustment.Currency2Rate], 
            T.AdjustmentFor AS [Task_PartyAdjustment.AdjustmentFor], 
            T.AdjustmentNature AS [Task_PartyAdjustment.AdjustmentNature], 
            T.AdjustmentType AS [Task_PartyAdjustment.AdjustmentType], 
            T.TransactionFrom AS [Task_PartyAdjustment.TransactionFrom], 
            T.ReferenceNo AS [Task_PartyAdjustment.ReferenceNo], 
            T.Remarks AS [Task_PartyAdjustment.Remarks], 
            T.TotalAmount AS [Task_PartyAdjustment.TotalAmount], 
            T.TotalAmount1 AS [Task_PartyAdjustment.TotalAmount1], 
            T.TotalAmount2 AS [Task_PartyAdjustment.TotalAmount2], 
            T.Approved AS [Task_PartyAdjustment.Approved], 
            T.ApprovedBy AS [Task_PartyAdjustment.ApprovedBy], 
            T.ApprovedDate AS [Task_PartyAdjustment.ApprovedDate], 
            T.CancelReason AS [Task_PartyAdjustment.CancelReason], 
            T.VoucherId AS [Task_PartyAdjustment.VoucherId], 
            T.LocationId AS [Task_PartyAdjustment.LocationId], 
            T.CompanyId AS [Task_PartyAdjustment.CompanyId], 
            T.EntryBy AS [Task_PartyAdjustment.EntryBy], 
            T.EntryDate AS [Task_PartyAdjustment.EntryDate], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_PartyAdjustment AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_PartyAdjustmentDetail.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView373()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_PartyAdjustmentDetail
        [BTS_OPSModel.Task_PartyAdjustmentDetail](T1.[Task_PartyAdjustmentDetail.AdjustmentDetailId], T1.[Task_PartyAdjustmentDetail.AdjustmentId], T1.[Task_PartyAdjustmentDetail.CustomerId], T1.[Task_PartyAdjustmentDetail.SupplierId], T1.[Task_PartyAdjustmentDetail.Particulars], T1.[Task_PartyAdjustmentDetail.AdjustedAmount], T1.[Task_PartyAdjustmentDetail.AdjustedAmount1], T1.[Task_PartyAdjustmentDetail.AdjustedAmount2])
    FROM (
        SELECT 
            T.AdjustmentDetailId AS [Task_PartyAdjustmentDetail.AdjustmentDetailId], 
            T.AdjustmentId AS [Task_PartyAdjustmentDetail.AdjustmentId], 
            T.CustomerId AS [Task_PartyAdjustmentDetail.CustomerId], 
            T.SupplierId AS [Task_PartyAdjustmentDetail.SupplierId], 
            T.Particulars AS [Task_PartyAdjustmentDetail.Particulars], 
            T.AdjustedAmount AS [Task_PartyAdjustmentDetail.AdjustedAmount], 
            T.AdjustedAmount1 AS [Task_PartyAdjustmentDetail.AdjustedAmount1], 
            T.AdjustedAmount2 AS [Task_PartyAdjustmentDetail.AdjustedAmount2], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_PartyAdjustmentDetail AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_PartyAdjustmentNos.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView374()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_PartyAdjustmentNos
        [BTS_OPSModel.Task_PartyAdjustmentNos](T1.[Task_PartyAdjustmentNos.Id], T1.[Task_PartyAdjustmentNos.AdjustmentNo], T1.[Task_PartyAdjustmentNos.Year], T1.[Task_PartyAdjustmentNos.CompanyId])
    FROM (
        SELECT 
            T.Id AS [Task_PartyAdjustmentNos.Id], 
            T.AdjustmentNo AS [Task_PartyAdjustmentNos.AdjustmentNo], 
            T.Year AS [Task_PartyAdjustmentNos.Year], 
            T.CompanyId AS [Task_PartyAdjustmentNos.CompanyId], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_PartyAdjustmentNos AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_Payment.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView375()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_Payment
        [BTS_OPSModel.Task_Payment](T1.[Task_Payment.PaymentId], T1.[Task_Payment.PaymentNo], T1.[Task_Payment.PaymentDate], T1.[Task_Payment.PaymentAgainst], T1.[Task_Payment.SupplierId], T1.[Task_Payment.PaidBy], T1.[Task_Payment.SelectedCurrency], T1.[Task_Payment.Currency1Rate], T1.[Task_Payment.Currency2Rate], T1.[Task_Payment.PaidAmount], T1.[Task_Payment.PaidAmount1], T1.[Task_Payment.PaidAmount2], T1.[Task_Payment.SecurityDeposit], T1.[Task_Payment.SecurityDeposit1], T1.[Task_Payment.SecurityDeposit2], T1.[Task_Payment.RecoveryDate], T1.[Task_Payment.OthersAdjustment], T1.[Task_Payment.OthersAdjustment1], T1.[Task_Payment.OthersAdjustment2], T1.[Task_Payment.ReferenceNo], T1.[Task_Payment.Remarks], T1.[Task_Payment.OperationTypeId], T1.[Task_Payment.OperationalEventId], T1.[Task_Payment.Approved], T1.[Task_Payment.ApprovedBy], T1.[Task_Payment.ApprovedDate], T1.[Task_Payment.CancelReason], T1.[Task_Payment.VoucherId], T1.[Task_Payment.LocationId], T1.[Task_Payment.CompanyId], T1.[Task_Payment.EntryBy], T1.[Task_Payment.EntryDate], T1.[Task_Payment.EditedBy], T1.[Task_Payment.EditedDate])
    FROM (
        SELECT 
            T.PaymentId AS [Task_Payment.PaymentId], 
            T.PaymentNo AS [Task_Payment.PaymentNo], 
            T.PaymentDate AS [Task_Payment.PaymentDate], 
            T.PaymentAgainst AS [Task_Payment.PaymentAgainst], 
            T.SupplierId AS [Task_Payment.SupplierId], 
            T.PaidBy AS [Task_Payment.PaidBy], 
            T.SelectedCurrency AS [Task_Payment.SelectedCurrency], 
            T.Currency1Rate AS [Task_Payment.Currency1Rate], 
            T.Currency2Rate AS [Task_Payment.Currency2Rate], 
            T.PaidAmount AS [Task_Payment.PaidAmount], 
            T.PaidAmount1 AS [Task_Payment.PaidAmount1], 
            T.PaidAmount2 AS [Task_Payment.PaidAmount2], 
            T.SecurityDeposit AS [Task_Payment.SecurityDeposit], 
            T.SecurityDeposit1 AS [Task_Payment.SecurityDeposit1], 
            T.SecurityDeposit2 AS [Task_Payment.SecurityDeposit2], 
            T.RecoveryDate AS [Task_Payment.RecoveryDate], 
            T.OthersAdjustment AS [Task_Payment.OthersAdjustment], 
            T.OthersAdjustment1 AS [Task_Payment.OthersAdjustment1], 
            T.OthersAdjustment2 AS [Task_Payment.OthersAdjustment2], 
            T.ReferenceNo AS [Task_Payment.ReferenceNo], 
            T.Remarks AS [Task_Payment.Remarks], 
            T.OperationTypeId AS [Task_Payment.OperationTypeId], 
            T.OperationalEventId AS [Task_Payment.OperationalEventId], 
            T.Approved AS [Task_Payment.Approved], 
            T.ApprovedBy AS [Task_Payment.ApprovedBy], 
            T.ApprovedDate AS [Task_Payment.ApprovedDate], 
            T.CancelReason AS [Task_Payment.CancelReason], 
            T.VoucherId AS [Task_Payment.VoucherId], 
            T.LocationId AS [Task_Payment.LocationId], 
            T.CompanyId AS [Task_Payment.CompanyId], 
            T.EntryBy AS [Task_Payment.EntryBy], 
            T.EntryDate AS [Task_Payment.EntryDate], 
            T.EditedBy AS [Task_Payment.EditedBy], 
            T.EditedDate AS [Task_Payment.EditedDate], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_Payment AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_Payment_GovtDutyAdjustment.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView376()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_Payment_GovtDutyAdjustment
        [BTS_OPSModel.Task_Payment_GovtDutyAdjustment](T1.[Task_Payment_GovtDutyAdjustment.PaymentAdjustmentId], T1.[Task_Payment_GovtDutyAdjustment.PaymentId], T1.[Task_Payment_GovtDutyAdjustment.GovtDutyAdjustmentId], T1.[Task_Payment_GovtDutyAdjustment.Amount], T1.[Task_Payment_GovtDutyAdjustment.Amount1], T1.[Task_Payment_GovtDutyAdjustment.Amount2])
    FROM (
        SELECT 
            T.PaymentAdjustmentId AS [Task_Payment_GovtDutyAdjustment.PaymentAdjustmentId], 
            T.PaymentId AS [Task_Payment_GovtDutyAdjustment.PaymentId], 
            T.GovtDutyAdjustmentId AS [Task_Payment_GovtDutyAdjustment.GovtDutyAdjustmentId], 
            T.Amount AS [Task_Payment_GovtDutyAdjustment.Amount], 
            T.Amount1 AS [Task_Payment_GovtDutyAdjustment.Amount1], 
            T.Amount2 AS [Task_Payment_GovtDutyAdjustment.Amount2], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_Payment_GovtDutyAdjustment AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_PaymentDetail.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView377()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_PaymentDetail
        [BTS_OPSModel.Task_PaymentDetail](T1.[Task_PaymentDetail.PaymentDetailId], T1.[Task_PaymentDetail.PaymentId], T1.[Task_PaymentDetail.PaymentModeId], T1.[Task_PaymentDetail.Amount], T1.[Task_PaymentDetail.Amount1], T1.[Task_PaymentDetail.Amount2], T1.[Task_PaymentDetail.VoucherId])
    FROM (
        SELECT 
            T.PaymentDetailId AS [Task_PaymentDetail.PaymentDetailId], 
            T.PaymentId AS [Task_PaymentDetail.PaymentId], 
            T.PaymentModeId AS [Task_PaymentDetail.PaymentModeId], 
            T.Amount AS [Task_PaymentDetail.Amount], 
            T.Amount1 AS [Task_PaymentDetail.Amount1], 
            T.Amount2 AS [Task_PaymentDetail.Amount2], 
            T.VoucherId AS [Task_PaymentDetail.VoucherId], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_PaymentDetail AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_PaymentMapping.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView378()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_PaymentMapping
        [BTS_OPSModel.Task_PaymentMapping](T1.[Task_PaymentMapping.MappingId], T1.[Task_PaymentMapping.PaymentId], T1.[Task_PaymentMapping.OrderId], T1.[Task_PaymentMapping.ReceiveId], T1.[Task_PaymentMapping.FinalizeId], T1.[Task_PaymentMapping.Amount], T1.[Task_PaymentMapping.Amount1], T1.[Task_PaymentMapping.Amount2])
    FROM (
        SELECT 
            T.MappingId AS [Task_PaymentMapping.MappingId], 
            T.PaymentId AS [Task_PaymentMapping.PaymentId], 
            T.OrderId AS [Task_PaymentMapping.OrderId], 
            T.ReceiveId AS [Task_PaymentMapping.ReceiveId], 
            T.FinalizeId AS [Task_PaymentMapping.FinalizeId], 
            T.Amount AS [Task_PaymentMapping.Amount], 
            T.Amount1 AS [Task_PaymentMapping.Amount1], 
            T.Amount2 AS [Task_PaymentMapping.Amount2], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_PaymentMapping AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_PaymentNos.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView379()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_PaymentNos
        [BTS_OPSModel.Task_PaymentNos](T1.[Task_PaymentNos.Id], T1.[Task_PaymentNos.PaymentNo], T1.[Task_PaymentNos.Year], T1.[Task_PaymentNos.CompanyId])
    FROM (
        SELECT 
            T.Id AS [Task_PaymentNos.Id], 
            T.PaymentNo AS [Task_PaymentNos.PaymentNo], 
            T.Year AS [Task_PaymentNos.Year], 
            T.CompanyId AS [Task_PaymentNos.CompanyId], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_PaymentNos AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_PostedVoucher.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView380()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_PostedVoucher
        [BTS_OPSModel.Task_PostedVoucher](T1.[Task_PostedVoucher.PostedVoucherId], T1.[Task_PostedVoucher.Date], T1.[Task_PostedVoucher.VoucherDetailId], T1.[Task_PostedVoucher.VoucherType], T1.[Task_PostedVoucher.AccountsId], T1.[Task_PostedVoucher.ProjectId], T1.[Task_PostedVoucher.Amount], T1.[Task_PostedVoucher.Currency1Rate], T1.[Task_PostedVoucher.Currency1Amount], T1.[Task_PostedVoucher.Currency2Rate], T1.[Task_PostedVoucher.Currency2Amount], T1.[Task_PostedVoucher.OperationalEventId], T1.[Task_PostedVoucher.LocationId], T1.[Task_PostedVoucher.CompanyId], T1.[Task_PostedVoucher.EntryBy], T1.[Task_PostedVoucher.EntryDate])
    FROM (
        SELECT 
            T.PostedVoucherId AS [Task_PostedVoucher.PostedVoucherId], 
            T.Date AS [Task_PostedVoucher.Date], 
            T.VoucherDetailId AS [Task_PostedVoucher.VoucherDetailId], 
            T.VoucherType AS [Task_PostedVoucher.VoucherType], 
            T.AccountsId AS [Task_PostedVoucher.AccountsId], 
            T.ProjectId AS [Task_PostedVoucher.ProjectId], 
            T.Amount AS [Task_PostedVoucher.Amount], 
            T.Currency1Rate AS [Task_PostedVoucher.Currency1Rate], 
            T.Currency1Amount AS [Task_PostedVoucher.Currency1Amount], 
            T.Currency2Rate AS [Task_PostedVoucher.Currency2Rate], 
            T.Currency2Amount AS [Task_PostedVoucher.Currency2Amount], 
            T.OperationalEventId AS [Task_PostedVoucher.OperationalEventId], 
            T.LocationId AS [Task_PostedVoucher.LocationId], 
            T.CompanyId AS [Task_PostedVoucher.CompanyId], 
            T.EntryBy AS [Task_PostedVoucher.EntryBy], 
            T.EntryDate AS [Task_PostedVoucher.EntryDate], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_PostedVoucher AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_ProformaInvoice.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView381()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_ProformaInvoice
        [BTS_OPSModel.Task_ProformaInvoice](T1.[Task_ProformaInvoice.InvoiceId], T1.[Task_ProformaInvoice.InvoiceNo], T1.[Task_ProformaInvoice.InvoiceDate], T1.[Task_ProformaInvoice.SupplierId], T1.[Task_ProformaInvoice.SelectedCurrency], T1.[Task_ProformaInvoice.Currency1Rate], T1.[Task_ProformaInvoice.Currency2Rate], T1.[Task_ProformaInvoice.AmendmentNo], T1.[Task_ProformaInvoice.ShipmentMode], T1.[Task_ProformaInvoice.Incoterms], T1.[Task_ProformaInvoice.ReferenceNo], T1.[Task_ProformaInvoice.OperationTypeId], T1.[Task_ProformaInvoice.PortOfLoadingId], T1.[Task_ProformaInvoice.PortOfDischargeId], T1.[Task_ProformaInvoice.InvoiceAmount], T1.[Task_ProformaInvoice.Invoice1Amount], T1.[Task_ProformaInvoice.Invoice2Amount], T1.[Task_ProformaInvoice.TermsAndConditionsId], T1.[Task_ProformaInvoice.TermsAndConditionsDetail], T1.[Task_ProformaInvoice.IsSettledByLCOpening], T1.[Task_ProformaInvoice.Approved], T1.[Task_ProformaInvoice.ApprovedBy], T1.[Task_ProformaInvoice.ApprovedDate], T1.[Task_ProformaInvoice.CancelReason], T1.[Task_ProformaInvoice.LocationId], T1.[Task_ProformaInvoice.CompanyId], T1.[Task_ProformaInvoice.EntryBy], T1.[Task_ProformaInvoice.EntryDate])
    FROM (
        SELECT 
            T.InvoiceId AS [Task_ProformaInvoice.InvoiceId], 
            T.InvoiceNo AS [Task_ProformaInvoice.InvoiceNo], 
            T.InvoiceDate AS [Task_ProformaInvoice.InvoiceDate], 
            T.SupplierId AS [Task_ProformaInvoice.SupplierId], 
            T.SelectedCurrency AS [Task_ProformaInvoice.SelectedCurrency], 
            T.Currency1Rate AS [Task_ProformaInvoice.Currency1Rate], 
            T.Currency2Rate AS [Task_ProformaInvoice.Currency2Rate], 
            T.AmendmentNo AS [Task_ProformaInvoice.AmendmentNo], 
            T.ShipmentMode AS [Task_ProformaInvoice.ShipmentMode], 
            T.Incoterms AS [Task_ProformaInvoice.Incoterms], 
            T.ReferenceNo AS [Task_ProformaInvoice.ReferenceNo], 
            T.OperationTypeId AS [Task_ProformaInvoice.OperationTypeId], 
            T.PortOfLoadingId AS [Task_ProformaInvoice.PortOfLoadingId], 
            T.PortOfDischargeId AS [Task_ProformaInvoice.PortOfDischargeId], 
            T.InvoiceAmount AS [Task_ProformaInvoice.InvoiceAmount], 
            T.Invoice1Amount AS [Task_ProformaInvoice.Invoice1Amount], 
            T.Invoice2Amount AS [Task_ProformaInvoice.Invoice2Amount], 
            T.TermsAndConditionsId AS [Task_ProformaInvoice.TermsAndConditionsId], 
            T.TermsAndConditionsDetail AS [Task_ProformaInvoice.TermsAndConditionsDetail], 
            T.IsSettledByLCOpening AS [Task_ProformaInvoice.IsSettledByLCOpening], 
            T.Approved AS [Task_ProformaInvoice.Approved], 
            T.ApprovedBy AS [Task_ProformaInvoice.ApprovedBy], 
            T.ApprovedDate AS [Task_ProformaInvoice.ApprovedDate], 
            T.CancelReason AS [Task_ProformaInvoice.CancelReason], 
            T.LocationId AS [Task_ProformaInvoice.LocationId], 
            T.CompanyId AS [Task_ProformaInvoice.CompanyId], 
            T.EntryBy AS [Task_ProformaInvoice.EntryBy], 
            T.EntryDate AS [Task_ProformaInvoice.EntryDate], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_ProformaInvoice AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_ProformaInvoiceDetail.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView382()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_ProformaInvoiceDetail
        [BTS_OPSModel.Task_ProformaInvoiceDetail](T1.[Task_ProformaInvoiceDetail.InvoiceDetailId], T1.[Task_ProformaInvoiceDetail.InvoiceId], T1.[Task_ProformaInvoiceDetail.PurchaseOrderId], T1.[Task_ProformaInvoiceDetail.ProductId], T1.[Task_ProformaInvoiceDetail.ProductDimensionId], T1.[Task_ProformaInvoiceDetail.UnitTypeId], T1.[Task_ProformaInvoiceDetail.Quantity], T1.[Task_ProformaInvoiceDetail.LIMStockInQuantity], T1.[Task_ProformaInvoiceDetail.Price], T1.[Task_ProformaInvoiceDetail.Price1], T1.[Task_ProformaInvoiceDetail.Price2], T1.[Task_ProformaInvoiceDetail.WeightOrCBM], T1.[Task_ProformaInvoiceDetail.PackingUnitTypeId], T1.[Task_ProformaInvoiceDetail.PackingQuantity])
    FROM (
        SELECT 
            T.InvoiceDetailId AS [Task_ProformaInvoiceDetail.InvoiceDetailId], 
            T.InvoiceId AS [Task_ProformaInvoiceDetail.InvoiceId], 
            T.PurchaseOrderId AS [Task_ProformaInvoiceDetail.PurchaseOrderId], 
            T.ProductId AS [Task_ProformaInvoiceDetail.ProductId], 
            T.ProductDimensionId AS [Task_ProformaInvoiceDetail.ProductDimensionId], 
            T.UnitTypeId AS [Task_ProformaInvoiceDetail.UnitTypeId], 
            T.Quantity AS [Task_ProformaInvoiceDetail.Quantity], 
            T.LIMStockInQuantity AS [Task_ProformaInvoiceDetail.LIMStockInQuantity], 
            T.Price AS [Task_ProformaInvoiceDetail.Price], 
            T.Price1 AS [Task_ProformaInvoiceDetail.Price1], 
            T.Price2 AS [Task_ProformaInvoiceDetail.Price2], 
            T.WeightOrCBM AS [Task_ProformaInvoiceDetail.WeightOrCBM], 
            T.PackingUnitTypeId AS [Task_ProformaInvoiceDetail.PackingUnitTypeId], 
            T.PackingQuantity AS [Task_ProformaInvoiceDetail.PackingQuantity], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_ProformaInvoiceDetail AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_ProformaInvoiceNos.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView383()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_ProformaInvoiceNos
        [BTS_OPSModel.Task_ProformaInvoiceNos](T1.[Task_ProformaInvoiceNos.Id], T1.[Task_ProformaInvoiceNos.InvoiceNo], T1.[Task_ProformaInvoiceNos.Year], T1.[Task_ProformaInvoiceNos.CompanyId])
    FROM (
        SELECT 
            T.Id AS [Task_ProformaInvoiceNos.Id], 
            T.InvoiceNo AS [Task_ProformaInvoiceNos.InvoiceNo], 
            T.Year AS [Task_ProformaInvoiceNos.Year], 
            T.CompanyId AS [Task_ProformaInvoiceNos.CompanyId], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_ProformaInvoiceNos AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_PurchaseOrder.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView384()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_PurchaseOrder
        [BTS_OPSModel.Task_PurchaseOrder](T1.[Task_PurchaseOrder.OrderId], T1.[Task_PurchaseOrder.OrderNo], T1.[Task_PurchaseOrder.OrderDate], T1.[Task_PurchaseOrder.PurchaseType], T1.[Task_PurchaseOrder.SelectedCurrency], T1.[Task_PurchaseOrder.Currency1Rate], T1.[Task_PurchaseOrder.Currency2Rate], T1.[Task_PurchaseOrder.SupplierId], T1.[Task_PurchaseOrder.ReferenceNo], T1.[Task_PurchaseOrder.ReferenceDate], T1.[Task_PurchaseOrder.PaymentModeId], T1.[Task_PurchaseOrder.Remarks], T1.[Task_PurchaseOrder.TermsAndConditionsId], T1.[Task_PurchaseOrder.TermsAndConditionsDetail], T1.[Task_PurchaseOrder.PaymentTermsId], T1.[Task_PurchaseOrder.PaymentTermsDetail], T1.[Task_PurchaseOrder.ShipmentType], T1.[Task_PurchaseOrder.DeliveryTo], T1.[Task_PurchaseOrder.DeliveryContactNo], T1.[Task_PurchaseOrder.DeliveryDate], T1.[Task_PurchaseOrder.IsSettledByGoodsReceive], T1.[Task_PurchaseOrder.Approved], T1.[Task_PurchaseOrder.ApprovedBy], T1.[Task_PurchaseOrder.ApprovedDate], T1.[Task_PurchaseOrder.CancelReason], T1.[Task_PurchaseOrder.OrderAmount], T1.[Task_PurchaseOrder.Order1Amount], T1.[Task_PurchaseOrder.Order2Amount], T1.[Task_PurchaseOrder.PaidAmount], T1.[Task_PurchaseOrder.Paid1Amount], T1.[Task_PurchaseOrder.Paid2Amount], T1.[Task_PurchaseOrder.DiscountType], T1.[Task_PurchaseOrder.DiscountValue], T1.[Task_PurchaseOrder.Discount1Value], T1.[Task_PurchaseOrder.Discount2Value], T1.[Task_PurchaseOrder.DiscountAmount], T1.[Task_PurchaseOrder.Discount1Amount], T1.[Task_PurchaseOrder.Discount2Amount], T1.[Task_PurchaseOrder.LocationId], T1.[Task_PurchaseOrder.CompanyId], T1.[Task_PurchaseOrder.EntryBy], T1.[Task_PurchaseOrder.EntryDate])
    FROM (
        SELECT 
            T.OrderId AS [Task_PurchaseOrder.OrderId], 
            T.OrderNo AS [Task_PurchaseOrder.OrderNo], 
            T.OrderDate AS [Task_PurchaseOrder.OrderDate], 
            T.PurchaseType AS [Task_PurchaseOrder.PurchaseType], 
            T.SelectedCurrency AS [Task_PurchaseOrder.SelectedCurrency], 
            T.Currency1Rate AS [Task_PurchaseOrder.Currency1Rate], 
            T.Currency2Rate AS [Task_PurchaseOrder.Currency2Rate], 
            T.SupplierId AS [Task_PurchaseOrder.SupplierId], 
            T.ReferenceNo AS [Task_PurchaseOrder.ReferenceNo], 
            T.ReferenceDate AS [Task_PurchaseOrder.ReferenceDate], 
            T.PaymentModeId AS [Task_PurchaseOrder.PaymentModeId], 
            T.Remarks AS [Task_PurchaseOrder.Remarks], 
            T.TermsAndConditionsId AS [Task_PurchaseOrder.TermsAndConditionsId], 
            T.TermsAndConditionsDetail AS [Task_PurchaseOrder.TermsAndConditionsDetail], 
            T.PaymentTermsId AS [Task_PurchaseOrder.PaymentTermsId], 
            T.PaymentTermsDetail AS [Task_PurchaseOrder.PaymentTermsDetail], 
            T.ShipmentType AS [Task_PurchaseOrder.ShipmentType], 
            T.DeliveryTo AS [Task_PurchaseOrder.DeliveryTo], 
            T.DeliveryContactNo AS [Task_PurchaseOrder.DeliveryContactNo], 
            T.DeliveryDate AS [Task_PurchaseOrder.DeliveryDate], 
            T.IsSettledByGoodsReceive AS [Task_PurchaseOrder.IsSettledByGoodsReceive], 
            T.Approved AS [Task_PurchaseOrder.Approved], 
            T.ApprovedBy AS [Task_PurchaseOrder.ApprovedBy], 
            T.ApprovedDate AS [Task_PurchaseOrder.ApprovedDate], 
            T.CancelReason AS [Task_PurchaseOrder.CancelReason], 
            T.OrderAmount AS [Task_PurchaseOrder.OrderAmount], 
            T.Order1Amount AS [Task_PurchaseOrder.Order1Amount], 
            T.Order2Amount AS [Task_PurchaseOrder.Order2Amount], 
            T.PaidAmount AS [Task_PurchaseOrder.PaidAmount], 
            T.Paid1Amount AS [Task_PurchaseOrder.Paid1Amount], 
            T.Paid2Amount AS [Task_PurchaseOrder.Paid2Amount], 
            T.DiscountType AS [Task_PurchaseOrder.DiscountType], 
            T.DiscountValue AS [Task_PurchaseOrder.DiscountValue], 
            T.Discount1Value AS [Task_PurchaseOrder.Discount1Value], 
            T.Discount2Value AS [Task_PurchaseOrder.Discount2Value], 
            T.DiscountAmount AS [Task_PurchaseOrder.DiscountAmount], 
            T.Discount1Amount AS [Task_PurchaseOrder.Discount1Amount], 
            T.Discount2Amount AS [Task_PurchaseOrder.Discount2Amount], 
            T.LocationId AS [Task_PurchaseOrder.LocationId], 
            T.CompanyId AS [Task_PurchaseOrder.CompanyId], 
            T.EntryBy AS [Task_PurchaseOrder.EntryBy], 
            T.EntryDate AS [Task_PurchaseOrder.EntryDate], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_PurchaseOrder AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_PurchaseOrderDetail.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView385()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_PurchaseOrderDetail
        [BTS_OPSModel.Task_PurchaseOrderDetail](T1.[Task_PurchaseOrderDetail.OrderDetailId], T1.[Task_PurchaseOrderDetail.OrderId], T1.[Task_PurchaseOrderDetail.RequisitionId], T1.[Task_PurchaseOrderDetail.ProductId], T1.[Task_PurchaseOrderDetail.ProductDimensionId], T1.[Task_PurchaseOrderDetail.UnitTypeId], T1.[Task_PurchaseOrderDetail.Quantity], T1.[Task_PurchaseOrderDetail.ReceivedQuantity], T1.[Task_PurchaseOrderDetail.Price], T1.[Task_PurchaseOrderDetail.Price1], T1.[Task_PurchaseOrderDetail.Price2], T1.[Task_PurchaseOrderDetail.Discount], T1.[Task_PurchaseOrderDetail.Discount1], T1.[Task_PurchaseOrderDetail.Discount2], T1.[Task_PurchaseOrderDetail.PrimaryUnitTypeId], T1.[Task_PurchaseOrderDetail.SecondaryUnitTypeId], T1.[Task_PurchaseOrderDetail.TertiaryUnitTypeId], T1.[Task_PurchaseOrderDetail.SecondaryConversionRatio], T1.[Task_PurchaseOrderDetail.TertiaryConversionRatio])
    FROM (
        SELECT 
            T.OrderDetailId AS [Task_PurchaseOrderDetail.OrderDetailId], 
            T.OrderId AS [Task_PurchaseOrderDetail.OrderId], 
            T.RequisitionId AS [Task_PurchaseOrderDetail.RequisitionId], 
            T.ProductId AS [Task_PurchaseOrderDetail.ProductId], 
            T.ProductDimensionId AS [Task_PurchaseOrderDetail.ProductDimensionId], 
            T.UnitTypeId AS [Task_PurchaseOrderDetail.UnitTypeId], 
            T.Quantity AS [Task_PurchaseOrderDetail.Quantity], 
            T.ReceivedQuantity AS [Task_PurchaseOrderDetail.ReceivedQuantity], 
            T.Price AS [Task_PurchaseOrderDetail.Price], 
            T.Price1 AS [Task_PurchaseOrderDetail.Price1], 
            T.Price2 AS [Task_PurchaseOrderDetail.Price2], 
            T.Discount AS [Task_PurchaseOrderDetail.Discount], 
            T.Discount1 AS [Task_PurchaseOrderDetail.Discount1], 
            T.Discount2 AS [Task_PurchaseOrderDetail.Discount2], 
            T.PrimaryUnitTypeId AS [Task_PurchaseOrderDetail.PrimaryUnitTypeId], 
            T.SecondaryUnitTypeId AS [Task_PurchaseOrderDetail.SecondaryUnitTypeId], 
            T.TertiaryUnitTypeId AS [Task_PurchaseOrderDetail.TertiaryUnitTypeId], 
            T.SecondaryConversionRatio AS [Task_PurchaseOrderDetail.SecondaryConversionRatio], 
            T.TertiaryConversionRatio AS [Task_PurchaseOrderDetail.TertiaryConversionRatio], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_PurchaseOrderDetail AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_PurchaseOrderNos.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView386()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_PurchaseOrderNos
        [BTS_OPSModel.Task_PurchaseOrderNos](T1.[Task_PurchaseOrderNos.Id], T1.[Task_PurchaseOrderNos.OrderNo], T1.[Task_PurchaseOrderNos.Year], T1.[Task_PurchaseOrderNos.CompanyId])
    FROM (
        SELECT 
            T.Id AS [Task_PurchaseOrderNos.Id], 
            T.OrderNo AS [Task_PurchaseOrderNos.OrderNo], 
            T.Year AS [Task_PurchaseOrderNos.Year], 
            T.CompanyId AS [Task_PurchaseOrderNos.CompanyId], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_PurchaseOrderNos AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_PurchaseReturn.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView387()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_PurchaseReturn
        [BTS_OPSModel.Task_PurchaseReturn](T1.[Task_PurchaseReturn.ReturnId], T1.[Task_PurchaseReturn.ReturnNo], T1.[Task_PurchaseReturn.ReturnDate], T1.[Task_PurchaseReturn.AgainstPreviousPurchase], T1.[Task_PurchaseReturn.SupplierId], T1.[Task_PurchaseReturn.SelectedCurrency], T1.[Task_PurchaseReturn.Currency1Rate], T1.[Task_PurchaseReturn.Currency2Rate], T1.[Task_PurchaseReturn.ReturnAmount], T1.[Task_PurchaseReturn.Return1Amount], T1.[Task_PurchaseReturn.Return2Amount], T1.[Task_PurchaseReturn.Approved], T1.[Task_PurchaseReturn.ApprovedBy], T1.[Task_PurchaseReturn.ApprovedDate], T1.[Task_PurchaseReturn.CancelReason], T1.[Task_PurchaseReturn.Remarks], T1.[Task_PurchaseReturn.Reason], T1.[Task_PurchaseReturn.VoucherId], T1.[Task_PurchaseReturn.LocationId], T1.[Task_PurchaseReturn.CompanyId], T1.[Task_PurchaseReturn.EntryBy], T1.[Task_PurchaseReturn.EntryDate])
    FROM (
        SELECT 
            T.ReturnId AS [Task_PurchaseReturn.ReturnId], 
            T.ReturnNo AS [Task_PurchaseReturn.ReturnNo], 
            T.ReturnDate AS [Task_PurchaseReturn.ReturnDate], 
            T.AgainstPreviousPurchase AS [Task_PurchaseReturn.AgainstPreviousPurchase], 
            T.SupplierId AS [Task_PurchaseReturn.SupplierId], 
            T.SelectedCurrency AS [Task_PurchaseReturn.SelectedCurrency], 
            T.Currency1Rate AS [Task_PurchaseReturn.Currency1Rate], 
            T.Currency2Rate AS [Task_PurchaseReturn.Currency2Rate], 
            T.ReturnAmount AS [Task_PurchaseReturn.ReturnAmount], 
            T.Return1Amount AS [Task_PurchaseReturn.Return1Amount], 
            T.Return2Amount AS [Task_PurchaseReturn.Return2Amount], 
            T.Approved AS [Task_PurchaseReturn.Approved], 
            T.ApprovedBy AS [Task_PurchaseReturn.ApprovedBy], 
            T.ApprovedDate AS [Task_PurchaseReturn.ApprovedDate], 
            T.CancelReason AS [Task_PurchaseReturn.CancelReason], 
            T.Remarks AS [Task_PurchaseReturn.Remarks], 
            T.Reason AS [Task_PurchaseReturn.Reason], 
            T.VoucherId AS [Task_PurchaseReturn.VoucherId], 
            T.LocationId AS [Task_PurchaseReturn.LocationId], 
            T.CompanyId AS [Task_PurchaseReturn.CompanyId], 
            T.EntryBy AS [Task_PurchaseReturn.EntryBy], 
            T.EntryDate AS [Task_PurchaseReturn.EntryDate], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_PurchaseReturn AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_PurchaseReturnDetail.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView388()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_PurchaseReturnDetail
        [BTS_OPSModel.Task_PurchaseReturnDetail](T1.[Task_PurchaseReturnDetail.ReturnDetailId], T1.[Task_PurchaseReturnDetail.ReturnId], T1.[Task_PurchaseReturnDetail.ReceiveId], T1.[Task_PurchaseReturnDetail.ProductId], T1.[Task_PurchaseReturnDetail.ProductDimensionId], T1.[Task_PurchaseReturnDetail.UnitTypeId], T1.[Task_PurchaseReturnDetail.Quantity], T1.[Task_PurchaseReturnDetail.Price], T1.[Task_PurchaseReturnDetail.Price1], T1.[Task_PurchaseReturnDetail.Price2], T1.[Task_PurchaseReturnDetail.PurchasedPrice], T1.[Task_PurchaseReturnDetail.PurchasedPrice1], T1.[Task_PurchaseReturnDetail.PurchasedPrice2], T1.[Task_PurchaseReturnDetail.DiscountAtPurchase], T1.[Task_PurchaseReturnDetail.Discount1AtPurchase], T1.[Task_PurchaseReturnDetail.Discount2AtPurchase], T1.[Task_PurchaseReturnDetail.GoodsReceiveDiscountAtPurchase], T1.[Task_PurchaseReturnDetail.GoodsReceiveDiscount1AtPurchase], T1.[Task_PurchaseReturnDetail.GoodsReceiveDiscount2AtPurchase], T1.[Task_PurchaseReturnDetail.Cost], T1.[Task_PurchaseReturnDetail.Cost1], T1.[Task_PurchaseReturnDetail.Cost2], T1.[Task_PurchaseReturnDetail.LossOrGainAmount], T1.[Task_PurchaseReturnDetail.LossOrGainAmount1], T1.[Task_PurchaseReturnDetail.LossOrGainAmount2], T1.[Task_PurchaseReturnDetail.PrimaryUnitTypeId], T1.[Task_PurchaseReturnDetail.SecondaryUnitTypeId], T1.[Task_PurchaseReturnDetail.TertiaryUnitTypeId], T1.[Task_PurchaseReturnDetail.SecondaryConversionRatio], T1.[Task_PurchaseReturnDetail.TertiaryConversionRatio], T1.[Task_PurchaseReturnDetail.WarehouseId])
    FROM (
        SELECT 
            T.ReturnDetailId AS [Task_PurchaseReturnDetail.ReturnDetailId], 
            T.ReturnId AS [Task_PurchaseReturnDetail.ReturnId], 
            T.ReceiveId AS [Task_PurchaseReturnDetail.ReceiveId], 
            T.ProductId AS [Task_PurchaseReturnDetail.ProductId], 
            T.ProductDimensionId AS [Task_PurchaseReturnDetail.ProductDimensionId], 
            T.UnitTypeId AS [Task_PurchaseReturnDetail.UnitTypeId], 
            T.Quantity AS [Task_PurchaseReturnDetail.Quantity], 
            T.Price AS [Task_PurchaseReturnDetail.Price], 
            T.Price1 AS [Task_PurchaseReturnDetail.Price1], 
            T.Price2 AS [Task_PurchaseReturnDetail.Price2], 
            T.PurchasedPrice AS [Task_PurchaseReturnDetail.PurchasedPrice], 
            T.PurchasedPrice1 AS [Task_PurchaseReturnDetail.PurchasedPrice1], 
            T.PurchasedPrice2 AS [Task_PurchaseReturnDetail.PurchasedPrice2], 
            T.DiscountAtPurchase AS [Task_PurchaseReturnDetail.DiscountAtPurchase], 
            T.Discount1AtPurchase AS [Task_PurchaseReturnDetail.Discount1AtPurchase], 
            T.Discount2AtPurchase AS [Task_PurchaseReturnDetail.Discount2AtPurchase], 
            T.GoodsReceiveDiscountAtPurchase AS [Task_PurchaseReturnDetail.GoodsReceiveDiscountAtPurchase], 
            T.GoodsReceiveDiscount1AtPurchase AS [Task_PurchaseReturnDetail.GoodsReceiveDiscount1AtPurchase], 
            T.GoodsReceiveDiscount2AtPurchase AS [Task_PurchaseReturnDetail.GoodsReceiveDiscount2AtPurchase], 
            T.Cost AS [Task_PurchaseReturnDetail.Cost], 
            T.Cost1 AS [Task_PurchaseReturnDetail.Cost1], 
            T.Cost2 AS [Task_PurchaseReturnDetail.Cost2], 
            T.LossOrGainAmount AS [Task_PurchaseReturnDetail.LossOrGainAmount], 
            T.LossOrGainAmount1 AS [Task_PurchaseReturnDetail.LossOrGainAmount1], 
            T.LossOrGainAmount2 AS [Task_PurchaseReturnDetail.LossOrGainAmount2], 
            T.PrimaryUnitTypeId AS [Task_PurchaseReturnDetail.PrimaryUnitTypeId], 
            T.SecondaryUnitTypeId AS [Task_PurchaseReturnDetail.SecondaryUnitTypeId], 
            T.TertiaryUnitTypeId AS [Task_PurchaseReturnDetail.TertiaryUnitTypeId], 
            T.SecondaryConversionRatio AS [Task_PurchaseReturnDetail.SecondaryConversionRatio], 
            T.TertiaryConversionRatio AS [Task_PurchaseReturnDetail.TertiaryConversionRatio], 
            T.WarehouseId AS [Task_PurchaseReturnDetail.WarehouseId], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_PurchaseReturnDetail AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_PurchaseReturnDetailSerial.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView389()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_PurchaseReturnDetailSerial
        [BTS_OPSModel.Task_PurchaseReturnDetailSerial](T1.[Task_PurchaseReturnDetailSerial.ReturnDetailSerialId], T1.[Task_PurchaseReturnDetailSerial.ReturnDetailId], T1.[Task_PurchaseReturnDetailSerial.Serial], T1.[Task_PurchaseReturnDetailSerial.AdditionalSerial])
    FROM (
        SELECT 
            T.ReturnDetailSerialId AS [Task_PurchaseReturnDetailSerial.ReturnDetailSerialId], 
            T.ReturnDetailId AS [Task_PurchaseReturnDetailSerial.ReturnDetailId], 
            T.Serial AS [Task_PurchaseReturnDetailSerial.Serial], 
            T.AdditionalSerial AS [Task_PurchaseReturnDetailSerial.AdditionalSerial], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_PurchaseReturnDetailSerial AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_PurchaseReturnNos.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView390()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_PurchaseReturnNos
        [BTS_OPSModel.Task_PurchaseReturnNos](T1.[Task_PurchaseReturnNos.Id], T1.[Task_PurchaseReturnNos.ReturnNo], T1.[Task_PurchaseReturnNos.Year], T1.[Task_PurchaseReturnNos.CompanyId])
    FROM (
        SELECT 
            T.Id AS [Task_PurchaseReturnNos.Id], 
            T.ReturnNo AS [Task_PurchaseReturnNos.ReturnNo], 
            T.Year AS [Task_PurchaseReturnNos.Year], 
            T.CompanyId AS [Task_PurchaseReturnNos.CompanyId], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_PurchaseReturnNos AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_ReceiveFinalize.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView391()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_ReceiveFinalize
        [BTS_OPSModel.Task_ReceiveFinalize](T1.[Task_ReceiveFinalize.FinalizeId], T1.[Task_ReceiveFinalize.FinalizeNo], T1.[Task_ReceiveFinalize.FinalizeDate], T1.[Task_ReceiveFinalize.SupplierId], T1.[Task_ReceiveFinalize.SelectedCurrency], T1.[Task_ReceiveFinalize.Currency1Rate], T1.[Task_ReceiveFinalize.Currency2Rate], T1.[Task_ReceiveFinalize.FinalizeAmount], T1.[Task_ReceiveFinalize.Finalize1Amount], T1.[Task_ReceiveFinalize.Finalize2Amount], T1.[Task_ReceiveFinalize.Approved], T1.[Task_ReceiveFinalize.ApprovedBy], T1.[Task_ReceiveFinalize.ApprovedDate], T1.[Task_ReceiveFinalize.CancelReason], T1.[Task_ReceiveFinalize.IsSettledByPayment], T1.[Task_ReceiveFinalize.PaidAmount], T1.[Task_ReceiveFinalize.Paid1Amount], T1.[Task_ReceiveFinalize.Paid2Amount], T1.[Task_ReceiveFinalize.PurchaseOperationType], T1.[Task_ReceiveFinalize.TermsAndConditionsId], T1.[Task_ReceiveFinalize.TermsAndConditionsDetail], T1.[Task_ReceiveFinalize.PaymentTermsId], T1.[Task_ReceiveFinalize.PaymentTermsDetail], T1.[Task_ReceiveFinalize.DiscountType], T1.[Task_ReceiveFinalize.DiscountValue], T1.[Task_ReceiveFinalize.Discount1Value], T1.[Task_ReceiveFinalize.Discount2Value], T1.[Task_ReceiveFinalize.DiscountAmount], T1.[Task_ReceiveFinalize.Discount1Amount], T1.[Task_ReceiveFinalize.Discount2Amount], T1.[Task_ReceiveFinalize.VoucherId], T1.[Task_ReceiveFinalize.LocationId], T1.[Task_ReceiveFinalize.CompanyId], T1.[Task_ReceiveFinalize.EntryBy], T1.[Task_ReceiveFinalize.EntryDate])
    FROM (
        SELECT 
            T.FinalizeId AS [Task_ReceiveFinalize.FinalizeId], 
            T.FinalizeNo AS [Task_ReceiveFinalize.FinalizeNo], 
            T.FinalizeDate AS [Task_ReceiveFinalize.FinalizeDate], 
            T.SupplierId AS [Task_ReceiveFinalize.SupplierId], 
            T.SelectedCurrency AS [Task_ReceiveFinalize.SelectedCurrency], 
            T.Currency1Rate AS [Task_ReceiveFinalize.Currency1Rate], 
            T.Currency2Rate AS [Task_ReceiveFinalize.Currency2Rate], 
            T.FinalizeAmount AS [Task_ReceiveFinalize.FinalizeAmount], 
            T.Finalize1Amount AS [Task_ReceiveFinalize.Finalize1Amount], 
            T.Finalize2Amount AS [Task_ReceiveFinalize.Finalize2Amount], 
            T.Approved AS [Task_ReceiveFinalize.Approved], 
            T.ApprovedBy AS [Task_ReceiveFinalize.ApprovedBy], 
            T.ApprovedDate AS [Task_ReceiveFinalize.ApprovedDate], 
            T.CancelReason AS [Task_ReceiveFinalize.CancelReason], 
            T.IsSettledByPayment AS [Task_ReceiveFinalize.IsSettledByPayment], 
            T.PaidAmount AS [Task_ReceiveFinalize.PaidAmount], 
            T.Paid1Amount AS [Task_ReceiveFinalize.Paid1Amount], 
            T.Paid2Amount AS [Task_ReceiveFinalize.Paid2Amount], 
            T.PurchaseOperationType AS [Task_ReceiveFinalize.PurchaseOperationType], 
            T.TermsAndConditionsId AS [Task_ReceiveFinalize.TermsAndConditionsId], 
            T.TermsAndConditionsDetail AS [Task_ReceiveFinalize.TermsAndConditionsDetail], 
            T.PaymentTermsId AS [Task_ReceiveFinalize.PaymentTermsId], 
            T.PaymentTermsDetail AS [Task_ReceiveFinalize.PaymentTermsDetail], 
            T.DiscountType AS [Task_ReceiveFinalize.DiscountType], 
            T.DiscountValue AS [Task_ReceiveFinalize.DiscountValue], 
            T.Discount1Value AS [Task_ReceiveFinalize.Discount1Value], 
            T.Discount2Value AS [Task_ReceiveFinalize.Discount2Value], 
            T.DiscountAmount AS [Task_ReceiveFinalize.DiscountAmount], 
            T.Discount1Amount AS [Task_ReceiveFinalize.Discount1Amount], 
            T.Discount2Amount AS [Task_ReceiveFinalize.Discount2Amount], 
            T.VoucherId AS [Task_ReceiveFinalize.VoucherId], 
            T.LocationId AS [Task_ReceiveFinalize.LocationId], 
            T.CompanyId AS [Task_ReceiveFinalize.CompanyId], 
            T.EntryBy AS [Task_ReceiveFinalize.EntryBy], 
            T.EntryDate AS [Task_ReceiveFinalize.EntryDate], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_ReceiveFinalize AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_ReceiveFinalizeDetail.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView392()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_ReceiveFinalizeDetail
        [BTS_OPSModel.Task_ReceiveFinalizeDetail](T1.[Task_ReceiveFinalizeDetail.FinalizeDetailId], T1.[Task_ReceiveFinalizeDetail.FinalizeId], T1.[Task_ReceiveFinalizeDetail.ReceiveId], T1.[Task_ReceiveFinalizeDetail.ProductId], T1.[Task_ReceiveFinalizeDetail.ProductDimensionId], T1.[Task_ReceiveFinalizeDetail.UnitTypeId], T1.[Task_ReceiveFinalizeDetail.Quantity], T1.[Task_ReceiveFinalizeDetail.Price], T1.[Task_ReceiveFinalizeDetail.Price1], T1.[Task_ReceiveFinalizeDetail.Price2], T1.[Task_ReceiveFinalizeDetail.Discount], T1.[Task_ReceiveFinalizeDetail.Discount1], T1.[Task_ReceiveFinalizeDetail.Discount2], T1.[Task_ReceiveFinalizeDetail.PrimaryUnitTypeId], T1.[Task_ReceiveFinalizeDetail.SecondaryUnitTypeId], T1.[Task_ReceiveFinalizeDetail.TertiaryUnitTypeId], T1.[Task_ReceiveFinalizeDetail.SecondaryConversionRatio], T1.[Task_ReceiveFinalizeDetail.TertiaryConversionRatio])
    FROM (
        SELECT 
            T.FinalizeDetailId AS [Task_ReceiveFinalizeDetail.FinalizeDetailId], 
            T.FinalizeId AS [Task_ReceiveFinalizeDetail.FinalizeId], 
            T.ReceiveId AS [Task_ReceiveFinalizeDetail.ReceiveId], 
            T.ProductId AS [Task_ReceiveFinalizeDetail.ProductId], 
            T.ProductDimensionId AS [Task_ReceiveFinalizeDetail.ProductDimensionId], 
            T.UnitTypeId AS [Task_ReceiveFinalizeDetail.UnitTypeId], 
            T.Quantity AS [Task_ReceiveFinalizeDetail.Quantity], 
            T.Price AS [Task_ReceiveFinalizeDetail.Price], 
            T.Price1 AS [Task_ReceiveFinalizeDetail.Price1], 
            T.Price2 AS [Task_ReceiveFinalizeDetail.Price2], 
            T.Discount AS [Task_ReceiveFinalizeDetail.Discount], 
            T.Discount1 AS [Task_ReceiveFinalizeDetail.Discount1], 
            T.Discount2 AS [Task_ReceiveFinalizeDetail.Discount2], 
            T.PrimaryUnitTypeId AS [Task_ReceiveFinalizeDetail.PrimaryUnitTypeId], 
            T.SecondaryUnitTypeId AS [Task_ReceiveFinalizeDetail.SecondaryUnitTypeId], 
            T.TertiaryUnitTypeId AS [Task_ReceiveFinalizeDetail.TertiaryUnitTypeId], 
            T.SecondaryConversionRatio AS [Task_ReceiveFinalizeDetail.SecondaryConversionRatio], 
            T.TertiaryConversionRatio AS [Task_ReceiveFinalizeDetail.TertiaryConversionRatio], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_ReceiveFinalizeDetail AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_ReceiveFinalizeDetailSerial.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView393()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_ReceiveFinalizeDetailSerial
        [BTS_OPSModel.Task_ReceiveFinalizeDetailSerial](T1.[Task_ReceiveFinalizeDetailSerial.FinalizeDetailSerialId], T1.[Task_ReceiveFinalizeDetailSerial.FinalizeDetailId], T1.[Task_ReceiveFinalizeDetailSerial.Serial], T1.[Task_ReceiveFinalizeDetailSerial.AdditionalSerial])
    FROM (
        SELECT 
            T.FinalizeDetailSerialId AS [Task_ReceiveFinalizeDetailSerial.FinalizeDetailSerialId], 
            T.FinalizeDetailId AS [Task_ReceiveFinalizeDetailSerial.FinalizeDetailId], 
            T.Serial AS [Task_ReceiveFinalizeDetailSerial.Serial], 
            T.AdditionalSerial AS [Task_ReceiveFinalizeDetailSerial.AdditionalSerial], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_ReceiveFinalizeDetailSerial AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_ReceiveFinalizeNos.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView394()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_ReceiveFinalizeNos
        [BTS_OPSModel.Task_ReceiveFinalizeNos](T1.[Task_ReceiveFinalizeNos.Id], T1.[Task_ReceiveFinalizeNos.FinalizeNo], T1.[Task_ReceiveFinalizeNos.Year], T1.[Task_ReceiveFinalizeNos.CompanyId])
    FROM (
        SELECT 
            T.Id AS [Task_ReceiveFinalizeNos.Id], 
            T.FinalizeNo AS [Task_ReceiveFinalizeNos.FinalizeNo], 
            T.Year AS [Task_ReceiveFinalizeNos.Year], 
            T.CompanyId AS [Task_ReceiveFinalizeNos.CompanyId], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_ReceiveFinalizeNos AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_ReplacementClaim.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView395()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_ReplacementClaim
        [BTS_OPSModel.Task_ReplacementClaim](T1.[Task_ReplacementClaim.ClaimId], T1.[Task_ReplacementClaim.ClaimNo], T1.[Task_ReplacementClaim.ClaimDate], T1.[Task_ReplacementClaim.SelectedCurrency], T1.[Task_ReplacementClaim.Currency1Rate], T1.[Task_ReplacementClaim.Currency2Rate], T1.[Task_ReplacementClaim.RequestedBy], T1.[Task_ReplacementClaim.SupplierId], T1.[Task_ReplacementClaim.Remarks], T1.[Task_ReplacementClaim.IsSettledByReplacementReceive], T1.[Task_ReplacementClaim.Approved], T1.[Task_ReplacementClaim.ApprovedBy], T1.[Task_ReplacementClaim.ApprovedDate], T1.[Task_ReplacementClaim.CancelReason], T1.[Task_ReplacementClaim.VoucherId], T1.[Task_ReplacementClaim.LocationId], T1.[Task_ReplacementClaim.CompanyId], T1.[Task_ReplacementClaim.EntryBy], T1.[Task_ReplacementClaim.EntryDate])
    FROM (
        SELECT 
            T.ClaimId AS [Task_ReplacementClaim.ClaimId], 
            T.ClaimNo AS [Task_ReplacementClaim.ClaimNo], 
            T.ClaimDate AS [Task_ReplacementClaim.ClaimDate], 
            T.SelectedCurrency AS [Task_ReplacementClaim.SelectedCurrency], 
            T.Currency1Rate AS [Task_ReplacementClaim.Currency1Rate], 
            T.Currency2Rate AS [Task_ReplacementClaim.Currency2Rate], 
            T.RequestedBy AS [Task_ReplacementClaim.RequestedBy], 
            T.SupplierId AS [Task_ReplacementClaim.SupplierId], 
            T.Remarks AS [Task_ReplacementClaim.Remarks], 
            T.IsSettledByReplacementReceive AS [Task_ReplacementClaim.IsSettledByReplacementReceive], 
            T.Approved AS [Task_ReplacementClaim.Approved], 
            T.ApprovedBy AS [Task_ReplacementClaim.ApprovedBy], 
            T.ApprovedDate AS [Task_ReplacementClaim.ApprovedDate], 
            T.CancelReason AS [Task_ReplacementClaim.CancelReason], 
            T.VoucherId AS [Task_ReplacementClaim.VoucherId], 
            T.LocationId AS [Task_ReplacementClaim.LocationId], 
            T.CompanyId AS [Task_ReplacementClaim.CompanyId], 
            T.EntryBy AS [Task_ReplacementClaim.EntryBy], 
            T.EntryDate AS [Task_ReplacementClaim.EntryDate], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_ReplacementClaim AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_ReplacementClaimDetail.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView396()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_ReplacementClaimDetail
        [BTS_OPSModel.Task_ReplacementClaimDetail](T1.[Task_ReplacementClaimDetail.ClaimDetailId], T1.[Task_ReplacementClaimDetail.ClaimId], T1.[Task_ReplacementClaimDetail.ComplainReceiveId], T1.[Task_ReplacementClaimDetail.ProductId], T1.[Task_ReplacementClaimDetail.ProductDimensionId], T1.[Task_ReplacementClaimDetail.UnitTypeId], T1.[Task_ReplacementClaimDetail.Serial], T1.[Task_ReplacementClaimDetail.AdditionalSerial], T1.[Task_ReplacementClaimDetail.ReceivedSerialNo], T1.[Task_ReplacementClaimDetail.ReceivedAdditionalSerial], T1.[Task_ReplacementClaimDetail.IsSettled], T1.[Task_ReplacementClaimDetail.StockInBy], T1.[Task_ReplacementClaimDetail.StockInRefNo], T1.[Task_ReplacementClaimDetail.StockInRefDate], T1.[Task_ReplacementClaimDetail.LCOrReferenceNo], T1.[Task_ReplacementClaimDetail.LCOrReferenceDate], T1.[Task_ReplacementClaimDetail.ProformaInvoiceNo], T1.[Task_ReplacementClaimDetail.ProformaInvoiceDate], T1.[Task_ReplacementClaimDetail.Cost], T1.[Task_ReplacementClaimDetail.Cost1], T1.[Task_ReplacementClaimDetail.Cost2])
    FROM (
        SELECT 
            T.ClaimDetailId AS [Task_ReplacementClaimDetail.ClaimDetailId], 
            T.ClaimId AS [Task_ReplacementClaimDetail.ClaimId], 
            T.ComplainReceiveId AS [Task_ReplacementClaimDetail.ComplainReceiveId], 
            T.ProductId AS [Task_ReplacementClaimDetail.ProductId], 
            T.ProductDimensionId AS [Task_ReplacementClaimDetail.ProductDimensionId], 
            T.UnitTypeId AS [Task_ReplacementClaimDetail.UnitTypeId], 
            T.Serial AS [Task_ReplacementClaimDetail.Serial], 
            T.AdditionalSerial AS [Task_ReplacementClaimDetail.AdditionalSerial], 
            T.ReceivedSerialNo AS [Task_ReplacementClaimDetail.ReceivedSerialNo], 
            T.ReceivedAdditionalSerial AS [Task_ReplacementClaimDetail.ReceivedAdditionalSerial], 
            T.IsSettled AS [Task_ReplacementClaimDetail.IsSettled], 
            T.StockInBy AS [Task_ReplacementClaimDetail.StockInBy], 
            T.StockInRefNo AS [Task_ReplacementClaimDetail.StockInRefNo], 
            T.StockInRefDate AS [Task_ReplacementClaimDetail.StockInRefDate], 
            T.LCOrReferenceNo AS [Task_ReplacementClaimDetail.LCOrReferenceNo], 
            T.LCOrReferenceDate AS [Task_ReplacementClaimDetail.LCOrReferenceDate], 
            T.ProformaInvoiceNo AS [Task_ReplacementClaimDetail.ProformaInvoiceNo], 
            T.ProformaInvoiceDate AS [Task_ReplacementClaimDetail.ProformaInvoiceDate], 
            T.Cost AS [Task_ReplacementClaimDetail.Cost], 
            T.Cost1 AS [Task_ReplacementClaimDetail.Cost1], 
            T.Cost2 AS [Task_ReplacementClaimDetail.Cost2], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_ReplacementClaimDetail AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_ReplacementClaimDetail_Problem.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView397()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_ReplacementClaimDetail_Problem
        [BTS_OPSModel.Task_ReplacementClaimDetail_Problem](T1.[Task_ReplacementClaimDetail_Problem.ClaimDetailProblemId], T1.[Task_ReplacementClaimDetail_Problem.ClaimDetailId], T1.[Task_ReplacementClaimDetail_Problem.ProblemId], T1.[Task_ReplacementClaimDetail_Problem.Note])
    FROM (
        SELECT 
            T.ClaimDetailProblemId AS [Task_ReplacementClaimDetail_Problem.ClaimDetailProblemId], 
            T.ClaimDetailId AS [Task_ReplacementClaimDetail_Problem.ClaimDetailId], 
            T.ProblemId AS [Task_ReplacementClaimDetail_Problem.ProblemId], 
            T.Note AS [Task_ReplacementClaimDetail_Problem.Note], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_ReplacementClaimDetail_Problem AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_ReplacementClaimNos.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView398()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_ReplacementClaimNos
        [BTS_OPSModel.Task_ReplacementClaimNos](T1.[Task_ReplacementClaimNos.Id], T1.[Task_ReplacementClaimNos.ClaimNo], T1.[Task_ReplacementClaimNos.Year], T1.[Task_ReplacementClaimNos.CompanyId])
    FROM (
        SELECT 
            T.Id AS [Task_ReplacementClaimNos.Id], 
            T.ClaimNo AS [Task_ReplacementClaimNos.ClaimNo], 
            T.Year AS [Task_ReplacementClaimNos.Year], 
            T.CompanyId AS [Task_ReplacementClaimNos.CompanyId], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_ReplacementClaimNos AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_ReplacementReceive.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView399()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_ReplacementReceive
        [BTS_OPSModel.Task_ReplacementReceive](T1.[Task_ReplacementReceive.ReceiveId], T1.[Task_ReplacementReceive.ReceiveNo], T1.[Task_ReplacementReceive.ReceiveDate], T1.[Task_ReplacementReceive.SelectedCurrency], T1.[Task_ReplacementReceive.Currency1Rate], T1.[Task_ReplacementReceive.Currency2Rate], T1.[Task_ReplacementReceive.RequestedBy], T1.[Task_ReplacementReceive.Remarks], T1.[Task_ReplacementReceive.Approved], T1.[Task_ReplacementReceive.ApprovedBy], T1.[Task_ReplacementReceive.ApprovedDate], T1.[Task_ReplacementReceive.CancelReason], T1.[Task_ReplacementReceive.TotalChargeAmount], T1.[Task_ReplacementReceive.TotalChargeAmount1], T1.[Task_ReplacementReceive.TotalChargeAmount2], T1.[Task_ReplacementReceive.TotalDiscount], T1.[Task_ReplacementReceive.TotalDiscount1], T1.[Task_ReplacementReceive.TotalDiscount2], T1.[Task_ReplacementReceive.VoucherId], T1.[Task_ReplacementReceive.LocationId], T1.[Task_ReplacementReceive.CompanyId], T1.[Task_ReplacementReceive.EntryBy], T1.[Task_ReplacementReceive.EntryDate])
    FROM (
        SELECT 
            T.ReceiveId AS [Task_ReplacementReceive.ReceiveId], 
            T.ReceiveNo AS [Task_ReplacementReceive.ReceiveNo], 
            T.ReceiveDate AS [Task_ReplacementReceive.ReceiveDate], 
            T.SelectedCurrency AS [Task_ReplacementReceive.SelectedCurrency], 
            T.Currency1Rate AS [Task_ReplacementReceive.Currency1Rate], 
            T.Currency2Rate AS [Task_ReplacementReceive.Currency2Rate], 
            T.RequestedBy AS [Task_ReplacementReceive.RequestedBy], 
            T.Remarks AS [Task_ReplacementReceive.Remarks], 
            T.Approved AS [Task_ReplacementReceive.Approved], 
            T.ApprovedBy AS [Task_ReplacementReceive.ApprovedBy], 
            T.ApprovedDate AS [Task_ReplacementReceive.ApprovedDate], 
            T.CancelReason AS [Task_ReplacementReceive.CancelReason], 
            T.TotalChargeAmount AS [Task_ReplacementReceive.TotalChargeAmount], 
            T.TotalChargeAmount1 AS [Task_ReplacementReceive.TotalChargeAmount1], 
            T.TotalChargeAmount2 AS [Task_ReplacementReceive.TotalChargeAmount2], 
            T.TotalDiscount AS [Task_ReplacementReceive.TotalDiscount], 
            T.TotalDiscount1 AS [Task_ReplacementReceive.TotalDiscount1], 
            T.TotalDiscount2 AS [Task_ReplacementReceive.TotalDiscount2], 
            T.VoucherId AS [Task_ReplacementReceive.VoucherId], 
            T.LocationId AS [Task_ReplacementReceive.LocationId], 
            T.CompanyId AS [Task_ReplacementReceive.CompanyId], 
            T.EntryBy AS [Task_ReplacementReceive.EntryBy], 
            T.EntryDate AS [Task_ReplacementReceive.EntryDate], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_ReplacementReceive AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_ReplacementReceive_Charge.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView400()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_ReplacementReceive_Charge
        [BTS_OPSModel.Task_ReplacementReceive_Charge](T1.[Task_ReplacementReceive_Charge.ReceiveChargeId], T1.[Task_ReplacementReceive_Charge.ReceiveId], T1.[Task_ReplacementReceive_Charge.ChargeEventId], T1.[Task_ReplacementReceive_Charge.ChargeAmount], T1.[Task_ReplacementReceive_Charge.Charge1Amount], T1.[Task_ReplacementReceive_Charge.Charge2Amount])
    FROM (
        SELECT 
            T.ReceiveChargeId AS [Task_ReplacementReceive_Charge.ReceiveChargeId], 
            T.ReceiveId AS [Task_ReplacementReceive_Charge.ReceiveId], 
            T.ChargeEventId AS [Task_ReplacementReceive_Charge.ChargeEventId], 
            T.ChargeAmount AS [Task_ReplacementReceive_Charge.ChargeAmount], 
            T.Charge1Amount AS [Task_ReplacementReceive_Charge.Charge1Amount], 
            T.Charge2Amount AS [Task_ReplacementReceive_Charge.Charge2Amount], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_ReplacementReceive_Charge AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_ReplacementReceiveDetail.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView401()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_ReplacementReceiveDetail
        [BTS_OPSModel.Task_ReplacementReceiveDetail](T1.[Task_ReplacementReceiveDetail.ReceiveDetailId], T1.[Task_ReplacementReceiveDetail.ReceiveId], T1.[Task_ReplacementReceiveDetail.ReplacementClaimId], T1.[Task_ReplacementReceiveDetail.PreviousProductId], T1.[Task_ReplacementReceiveDetail.PreviousProductDimensionId], T1.[Task_ReplacementReceiveDetail.PreviousUnitTypeId], T1.[Task_ReplacementReceiveDetail.PreviousSerial], T1.[Task_ReplacementReceiveDetail.NewProductId], T1.[Task_ReplacementReceiveDetail.NewProductDimensionId], T1.[Task_ReplacementReceiveDetail.NewUnitTypeId], T1.[Task_ReplacementReceiveDetail.NewSerial], T1.[Task_ReplacementReceiveDetail.Cost], T1.[Task_ReplacementReceiveDetail.Cost1], T1.[Task_ReplacementReceiveDetail.Cost2], T1.[Task_ReplacementReceiveDetail.ReplacementType], T1.[Task_ReplacementReceiveDetail.AdjustmentType], T1.[Task_ReplacementReceiveDetail.AdjustedAmount], T1.[Task_ReplacementReceiveDetail.AdjustedAmount1], T1.[Task_ReplacementReceiveDetail.AdjustedAmount2])
    FROM (
        SELECT 
            T.ReceiveDetailId AS [Task_ReplacementReceiveDetail.ReceiveDetailId], 
            T.ReceiveId AS [Task_ReplacementReceiveDetail.ReceiveId], 
            T.ReplacementClaimId AS [Task_ReplacementReceiveDetail.ReplacementClaimId], 
            T.PreviousProductId AS [Task_ReplacementReceiveDetail.PreviousProductId], 
            T.PreviousProductDimensionId AS [Task_ReplacementReceiveDetail.PreviousProductDimensionId], 
            T.PreviousUnitTypeId AS [Task_ReplacementReceiveDetail.PreviousUnitTypeId], 
            T.PreviousSerial AS [Task_ReplacementReceiveDetail.PreviousSerial], 
            T.NewProductId AS [Task_ReplacementReceiveDetail.NewProductId], 
            T.NewProductDimensionId AS [Task_ReplacementReceiveDetail.NewProductDimensionId], 
            T.NewUnitTypeId AS [Task_ReplacementReceiveDetail.NewUnitTypeId], 
            T.NewSerial AS [Task_ReplacementReceiveDetail.NewSerial], 
            T.Cost AS [Task_ReplacementReceiveDetail.Cost], 
            T.Cost1 AS [Task_ReplacementReceiveDetail.Cost1], 
            T.Cost2 AS [Task_ReplacementReceiveDetail.Cost2], 
            T.ReplacementType AS [Task_ReplacementReceiveDetail.ReplacementType], 
            T.AdjustmentType AS [Task_ReplacementReceiveDetail.AdjustmentType], 
            T.AdjustedAmount AS [Task_ReplacementReceiveDetail.AdjustedAmount], 
            T.AdjustedAmount1 AS [Task_ReplacementReceiveDetail.AdjustedAmount1], 
            T.AdjustedAmount2 AS [Task_ReplacementReceiveDetail.AdjustedAmount2], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_ReplacementReceiveDetail AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_ReplacementReceiveNos.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView402()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_ReplacementReceiveNos
        [BTS_OPSModel.Task_ReplacementReceiveNos](T1.[Task_ReplacementReceiveNos.Id], T1.[Task_ReplacementReceiveNos.ReceiveNo], T1.[Task_ReplacementReceiveNos.Year], T1.[Task_ReplacementReceiveNos.CompanyId])
    FROM (
        SELECT 
            T.Id AS [Task_ReplacementReceiveNos.Id], 
            T.ReceiveNo AS [Task_ReplacementReceiveNos.ReceiveNo], 
            T.Year AS [Task_ReplacementReceiveNos.Year], 
            T.CompanyId AS [Task_ReplacementReceiveNos.CompanyId], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_ReplacementReceiveNos AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_RequisitionFinalize.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView403()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_RequisitionFinalize
        [BTS_OPSModel.Task_RequisitionFinalize](T1.[Task_RequisitionFinalize.RequisitionId], T1.[Task_RequisitionFinalize.RequisitionNo], T1.[Task_RequisitionFinalize.RequisitionDate], T1.[Task_RequisitionFinalize.RequisitionBy], T1.[Task_RequisitionFinalize.Remarks], T1.[Task_RequisitionFinalize.IsSettled], T1.[Task_RequisitionFinalize.Approved], T1.[Task_RequisitionFinalize.ApprovedBy], T1.[Task_RequisitionFinalize.ApprovedDate], T1.[Task_RequisitionFinalize.CancelReason], T1.[Task_RequisitionFinalize.LocationId], T1.[Task_RequisitionFinalize.CompanyId], T1.[Task_RequisitionFinalize.EntryBy], T1.[Task_RequisitionFinalize.EntryDate])
    FROM (
        SELECT 
            T.RequisitionId AS [Task_RequisitionFinalize.RequisitionId], 
            T.RequisitionNo AS [Task_RequisitionFinalize.RequisitionNo], 
            T.RequisitionDate AS [Task_RequisitionFinalize.RequisitionDate], 
            T.RequisitionBy AS [Task_RequisitionFinalize.RequisitionBy], 
            T.Remarks AS [Task_RequisitionFinalize.Remarks], 
            T.IsSettled AS [Task_RequisitionFinalize.IsSettled], 
            T.Approved AS [Task_RequisitionFinalize.Approved], 
            T.ApprovedBy AS [Task_RequisitionFinalize.ApprovedBy], 
            T.ApprovedDate AS [Task_RequisitionFinalize.ApprovedDate], 
            T.CancelReason AS [Task_RequisitionFinalize.CancelReason], 
            T.LocationId AS [Task_RequisitionFinalize.LocationId], 
            T.CompanyId AS [Task_RequisitionFinalize.CompanyId], 
            T.EntryBy AS [Task_RequisitionFinalize.EntryBy], 
            T.EntryDate AS [Task_RequisitionFinalize.EntryDate], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_RequisitionFinalize AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_RequisitionFinalizeDetail.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView404()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_RequisitionFinalizeDetail
        [BTS_OPSModel.Task_RequisitionFinalizeDetail](T1.[Task_RequisitionFinalizeDetail.RequisitionDetailId], T1.[Task_RequisitionFinalizeDetail.RequisitionId], T1.[Task_RequisitionFinalizeDetail.ItemRequisitionId], T1.[Task_RequisitionFinalizeDetail.ProductId], T1.[Task_RequisitionFinalizeDetail.ProductDimensionId], T1.[Task_RequisitionFinalizeDetail.UnitTypeId], T1.[Task_RequisitionFinalizeDetail.Quantity], T1.[Task_RequisitionFinalizeDetail.OrderedQuantity])
    FROM (
        SELECT 
            T.RequisitionDetailId AS [Task_RequisitionFinalizeDetail.RequisitionDetailId], 
            T.RequisitionId AS [Task_RequisitionFinalizeDetail.RequisitionId], 
            T.ItemRequisitionId AS [Task_RequisitionFinalizeDetail.ItemRequisitionId], 
            T.ProductId AS [Task_RequisitionFinalizeDetail.ProductId], 
            T.ProductDimensionId AS [Task_RequisitionFinalizeDetail.ProductDimensionId], 
            T.UnitTypeId AS [Task_RequisitionFinalizeDetail.UnitTypeId], 
            T.Quantity AS [Task_RequisitionFinalizeDetail.Quantity], 
            T.OrderedQuantity AS [Task_RequisitionFinalizeDetail.OrderedQuantity], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_RequisitionFinalizeDetail AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_RequisitionFinalizeNos.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView405()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_RequisitionFinalizeNos
        [BTS_OPSModel.Task_RequisitionFinalizeNos](T1.[Task_RequisitionFinalizeNos.Id], T1.[Task_RequisitionFinalizeNos.RequisitionNo], T1.[Task_RequisitionFinalizeNos.Year], T1.[Task_RequisitionFinalizeNos.CompanyId])
    FROM (
        SELECT 
            T.Id AS [Task_RequisitionFinalizeNos.Id], 
            T.RequisitionNo AS [Task_RequisitionFinalizeNos.RequisitionNo], 
            T.Year AS [Task_RequisitionFinalizeNos.Year], 
            T.CompanyId AS [Task_RequisitionFinalizeNos.CompanyId], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_RequisitionFinalizeNos AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_SalesInvoice.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView406()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_SalesInvoice
        [BTS_OPSModel.Task_SalesInvoice](T1.[Task_SalesInvoice.InvoiceId], T1.[Task_SalesInvoice.InvoiceNo], T1.[Task_SalesInvoice.InvoiceDate], T1.[Task_SalesInvoice.CustomerId], T1.[Task_SalesInvoice.CustomerDetail], T1.[Task_SalesInvoice.BuyerId], T1.[Task_SalesInvoice.SelectedCurrency], T1.[Task_SalesInvoice.Currency1Rate], T1.[Task_SalesInvoice.Currency2Rate], T1.[Task_SalesInvoice.InvoiceDiscountType], T1.[Task_SalesInvoice.InvoiceDiscountValue], T1.[Task_SalesInvoice.InvoiceDiscount1Value], T1.[Task_SalesInvoice.InvoiceDiscount2Value], T1.[Task_SalesInvoice.InvoiceDiscount], T1.[Task_SalesInvoice.Invoice1Discount], T1.[Task_SalesInvoice.Invoice2Discount], T1.[Task_SalesInvoice.InvoiceAmount], T1.[Task_SalesInvoice.Invoice1Amount], T1.[Task_SalesInvoice.Invoice2Amount], T1.[Task_SalesInvoice.CommissionType], T1.[Task_SalesInvoice.CommissionValue], T1.[Task_SalesInvoice.Commission1Value], T1.[Task_SalesInvoice.Commission2Value], T1.[Task_SalesInvoice.CommissionAmount], T1.[Task_SalesInvoice.Commission1Amount], T1.[Task_SalesInvoice.Commission2Amount], T1.[Task_SalesInvoice.GovtDutyAmount], T1.[Task_SalesInvoice.GovtDuty1Amount], T1.[Task_SalesInvoice.GovtDuty2Amount], T1.[Task_SalesInvoice.TotalChargeAmount], T1.[Task_SalesInvoice.TotalChargeAmount1], T1.[Task_SalesInvoice.TotalChargeAmount2], T1.[Task_SalesInvoice.IsSettledByCollection], T1.[Task_SalesInvoice.CollectedAmount], T1.[Task_SalesInvoice.Collected1Amount], T1.[Task_SalesInvoice.Collected2Amount], T1.[Task_SalesInvoice.IsFullPaid], T1.[Task_SalesInvoice.ApprovedCollectedAmount], T1.[Task_SalesInvoice.ApprovedCollected1Amount], T1.[Task_SalesInvoice.ApprovedCollected2Amount], T1.[Task_SalesInvoice.Approved], T1.[Task_SalesInvoice.ApprovedBy], T1.[Task_SalesInvoice.ApprovedDate], T1.[Task_SalesInvoice.CancelReason], T1.[Task_SalesInvoice.InvoiceOperationType], T1.[Task_SalesInvoice.TermsAndConditionsId], T1.[Task_SalesInvoice.TermsAndConditionsDetail], T1.[Task_SalesInvoice.ReferenceNo], T1.[Task_SalesInvoice.ReferenceDate], T1.[Task_SalesInvoice.Remarks], T1.[Task_SalesInvoice.TransactionFrom], T1.[Task_SalesInvoice.IsSalesModeCash], T1.[Task_SalesInvoice.IsSettledByReturn], T1.[Task_SalesInvoice.VoucherId], T1.[Task_SalesInvoice.GovtDutyChallanNo], T1.[Task_SalesInvoice.DeliveryPlace], T1.[Task_SalesInvoice.TransportTypeId], T1.[Task_SalesInvoice.LocationId], T1.[Task_SalesInvoice.CompanyId], T1.[Task_SalesInvoice.EntryBy], T1.[Task_SalesInvoice.EntryDate], T1.[Task_SalesInvoice.EditedBy], T1.[Task_SalesInvoice.EditedDate])
    FROM (
        SELECT 
            T.InvoiceId AS [Task_SalesInvoice.InvoiceId], 
            T.InvoiceNo AS [Task_SalesInvoice.InvoiceNo], 
            T.InvoiceDate AS [Task_SalesInvoice.InvoiceDate], 
            T.CustomerId AS [Task_SalesInvoice.CustomerId], 
            T.CustomerDetail AS [Task_SalesInvoice.CustomerDetail], 
            T.BuyerId AS [Task_SalesInvoice.BuyerId], 
            T.SelectedCurrency AS [Task_SalesInvoice.SelectedCurrency], 
            T.Currency1Rate AS [Task_SalesInvoice.Currency1Rate], 
            T.Currency2Rate AS [Task_SalesInvoice.Currency2Rate], 
            T.InvoiceDiscountType AS [Task_SalesInvoice.InvoiceDiscountType], 
            T.InvoiceDiscountValue AS [Task_SalesInvoice.InvoiceDiscountValue], 
            T.InvoiceDiscount1Value AS [Task_SalesInvoice.InvoiceDiscount1Value], 
            T.InvoiceDiscount2Value AS [Task_SalesInvoice.InvoiceDiscount2Value], 
            T.InvoiceDiscount AS [Task_SalesInvoice.InvoiceDiscount], 
            T.Invoice1Discount AS [Task_SalesInvoice.Invoice1Discount], 
            T.Invoice2Discount AS [Task_SalesInvoice.Invoice2Discount], 
            T.InvoiceAmount AS [Task_SalesInvoice.InvoiceAmount], 
            T.Invoice1Amount AS [Task_SalesInvoice.Invoice1Amount], 
            T.Invoice2Amount AS [Task_SalesInvoice.Invoice2Amount], 
            T.CommissionType AS [Task_SalesInvoice.CommissionType], 
            T.CommissionValue AS [Task_SalesInvoice.CommissionValue], 
            T.Commission1Value AS [Task_SalesInvoice.Commission1Value], 
            T.Commission2Value AS [Task_SalesInvoice.Commission2Value], 
            T.CommissionAmount AS [Task_SalesInvoice.CommissionAmount], 
            T.Commission1Amount AS [Task_SalesInvoice.Commission1Amount], 
            T.Commission2Amount AS [Task_SalesInvoice.Commission2Amount], 
            T.GovtDutyAmount AS [Task_SalesInvoice.GovtDutyAmount], 
            T.GovtDuty1Amount AS [Task_SalesInvoice.GovtDuty1Amount], 
            T.GovtDuty2Amount AS [Task_SalesInvoice.GovtDuty2Amount], 
            T.TotalChargeAmount AS [Task_SalesInvoice.TotalChargeAmount], 
            T.TotalChargeAmount1 AS [Task_SalesInvoice.TotalChargeAmount1], 
            T.TotalChargeAmount2 AS [Task_SalesInvoice.TotalChargeAmount2], 
            T.IsSettledByCollection AS [Task_SalesInvoice.IsSettledByCollection], 
            T.CollectedAmount AS [Task_SalesInvoice.CollectedAmount], 
            T.Collected1Amount AS [Task_SalesInvoice.Collected1Amount], 
            T.Collected2Amount AS [Task_SalesInvoice.Collected2Amount], 
            T.IsFullPaid AS [Task_SalesInvoice.IsFullPaid], 
            T.ApprovedCollectedAmount AS [Task_SalesInvoice.ApprovedCollectedAmount], 
            T.ApprovedCollected1Amount AS [Task_SalesInvoice.ApprovedCollected1Amount], 
            T.ApprovedCollected2Amount AS [Task_SalesInvoice.ApprovedCollected2Amount], 
            T.Approved AS [Task_SalesInvoice.Approved], 
            T.ApprovedBy AS [Task_SalesInvoice.ApprovedBy], 
            T.ApprovedDate AS [Task_SalesInvoice.ApprovedDate], 
            T.CancelReason AS [Task_SalesInvoice.CancelReason], 
            T.InvoiceOperationType AS [Task_SalesInvoice.InvoiceOperationType], 
            T.TermsAndConditionsId AS [Task_SalesInvoice.TermsAndConditionsId], 
            T.TermsAndConditionsDetail AS [Task_SalesInvoice.TermsAndConditionsDetail], 
            T.ReferenceNo AS [Task_SalesInvoice.ReferenceNo], 
            T.ReferenceDate AS [Task_SalesInvoice.ReferenceDate], 
            T.Remarks AS [Task_SalesInvoice.Remarks], 
            T.TransactionFrom AS [Task_SalesInvoice.TransactionFrom], 
            T.IsSalesModeCash AS [Task_SalesInvoice.IsSalesModeCash], 
            T.IsSettledByReturn AS [Task_SalesInvoice.IsSettledByReturn], 
            T.VoucherId AS [Task_SalesInvoice.VoucherId], 
            T.GovtDutyChallanNo AS [Task_SalesInvoice.GovtDutyChallanNo], 
            T.DeliveryPlace AS [Task_SalesInvoice.DeliveryPlace], 
            T.TransportTypeId AS [Task_SalesInvoice.TransportTypeId], 
            T.LocationId AS [Task_SalesInvoice.LocationId], 
            T.CompanyId AS [Task_SalesInvoice.CompanyId], 
            T.EntryBy AS [Task_SalesInvoice.EntryBy], 
            T.EntryDate AS [Task_SalesInvoice.EntryDate], 
            T.EditedBy AS [Task_SalesInvoice.EditedBy], 
            T.EditedDate AS [Task_SalesInvoice.EditedDate], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_SalesInvoice AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_SalesInvoice_Charge.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView407()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_SalesInvoice_Charge
        [BTS_OPSModel.Task_SalesInvoice_Charge](T1.[Task_SalesInvoice_Charge.SalesInvoiceChargeId], T1.[Task_SalesInvoice_Charge.InvoiceId], T1.[Task_SalesInvoice_Charge.ChargeEventId], T1.[Task_SalesInvoice_Charge.ChargeAmount], T1.[Task_SalesInvoice_Charge.Charge1Amount], T1.[Task_SalesInvoice_Charge.Charge2Amount])
    FROM (
        SELECT 
            T.SalesInvoiceChargeId AS [Task_SalesInvoice_Charge.SalesInvoiceChargeId], 
            T.InvoiceId AS [Task_SalesInvoice_Charge.InvoiceId], 
            T.ChargeEventId AS [Task_SalesInvoice_Charge.ChargeEventId], 
            T.ChargeAmount AS [Task_SalesInvoice_Charge.ChargeAmount], 
            T.Charge1Amount AS [Task_SalesInvoice_Charge.Charge1Amount], 
            T.Charge2Amount AS [Task_SalesInvoice_Charge.Charge2Amount], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_SalesInvoice_Charge AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_SalesInvoiceDetail.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView408()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_SalesInvoiceDetail
        [BTS_OPSModel.Task_SalesInvoiceDetail](T1.[Task_SalesInvoiceDetail.InvoiceDetailId], T1.[Task_SalesInvoiceDetail.InvoiceId], T1.[Task_SalesInvoiceDetail.ChallanId], T1.[Task_SalesInvoiceDetail.ChallanDetailId], T1.[Task_SalesInvoiceDetail.ProductEntrySequence], T1.[Task_SalesInvoiceDetail.ProductId], T1.[Task_SalesInvoiceDetail.ProductDimensionId], T1.[Task_SalesInvoiceDetail.UnitTypeId], T1.[Task_SalesInvoiceDetail.Quantity], T1.[Task_SalesInvoiceDetail.Price], T1.[Task_SalesInvoiceDetail.Price1], T1.[Task_SalesInvoiceDetail.Price2], T1.[Task_SalesInvoiceDetail.DiscountType], T1.[Task_SalesInvoiceDetail.DiscountValue], T1.[Task_SalesInvoiceDetail.Discount1Value], T1.[Task_SalesInvoiceDetail.Discount2Value], T1.[Task_SalesInvoiceDetail.Discount], T1.[Task_SalesInvoiceDetail.Discount1], T1.[Task_SalesInvoiceDetail.Discount2], T1.[Task_SalesInvoiceDetail.InvoiceDiscount], T1.[Task_SalesInvoiceDetail.InvoiceDiscount1], T1.[Task_SalesInvoiceDetail.InvoiceDiscount2], T1.[Task_SalesInvoiceDetail.Cost], T1.[Task_SalesInvoiceDetail.Cost1], T1.[Task_SalesInvoiceDetail.Cost2], T1.[Task_SalesInvoiceDetail.PrimaryUnitTypeId], T1.[Task_SalesInvoiceDetail.SecondaryUnitTypeId], T1.[Task_SalesInvoiceDetail.TertiaryUnitTypeId], T1.[Task_SalesInvoiceDetail.SecondaryConversionRatio], T1.[Task_SalesInvoiceDetail.TertiaryConversionRatio], T1.[Task_SalesInvoiceDetail.WareHouseId], T1.[Task_SalesInvoiceDetail.ReturnedQuantity], T1.[Task_SalesInvoiceDetail.IsIncludingGovtDuty], T1.[Task_SalesInvoiceDetail.GoodsReceiveId], T1.[Task_SalesInvoiceDetail.ImportedStockInId], T1.[Task_SalesInvoiceDetail.SupplierId], T1.[Task_SalesInvoiceDetail.ShortSpecification], T1.[Task_SalesInvoiceDetail.IsWarrantyAvailable], T1.[Task_SalesInvoiceDetail.WarrantyDays], T1.[Task_SalesInvoiceDetail.IsServiceWarranty], T1.[Task_SalesInvoiceDetail.ServiceWarrantyDays])
    FROM (
        SELECT 
            T.InvoiceDetailId AS [Task_SalesInvoiceDetail.InvoiceDetailId], 
            T.InvoiceId AS [Task_SalesInvoiceDetail.InvoiceId], 
            T.ChallanId AS [Task_SalesInvoiceDetail.ChallanId], 
            T.ChallanDetailId AS [Task_SalesInvoiceDetail.ChallanDetailId], 
            T.ProductEntrySequence AS [Task_SalesInvoiceDetail.ProductEntrySequence], 
            T.ProductId AS [Task_SalesInvoiceDetail.ProductId], 
            T.ProductDimensionId AS [Task_SalesInvoiceDetail.ProductDimensionId], 
            T.UnitTypeId AS [Task_SalesInvoiceDetail.UnitTypeId], 
            T.Quantity AS [Task_SalesInvoiceDetail.Quantity], 
            T.Price AS [Task_SalesInvoiceDetail.Price], 
            T.Price1 AS [Task_SalesInvoiceDetail.Price1], 
            T.Price2 AS [Task_SalesInvoiceDetail.Price2], 
            T.DiscountType AS [Task_SalesInvoiceDetail.DiscountType], 
            T.DiscountValue AS [Task_SalesInvoiceDetail.DiscountValue], 
            T.Discount1Value AS [Task_SalesInvoiceDetail.Discount1Value], 
            T.Discount2Value AS [Task_SalesInvoiceDetail.Discount2Value], 
            T.Discount AS [Task_SalesInvoiceDetail.Discount], 
            T.Discount1 AS [Task_SalesInvoiceDetail.Discount1], 
            T.Discount2 AS [Task_SalesInvoiceDetail.Discount2], 
            T.InvoiceDiscount AS [Task_SalesInvoiceDetail.InvoiceDiscount], 
            T.InvoiceDiscount1 AS [Task_SalesInvoiceDetail.InvoiceDiscount1], 
            T.InvoiceDiscount2 AS [Task_SalesInvoiceDetail.InvoiceDiscount2], 
            T.Cost AS [Task_SalesInvoiceDetail.Cost], 
            T.Cost1 AS [Task_SalesInvoiceDetail.Cost1], 
            T.Cost2 AS [Task_SalesInvoiceDetail.Cost2], 
            T.PrimaryUnitTypeId AS [Task_SalesInvoiceDetail.PrimaryUnitTypeId], 
            T.SecondaryUnitTypeId AS [Task_SalesInvoiceDetail.SecondaryUnitTypeId], 
            T.TertiaryUnitTypeId AS [Task_SalesInvoiceDetail.TertiaryUnitTypeId], 
            T.SecondaryConversionRatio AS [Task_SalesInvoiceDetail.SecondaryConversionRatio], 
            T.TertiaryConversionRatio AS [Task_SalesInvoiceDetail.TertiaryConversionRatio], 
            T.WareHouseId AS [Task_SalesInvoiceDetail.WareHouseId], 
            T.ReturnedQuantity AS [Task_SalesInvoiceDetail.ReturnedQuantity], 
            T.IsIncludingGovtDuty AS [Task_SalesInvoiceDetail.IsIncludingGovtDuty], 
            T.GoodsReceiveId AS [Task_SalesInvoiceDetail.GoodsReceiveId], 
            T.ImportedStockInId AS [Task_SalesInvoiceDetail.ImportedStockInId], 
            T.SupplierId AS [Task_SalesInvoiceDetail.SupplierId], 
            T.ShortSpecification AS [Task_SalesInvoiceDetail.ShortSpecification], 
            T.IsWarrantyAvailable AS [Task_SalesInvoiceDetail.IsWarrantyAvailable], 
            T.WarrantyDays AS [Task_SalesInvoiceDetail.WarrantyDays], 
            T.IsServiceWarranty AS [Task_SalesInvoiceDetail.IsServiceWarranty], 
            T.ServiceWarrantyDays AS [Task_SalesInvoiceDetail.ServiceWarrantyDays], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_SalesInvoiceDetail AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_SalesInvoiceDetail_GovtDuty.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView409()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_SalesInvoiceDetail_GovtDuty
        [BTS_OPSModel.Task_SalesInvoiceDetail_GovtDuty](T1.[Task_SalesInvoiceDetail_GovtDuty.Id], T1.[Task_SalesInvoiceDetail_GovtDuty.InvoiceDetailId], T1.[Task_SalesInvoiceDetail_GovtDuty.GovtDutyId], T1.[Task_SalesInvoiceDetail_GovtDuty.RateType], T1.[Task_SalesInvoiceDetail_GovtDuty.RateValue], T1.[Task_SalesInvoiceDetail_GovtDuty.RateValue1], T1.[Task_SalesInvoiceDetail_GovtDuty.RateValue2], T1.[Task_SalesInvoiceDetail_GovtDuty.RateAmount], T1.[Task_SalesInvoiceDetail_GovtDuty.RateAmount1], T1.[Task_SalesInvoiceDetail_GovtDuty.RateAmount2], T1.[Task_SalesInvoiceDetail_GovtDuty.ExemptedType], T1.[Task_SalesInvoiceDetail_GovtDuty.ExemptedValue], T1.[Task_SalesInvoiceDetail_GovtDuty.ExemptedValue1], T1.[Task_SalesInvoiceDetail_GovtDuty.ExemptedValue2], T1.[Task_SalesInvoiceDetail_GovtDuty.ExemptedAmount], T1.[Task_SalesInvoiceDetail_GovtDuty.ExemptedAmount1], T1.[Task_SalesInvoiceDetail_GovtDuty.ExemptedAmount2])
    FROM (
        SELECT 
            T.Id AS [Task_SalesInvoiceDetail_GovtDuty.Id], 
            T.InvoiceDetailId AS [Task_SalesInvoiceDetail_GovtDuty.InvoiceDetailId], 
            T.GovtDutyId AS [Task_SalesInvoiceDetail_GovtDuty.GovtDutyId], 
            T.RateType AS [Task_SalesInvoiceDetail_GovtDuty.RateType], 
            T.RateValue AS [Task_SalesInvoiceDetail_GovtDuty.RateValue], 
            T.RateValue1 AS [Task_SalesInvoiceDetail_GovtDuty.RateValue1], 
            T.RateValue2 AS [Task_SalesInvoiceDetail_GovtDuty.RateValue2], 
            T.RateAmount AS [Task_SalesInvoiceDetail_GovtDuty.RateAmount], 
            T.RateAmount1 AS [Task_SalesInvoiceDetail_GovtDuty.RateAmount1], 
            T.RateAmount2 AS [Task_SalesInvoiceDetail_GovtDuty.RateAmount2], 
            T.ExemptedType AS [Task_SalesInvoiceDetail_GovtDuty.ExemptedType], 
            T.ExemptedValue AS [Task_SalesInvoiceDetail_GovtDuty.ExemptedValue], 
            T.ExemptedValue1 AS [Task_SalesInvoiceDetail_GovtDuty.ExemptedValue1], 
            T.ExemptedValue2 AS [Task_SalesInvoiceDetail_GovtDuty.ExemptedValue2], 
            T.ExemptedAmount AS [Task_SalesInvoiceDetail_GovtDuty.ExemptedAmount], 
            T.ExemptedAmount1 AS [Task_SalesInvoiceDetail_GovtDuty.ExemptedAmount1], 
            T.ExemptedAmount2 AS [Task_SalesInvoiceDetail_GovtDuty.ExemptedAmount2], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_SalesInvoiceDetail_GovtDuty AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_SalesInvoiceDetailSerial.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView410()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_SalesInvoiceDetailSerial
        [BTS_OPSModel.Task_SalesInvoiceDetailSerial](T1.[Task_SalesInvoiceDetailSerial.InvoiceDetailSerialId], T1.[Task_SalesInvoiceDetailSerial.InvoiceDetailId], T1.[Task_SalesInvoiceDetailSerial.Serial], T1.[Task_SalesInvoiceDetailSerial.AdditionalSerial], T1.[Task_SalesInvoiceDetailSerial.IsReturned])
    FROM (
        SELECT 
            T.InvoiceDetailSerialId AS [Task_SalesInvoiceDetailSerial.InvoiceDetailSerialId], 
            T.InvoiceDetailId AS [Task_SalesInvoiceDetailSerial.InvoiceDetailId], 
            T.Serial AS [Task_SalesInvoiceDetailSerial.Serial], 
            T.AdditionalSerial AS [Task_SalesInvoiceDetailSerial.AdditionalSerial], 
            T.IsReturned AS [Task_SalesInvoiceDetailSerial.IsReturned], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_SalesInvoiceDetailSerial AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_SalesInvoiceNos.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView411()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_SalesInvoiceNos
        [BTS_OPSModel.Task_SalesInvoiceNos](T1.[Task_SalesInvoiceNos.Id], T1.[Task_SalesInvoiceNos.InvoiceNo], T1.[Task_SalesInvoiceNos.Year], T1.[Task_SalesInvoiceNos.CompanyId])
    FROM (
        SELECT 
            T.Id AS [Task_SalesInvoiceNos.Id], 
            T.InvoiceNo AS [Task_SalesInvoiceNos.InvoiceNo], 
            T.Year AS [Task_SalesInvoiceNos.Year], 
            T.CompanyId AS [Task_SalesInvoiceNos.CompanyId], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_SalesInvoiceNos AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_SalesOrder.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView412()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_SalesOrder
        [BTS_OPSModel.Task_SalesOrder](T1.[Task_SalesOrder.SalesOrderId], T1.[Task_SalesOrder.SalesOrderNo], T1.[Task_SalesOrder.OrderDate], T1.[Task_SalesOrder.CustomerId], T1.[Task_SalesOrder.CustomerDetail], T1.[Task_SalesOrder.BuyerId], T1.[Task_SalesOrder.SalesPersonId], T1.[Task_SalesOrder.SalesType], T1.[Task_SalesOrder.ReferenceNo], T1.[Task_SalesOrder.ReferenceDate], T1.[Task_SalesOrder.OperationTypeId], T1.[Task_SalesOrder.TermsAndConditionsId], T1.[Task_SalesOrder.TermsAndConditionsDetail], T1.[Task_SalesOrder.Remarks], T1.[Task_SalesOrder.ShipmentType], T1.[Task_SalesOrder.ApxShipmentDate], T1.[Task_SalesOrder.ShipmentMode], T1.[Task_SalesOrder.DeliveryFromId], T1.[Task_SalesOrder.WareHouseId], T1.[Task_SalesOrder.PaymentModeId], T1.[Task_SalesOrder.PromisedDate], T1.[Task_SalesOrder.PaymentTermsId], T1.[Task_SalesOrder.PaymentTermsDetail], T1.[Task_SalesOrder.SelectedCurrency], T1.[Task_SalesOrder.Currency1Rate], T1.[Task_SalesOrder.Currency2Rate], T1.[Task_SalesOrder.OrderAmount], T1.[Task_SalesOrder.Order1Amount], T1.[Task_SalesOrder.Order2Amount], T1.[Task_SalesOrder.OrderDiscount], T1.[Task_SalesOrder.Order1Discount], T1.[Task_SalesOrder.Order2Discount], T1.[Task_SalesOrder.GovtDutyAmount], T1.[Task_SalesOrder.GovtDuty1Amount], T1.[Task_SalesOrder.GovtDuty2Amount], T1.[Task_SalesOrder.TotalChargeAmount], T1.[Task_SalesOrder.TotalChargeAmount1], T1.[Task_SalesOrder.TotalChargeAmount2], T1.[Task_SalesOrder.Approved], T1.[Task_SalesOrder.ApprovedBy], T1.[Task_SalesOrder.ApprovedDate], T1.[Task_SalesOrder.CancelReason], T1.[Task_SalesOrder.CollectedAmount], T1.[Task_SalesOrder.Collected1Amount], T1.[Task_SalesOrder.Collected2Amount], T1.[Task_SalesOrder.TransactionFrom], T1.[Task_SalesOrder.IsSalesModeCash], T1.[Task_SalesOrder.IsSettledByChallan], T1.[Task_SalesOrder.GovtDutyChallanNo], T1.[Task_SalesOrder.LocationId], T1.[Task_SalesOrder.CompanyId], T1.[Task_SalesOrder.EntryBy], T1.[Task_SalesOrder.EntryDate], T1.[Task_SalesOrder.EditedBy], T1.[Task_SalesOrder.EditedDate])
    FROM (
        SELECT 
            T.SalesOrderId AS [Task_SalesOrder.SalesOrderId], 
            T.SalesOrderNo AS [Task_SalesOrder.SalesOrderNo], 
            T.OrderDate AS [Task_SalesOrder.OrderDate], 
            T.CustomerId AS [Task_SalesOrder.CustomerId], 
            T.CustomerDetail AS [Task_SalesOrder.CustomerDetail], 
            T.BuyerId AS [Task_SalesOrder.BuyerId], 
            T.SalesPersonId AS [Task_SalesOrder.SalesPersonId], 
            T.SalesType AS [Task_SalesOrder.SalesType], 
            T.ReferenceNo AS [Task_SalesOrder.ReferenceNo], 
            T.ReferenceDate AS [Task_SalesOrder.ReferenceDate], 
            T.OperationTypeId AS [Task_SalesOrder.OperationTypeId], 
            T.TermsAndConditionsId AS [Task_SalesOrder.TermsAndConditionsId], 
            T.TermsAndConditionsDetail AS [Task_SalesOrder.TermsAndConditionsDetail], 
            T.Remarks AS [Task_SalesOrder.Remarks], 
            T.ShipmentType AS [Task_SalesOrder.ShipmentType], 
            T.ApxShipmentDate AS [Task_SalesOrder.ApxShipmentDate], 
            T.ShipmentMode AS [Task_SalesOrder.ShipmentMode], 
            T.DeliveryFromId AS [Task_SalesOrder.DeliveryFromId], 
            T.WareHouseId AS [Task_SalesOrder.WareHouseId], 
            T.PaymentModeId AS [Task_SalesOrder.PaymentModeId], 
            T.PromisedDate AS [Task_SalesOrder.PromisedDate], 
            T.PaymentTermsId AS [Task_SalesOrder.PaymentTermsId], 
            T.PaymentTermsDetail AS [Task_SalesOrder.PaymentTermsDetail], 
            T.SelectedCurrency AS [Task_SalesOrder.SelectedCurrency], 
            T.Currency1Rate AS [Task_SalesOrder.Currency1Rate], 
            T.Currency2Rate AS [Task_SalesOrder.Currency2Rate], 
            T.OrderAmount AS [Task_SalesOrder.OrderAmount], 
            T.Order1Amount AS [Task_SalesOrder.Order1Amount], 
            T.Order2Amount AS [Task_SalesOrder.Order2Amount], 
            T.OrderDiscount AS [Task_SalesOrder.OrderDiscount], 
            T.Order1Discount AS [Task_SalesOrder.Order1Discount], 
            T.Order2Discount AS [Task_SalesOrder.Order2Discount], 
            T.GovtDutyAmount AS [Task_SalesOrder.GovtDutyAmount], 
            T.GovtDuty1Amount AS [Task_SalesOrder.GovtDuty1Amount], 
            T.GovtDuty2Amount AS [Task_SalesOrder.GovtDuty2Amount], 
            T.TotalChargeAmount AS [Task_SalesOrder.TotalChargeAmount], 
            T.TotalChargeAmount1 AS [Task_SalesOrder.TotalChargeAmount1], 
            T.TotalChargeAmount2 AS [Task_SalesOrder.TotalChargeAmount2], 
            T.Approved AS [Task_SalesOrder.Approved], 
            T.ApprovedBy AS [Task_SalesOrder.ApprovedBy], 
            T.ApprovedDate AS [Task_SalesOrder.ApprovedDate], 
            T.CancelReason AS [Task_SalesOrder.CancelReason], 
            T.CollectedAmount AS [Task_SalesOrder.CollectedAmount], 
            T.Collected1Amount AS [Task_SalesOrder.Collected1Amount], 
            T.Collected2Amount AS [Task_SalesOrder.Collected2Amount], 
            T.TransactionFrom AS [Task_SalesOrder.TransactionFrom], 
            T.IsSalesModeCash AS [Task_SalesOrder.IsSalesModeCash], 
            T.IsSettledByChallan AS [Task_SalesOrder.IsSettledByChallan], 
            T.GovtDutyChallanNo AS [Task_SalesOrder.GovtDutyChallanNo], 
            T.LocationId AS [Task_SalesOrder.LocationId], 
            T.CompanyId AS [Task_SalesOrder.CompanyId], 
            T.EntryBy AS [Task_SalesOrder.EntryBy], 
            T.EntryDate AS [Task_SalesOrder.EntryDate], 
            T.EditedBy AS [Task_SalesOrder.EditedBy], 
            T.EditedDate AS [Task_SalesOrder.EditedDate], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_SalesOrder AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_SalesOrder_Charge.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView413()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_SalesOrder_Charge
        [BTS_OPSModel.Task_SalesOrder_Charge](T1.[Task_SalesOrder_Charge.SalesOrderChargeId], T1.[Task_SalesOrder_Charge.SalesOrderId], T1.[Task_SalesOrder_Charge.ChargeEventId], T1.[Task_SalesOrder_Charge.ChargeAmount], T1.[Task_SalesOrder_Charge.Charge1Amount], T1.[Task_SalesOrder_Charge.Charge2Amount])
    FROM (
        SELECT 
            T.SalesOrderChargeId AS [Task_SalesOrder_Charge.SalesOrderChargeId], 
            T.SalesOrderId AS [Task_SalesOrder_Charge.SalesOrderId], 
            T.ChargeEventId AS [Task_SalesOrder_Charge.ChargeEventId], 
            T.ChargeAmount AS [Task_SalesOrder_Charge.ChargeAmount], 
            T.Charge1Amount AS [Task_SalesOrder_Charge.Charge1Amount], 
            T.Charge2Amount AS [Task_SalesOrder_Charge.Charge2Amount], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_SalesOrder_Charge AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_SalesOrderDeliveryInfo.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView414()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_SalesOrderDeliveryInfo
        [BTS_OPSModel.Task_SalesOrderDeliveryInfo](T1.[Task_SalesOrderDeliveryInfo.DeliveryInfoId], T1.[Task_SalesOrderDeliveryInfo.SalesOrderId], T1.[Task_SalesOrderDeliveryInfo.DeliveryPlace], T1.[Task_SalesOrderDeliveryInfo.ContactPerson], T1.[Task_SalesOrderDeliveryInfo.ContactPersonNo], T1.[Task_SalesOrderDeliveryInfo.TransportId], T1.[Task_SalesOrderDeliveryInfo.TransportTypeId], T1.[Task_SalesOrderDeliveryInfo.VehicleNo], T1.[Task_SalesOrderDeliveryInfo.DriverName], T1.[Task_SalesOrderDeliveryInfo.DriverContactNo])
    FROM (
        SELECT 
            T.DeliveryInfoId AS [Task_SalesOrderDeliveryInfo.DeliveryInfoId], 
            T.SalesOrderId AS [Task_SalesOrderDeliveryInfo.SalesOrderId], 
            T.DeliveryPlace AS [Task_SalesOrderDeliveryInfo.DeliveryPlace], 
            T.ContactPerson AS [Task_SalesOrderDeliveryInfo.ContactPerson], 
            T.ContactPersonNo AS [Task_SalesOrderDeliveryInfo.ContactPersonNo], 
            T.TransportId AS [Task_SalesOrderDeliveryInfo.TransportId], 
            T.TransportTypeId AS [Task_SalesOrderDeliveryInfo.TransportTypeId], 
            T.VehicleNo AS [Task_SalesOrderDeliveryInfo.VehicleNo], 
            T.DriverName AS [Task_SalesOrderDeliveryInfo.DriverName], 
            T.DriverContactNo AS [Task_SalesOrderDeliveryInfo.DriverContactNo], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_SalesOrderDeliveryInfo AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_SalesOrderDetail.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView415()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_SalesOrderDetail
        [BTS_OPSModel.Task_SalesOrderDetail](T1.[Task_SalesOrderDetail.SalesOrderDetailId], T1.[Task_SalesOrderDetail.SalesOrderId], T1.[Task_SalesOrderDetail.ProductId], T1.[Task_SalesOrderDetail.ProductDimensionId], T1.[Task_SalesOrderDetail.UnitTypeId], T1.[Task_SalesOrderDetail.Quantity], T1.[Task_SalesOrderDetail.DeliveredQuantity], T1.[Task_SalesOrderDetail.Price], T1.[Task_SalesOrderDetail.Price1], T1.[Task_SalesOrderDetail.Price2], T1.[Task_SalesOrderDetail.DiscountType], T1.[Task_SalesOrderDetail.DiscountValue], T1.[Task_SalesOrderDetail.Discount1Value], T1.[Task_SalesOrderDetail.Discount2Value], T1.[Task_SalesOrderDetail.Discount], T1.[Task_SalesOrderDetail.Discount1], T1.[Task_SalesOrderDetail.Discount2], T1.[Task_SalesOrderDetail.InvoiceDiscount], T1.[Task_SalesOrderDetail.InvoiceDiscount1], T1.[Task_SalesOrderDetail.InvoiceDiscount2], T1.[Task_SalesOrderDetail.Cost], T1.[Task_SalesOrderDetail.Cost1], T1.[Task_SalesOrderDetail.Cost2], T1.[Task_SalesOrderDetail.PrimaryUnitTypeId], T1.[Task_SalesOrderDetail.SecondaryUnitTypeId], T1.[Task_SalesOrderDetail.TertiaryUnitTypeId], T1.[Task_SalesOrderDetail.SecondaryConversionRatio], T1.[Task_SalesOrderDetail.TertiaryConversionRatio], T1.[Task_SalesOrderDetail.IsIncludingGovtDuty], T1.[Task_SalesOrderDetail.ShortSpecification], T1.[Task_SalesOrderDetail.IsWarrantyAvailable], T1.[Task_SalesOrderDetail.WarrantyDays], T1.[Task_SalesOrderDetail.IsServiceWarranty], T1.[Task_SalesOrderDetail.ServiceWarrantyDays])
    FROM (
        SELECT 
            T.SalesOrderDetailId AS [Task_SalesOrderDetail.SalesOrderDetailId], 
            T.SalesOrderId AS [Task_SalesOrderDetail.SalesOrderId], 
            T.ProductId AS [Task_SalesOrderDetail.ProductId], 
            T.ProductDimensionId AS [Task_SalesOrderDetail.ProductDimensionId], 
            T.UnitTypeId AS [Task_SalesOrderDetail.UnitTypeId], 
            T.Quantity AS [Task_SalesOrderDetail.Quantity], 
            T.DeliveredQuantity AS [Task_SalesOrderDetail.DeliveredQuantity], 
            T.Price AS [Task_SalesOrderDetail.Price], 
            T.Price1 AS [Task_SalesOrderDetail.Price1], 
            T.Price2 AS [Task_SalesOrderDetail.Price2], 
            T.DiscountType AS [Task_SalesOrderDetail.DiscountType], 
            T.DiscountValue AS [Task_SalesOrderDetail.DiscountValue], 
            T.Discount1Value AS [Task_SalesOrderDetail.Discount1Value], 
            T.Discount2Value AS [Task_SalesOrderDetail.Discount2Value], 
            T.Discount AS [Task_SalesOrderDetail.Discount], 
            T.Discount1 AS [Task_SalesOrderDetail.Discount1], 
            T.Discount2 AS [Task_SalesOrderDetail.Discount2], 
            T.InvoiceDiscount AS [Task_SalesOrderDetail.InvoiceDiscount], 
            T.InvoiceDiscount1 AS [Task_SalesOrderDetail.InvoiceDiscount1], 
            T.InvoiceDiscount2 AS [Task_SalesOrderDetail.InvoiceDiscount2], 
            T.Cost AS [Task_SalesOrderDetail.Cost], 
            T.Cost1 AS [Task_SalesOrderDetail.Cost1], 
            T.Cost2 AS [Task_SalesOrderDetail.Cost2], 
            T.PrimaryUnitTypeId AS [Task_SalesOrderDetail.PrimaryUnitTypeId], 
            T.SecondaryUnitTypeId AS [Task_SalesOrderDetail.SecondaryUnitTypeId], 
            T.TertiaryUnitTypeId AS [Task_SalesOrderDetail.TertiaryUnitTypeId], 
            T.SecondaryConversionRatio AS [Task_SalesOrderDetail.SecondaryConversionRatio], 
            T.TertiaryConversionRatio AS [Task_SalesOrderDetail.TertiaryConversionRatio], 
            T.IsIncludingGovtDuty AS [Task_SalesOrderDetail.IsIncludingGovtDuty], 
            T.ShortSpecification AS [Task_SalesOrderDetail.ShortSpecification], 
            T.IsWarrantyAvailable AS [Task_SalesOrderDetail.IsWarrantyAvailable], 
            T.WarrantyDays AS [Task_SalesOrderDetail.WarrantyDays], 
            T.IsServiceWarranty AS [Task_SalesOrderDetail.IsServiceWarranty], 
            T.ServiceWarrantyDays AS [Task_SalesOrderDetail.ServiceWarrantyDays], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_SalesOrderDetail AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_SalesOrderDetail_GovtDuty.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView416()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_SalesOrderDetail_GovtDuty
        [BTS_OPSModel.Task_SalesOrderDetail_GovtDuty](T1.[Task_SalesOrderDetail_GovtDuty.Id], T1.[Task_SalesOrderDetail_GovtDuty.SalesOrderDetailId], T1.[Task_SalesOrderDetail_GovtDuty.GovtDutyId], T1.[Task_SalesOrderDetail_GovtDuty.RateType], T1.[Task_SalesOrderDetail_GovtDuty.RateValue], T1.[Task_SalesOrderDetail_GovtDuty.RateValue1], T1.[Task_SalesOrderDetail_GovtDuty.RateValue2], T1.[Task_SalesOrderDetail_GovtDuty.RateAmount], T1.[Task_SalesOrderDetail_GovtDuty.RateAmount1], T1.[Task_SalesOrderDetail_GovtDuty.RateAmount2], T1.[Task_SalesOrderDetail_GovtDuty.ExemptedType], T1.[Task_SalesOrderDetail_GovtDuty.ExemptedValue], T1.[Task_SalesOrderDetail_GovtDuty.ExemptedValue1], T1.[Task_SalesOrderDetail_GovtDuty.ExemptedValue2], T1.[Task_SalesOrderDetail_GovtDuty.ExemptedAmount], T1.[Task_SalesOrderDetail_GovtDuty.ExemptedAmount1], T1.[Task_SalesOrderDetail_GovtDuty.ExemptedAmount2])
    FROM (
        SELECT 
            T.Id AS [Task_SalesOrderDetail_GovtDuty.Id], 
            T.SalesOrderDetailId AS [Task_SalesOrderDetail_GovtDuty.SalesOrderDetailId], 
            T.GovtDutyId AS [Task_SalesOrderDetail_GovtDuty.GovtDutyId], 
            T.RateType AS [Task_SalesOrderDetail_GovtDuty.RateType], 
            T.RateValue AS [Task_SalesOrderDetail_GovtDuty.RateValue], 
            T.RateValue1 AS [Task_SalesOrderDetail_GovtDuty.RateValue1], 
            T.RateValue2 AS [Task_SalesOrderDetail_GovtDuty.RateValue2], 
            T.RateAmount AS [Task_SalesOrderDetail_GovtDuty.RateAmount], 
            T.RateAmount1 AS [Task_SalesOrderDetail_GovtDuty.RateAmount1], 
            T.RateAmount2 AS [Task_SalesOrderDetail_GovtDuty.RateAmount2], 
            T.ExemptedType AS [Task_SalesOrderDetail_GovtDuty.ExemptedType], 
            T.ExemptedValue AS [Task_SalesOrderDetail_GovtDuty.ExemptedValue], 
            T.ExemptedValue1 AS [Task_SalesOrderDetail_GovtDuty.ExemptedValue1], 
            T.ExemptedValue2 AS [Task_SalesOrderDetail_GovtDuty.ExemptedValue2], 
            T.ExemptedAmount AS [Task_SalesOrderDetail_GovtDuty.ExemptedAmount], 
            T.ExemptedAmount1 AS [Task_SalesOrderDetail_GovtDuty.ExemptedAmount1], 
            T.ExemptedAmount2 AS [Task_SalesOrderDetail_GovtDuty.ExemptedAmount2], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_SalesOrderDetail_GovtDuty AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_SalesOrderNos.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView417()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_SalesOrderNos
        [BTS_OPSModel.Task_SalesOrderNos](T1.[Task_SalesOrderNos.Id], T1.[Task_SalesOrderNos.SalesOrderNo], T1.[Task_SalesOrderNos.Year], T1.[Task_SalesOrderNos.CompanyId])
    FROM (
        SELECT 
            T.Id AS [Task_SalesOrderNos.Id], 
            T.SalesOrderNo AS [Task_SalesOrderNos.SalesOrderNo], 
            T.Year AS [Task_SalesOrderNos.Year], 
            T.CompanyId AS [Task_SalesOrderNos.CompanyId], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_SalesOrderNos AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_SalesQuotation.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView418()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_SalesQuotation
        [BTS_OPSModel.Task_SalesQuotation](T1.[Task_SalesQuotation.QuotationId], T1.[Task_SalesQuotation.QuotationNo], T1.[Task_SalesQuotation.QuotationDate], T1.[Task_SalesQuotation.CustomerId], T1.[Task_SalesQuotation.CustomerDetail], T1.[Task_SalesQuotation.OriginalBuyerId], T1.[Task_SalesQuotation.SalesPersonId], T1.[Task_SalesQuotation.SelectedCurrency], T1.[Task_SalesQuotation.Currency1Rate], T1.[Task_SalesQuotation.Currency2Rate], T1.[Task_SalesQuotation.ReferenceNo], T1.[Task_SalesQuotation.ReferenceDate], T1.[Task_SalesQuotation.OperationTypeId], T1.[Task_SalesQuotation.RequestedBy], T1.[Task_SalesQuotation.TermsAndConditionsId], T1.[Task_SalesQuotation.TermsAndConditionsDetail], T1.[Task_SalesQuotation.PaymentModeId], T1.[Task_SalesQuotation.PromisedDate], T1.[Task_SalesQuotation.PaymentTermsId], T1.[Task_SalesQuotation.PaymentTermsDetail], T1.[Task_SalesQuotation.BankGuaranteeRequired], T1.[Task_SalesQuotation.WorkOrderRequired], T1.[Task_SalesQuotation.CommissionType], T1.[Task_SalesQuotation.CommissionValue], T1.[Task_SalesQuotation.Commission1Value], T1.[Task_SalesQuotation.Commission2Value], T1.[Task_SalesQuotation.CommissionAmount], T1.[Task_SalesQuotation.Commission1Amount], T1.[Task_SalesQuotation.Commission2Amount], T1.[Task_SalesQuotation.CommissionTakenBy], T1.[Task_SalesQuotation.CommissionTakerAddress], T1.[Task_SalesQuotation.CommissionContactPerson], T1.[Task_SalesQuotation.CommissionContactNo], T1.[Task_SalesQuotation.Approved], T1.[Task_SalesQuotation.ApprovedBy], T1.[Task_SalesQuotation.ApprovedDate], T1.[Task_SalesQuotation.CancelReason], T1.[Task_SalesQuotation.IsSalesDone], T1.[Task_SalesQuotation.LocationId], T1.[Task_SalesQuotation.CompanyId], T1.[Task_SalesQuotation.EntryBy], T1.[Task_SalesQuotation.EntryDate])
    FROM (
        SELECT 
            T.QuotationId AS [Task_SalesQuotation.QuotationId], 
            T.QuotationNo AS [Task_SalesQuotation.QuotationNo], 
            T.QuotationDate AS [Task_SalesQuotation.QuotationDate], 
            T.CustomerId AS [Task_SalesQuotation.CustomerId], 
            T.CustomerDetail AS [Task_SalesQuotation.CustomerDetail], 
            T.OriginalBuyerId AS [Task_SalesQuotation.OriginalBuyerId], 
            T.SalesPersonId AS [Task_SalesQuotation.SalesPersonId], 
            T.SelectedCurrency AS [Task_SalesQuotation.SelectedCurrency], 
            T.Currency1Rate AS [Task_SalesQuotation.Currency1Rate], 
            T.Currency2Rate AS [Task_SalesQuotation.Currency2Rate], 
            T.ReferenceNo AS [Task_SalesQuotation.ReferenceNo], 
            T.ReferenceDate AS [Task_SalesQuotation.ReferenceDate], 
            T.OperationTypeId AS [Task_SalesQuotation.OperationTypeId], 
            T.RequestedBy AS [Task_SalesQuotation.RequestedBy], 
            T.TermsAndConditionsId AS [Task_SalesQuotation.TermsAndConditionsId], 
            T.TermsAndConditionsDetail AS [Task_SalesQuotation.TermsAndConditionsDetail], 
            T.PaymentModeId AS [Task_SalesQuotation.PaymentModeId], 
            T.PromisedDate AS [Task_SalesQuotation.PromisedDate], 
            T.PaymentTermsId AS [Task_SalesQuotation.PaymentTermsId], 
            T.PaymentTermsDetail AS [Task_SalesQuotation.PaymentTermsDetail], 
            T.BankGuaranteeRequired AS [Task_SalesQuotation.BankGuaranteeRequired], 
            T.WorkOrderRequired AS [Task_SalesQuotation.WorkOrderRequired], 
            T.CommissionType AS [Task_SalesQuotation.CommissionType], 
            T.CommissionValue AS [Task_SalesQuotation.CommissionValue], 
            T.Commission1Value AS [Task_SalesQuotation.Commission1Value], 
            T.Commission2Value AS [Task_SalesQuotation.Commission2Value], 
            T.CommissionAmount AS [Task_SalesQuotation.CommissionAmount], 
            T.Commission1Amount AS [Task_SalesQuotation.Commission1Amount], 
            T.Commission2Amount AS [Task_SalesQuotation.Commission2Amount], 
            T.CommissionTakenBy AS [Task_SalesQuotation.CommissionTakenBy], 
            T.CommissionTakerAddress AS [Task_SalesQuotation.CommissionTakerAddress], 
            T.CommissionContactPerson AS [Task_SalesQuotation.CommissionContactPerson], 
            T.CommissionContactNo AS [Task_SalesQuotation.CommissionContactNo], 
            T.Approved AS [Task_SalesQuotation.Approved], 
            T.ApprovedBy AS [Task_SalesQuotation.ApprovedBy], 
            T.ApprovedDate AS [Task_SalesQuotation.ApprovedDate], 
            T.CancelReason AS [Task_SalesQuotation.CancelReason], 
            T.IsSalesDone AS [Task_SalesQuotation.IsSalesDone], 
            T.LocationId AS [Task_SalesQuotation.LocationId], 
            T.CompanyId AS [Task_SalesQuotation.CompanyId], 
            T.EntryBy AS [Task_SalesQuotation.EntryBy], 
            T.EntryDate AS [Task_SalesQuotation.EntryDate], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_SalesQuotation AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_SalesQuotation_Charge.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView419()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_SalesQuotation_Charge
        [BTS_OPSModel.Task_SalesQuotation_Charge](T1.[Task_SalesQuotation_Charge.QuotationChargeId], T1.[Task_SalesQuotation_Charge.QuotationId], T1.[Task_SalesQuotation_Charge.ChargeEventId], T1.[Task_SalesQuotation_Charge.ChargeAmount], T1.[Task_SalesQuotation_Charge.Charge1Amount], T1.[Task_SalesQuotation_Charge.Charge2Amount])
    FROM (
        SELECT 
            T.QuotationChargeId AS [Task_SalesQuotation_Charge.QuotationChargeId], 
            T.QuotationId AS [Task_SalesQuotation_Charge.QuotationId], 
            T.ChargeEventId AS [Task_SalesQuotation_Charge.ChargeEventId], 
            T.ChargeAmount AS [Task_SalesQuotation_Charge.ChargeAmount], 
            T.Charge1Amount AS [Task_SalesQuotation_Charge.Charge1Amount], 
            T.Charge2Amount AS [Task_SalesQuotation_Charge.Charge2Amount], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_SalesQuotation_Charge AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_SalesQuotation_DeliveryInfo.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView420()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_SalesQuotation_DeliveryInfo
        [BTS_OPSModel.Task_SalesQuotation_DeliveryInfo](T1.[Task_SalesQuotation_DeliveryInfo.DeliveryInfoId], T1.[Task_SalesQuotation_DeliveryInfo.QuotationId], T1.[Task_SalesQuotation_DeliveryInfo.DeliveryPlace], T1.[Task_SalesQuotation_DeliveryInfo.ContactPerson], T1.[Task_SalesQuotation_DeliveryInfo.ContactPersonNo], T1.[Task_SalesQuotation_DeliveryInfo.TransportId], T1.[Task_SalesQuotation_DeliveryInfo.TransportTypeId], T1.[Task_SalesQuotation_DeliveryInfo.VehicleNo], T1.[Task_SalesQuotation_DeliveryInfo.DriverName], T1.[Task_SalesQuotation_DeliveryInfo.DriverContactNo])
    FROM (
        SELECT 
            T.DeliveryInfoId AS [Task_SalesQuotation_DeliveryInfo.DeliveryInfoId], 
            T.QuotationId AS [Task_SalesQuotation_DeliveryInfo.QuotationId], 
            T.DeliveryPlace AS [Task_SalesQuotation_DeliveryInfo.DeliveryPlace], 
            T.ContactPerson AS [Task_SalesQuotation_DeliveryInfo.ContactPerson], 
            T.ContactPersonNo AS [Task_SalesQuotation_DeliveryInfo.ContactPersonNo], 
            T.TransportId AS [Task_SalesQuotation_DeliveryInfo.TransportId], 
            T.TransportTypeId AS [Task_SalesQuotation_DeliveryInfo.TransportTypeId], 
            T.VehicleNo AS [Task_SalesQuotation_DeliveryInfo.VehicleNo], 
            T.DriverName AS [Task_SalesQuotation_DeliveryInfo.DriverName], 
            T.DriverContactNo AS [Task_SalesQuotation_DeliveryInfo.DriverContactNo], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_SalesQuotation_DeliveryInfo AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_SalesQuotation_GovtDutyAdjustment.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView421()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_SalesQuotation_GovtDutyAdjustment
        [BTS_OPSModel.Task_SalesQuotation_GovtDutyAdjustment](T1.[Task_SalesQuotation_GovtDutyAdjustment.QuotationDutyAdjustmentId], T1.[Task_SalesQuotation_GovtDutyAdjustment.QuotationId], T1.[Task_SalesQuotation_GovtDutyAdjustment.GovtDutyAdjustmentId], T1.[Task_SalesQuotation_GovtDutyAdjustment.Amount], T1.[Task_SalesQuotation_GovtDutyAdjustment.Amount1], T1.[Task_SalesQuotation_GovtDutyAdjustment.Amount2])
    FROM (
        SELECT 
            T.QuotationDutyAdjustmentId AS [Task_SalesQuotation_GovtDutyAdjustment.QuotationDutyAdjustmentId], 
            T.QuotationId AS [Task_SalesQuotation_GovtDutyAdjustment.QuotationId], 
            T.GovtDutyAdjustmentId AS [Task_SalesQuotation_GovtDutyAdjustment.GovtDutyAdjustmentId], 
            T.Amount AS [Task_SalesQuotation_GovtDutyAdjustment.Amount], 
            T.Amount1 AS [Task_SalesQuotation_GovtDutyAdjustment.Amount1], 
            T.Amount2 AS [Task_SalesQuotation_GovtDutyAdjustment.Amount2], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_SalesQuotation_GovtDutyAdjustment AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_SalesQuotation_Header.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView422()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_SalesQuotation_Header
        [BTS_OPSModel.Task_SalesQuotation_Header](T1.[Task_SalesQuotation_Header.HeaderId], T1.[Task_SalesQuotation_Header.QuotationId], T1.[Task_SalesQuotation_Header.Salutation], T1.[Task_SalesQuotation_Header.AttentionToName], T1.[Task_SalesQuotation_Header.Designation], T1.[Task_SalesQuotation_Header.CompanyName], T1.[Task_SalesQuotation_Header.Address], T1.[Task_SalesQuotation_Header.HeaderSubject], T1.[Task_SalesQuotation_Header.HeaderDetail])
    FROM (
        SELECT 
            T.HeaderId AS [Task_SalesQuotation_Header.HeaderId], 
            T.QuotationId AS [Task_SalesQuotation_Header.QuotationId], 
            T.Salutation AS [Task_SalesQuotation_Header.Salutation], 
            T.AttentionToName AS [Task_SalesQuotation_Header.AttentionToName], 
            T.Designation AS [Task_SalesQuotation_Header.Designation], 
            T.CompanyName AS [Task_SalesQuotation_Header.CompanyName], 
            T.Address AS [Task_SalesQuotation_Header.Address], 
            T.HeaderSubject AS [Task_SalesQuotation_Header.HeaderSubject], 
            T.HeaderDetail AS [Task_SalesQuotation_Header.HeaderDetail], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_SalesQuotation_Header AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_SalesQuotation_SecurityAndBanking.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView423()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_SalesQuotation_SecurityAndBanking
        [BTS_OPSModel.Task_SalesQuotation_SecurityAndBanking](T1.[Task_SalesQuotation_SecurityAndBanking.SecurityAndBankingId], T1.[Task_SalesQuotation_SecurityAndBanking.QuotationId], T1.[Task_SalesQuotation_SecurityAndBanking.EMPercentValue], T1.[Task_SalesQuotation_SecurityAndBanking.EMAmount], T1.[Task_SalesQuotation_SecurityAndBanking.EMAmount1], T1.[Task_SalesQuotation_SecurityAndBanking.EMAmount2], T1.[Task_SalesQuotation_SecurityAndBanking.EMReferenceNo], T1.[Task_SalesQuotation_SecurityAndBanking.EMRefundDate], T1.[Task_SalesQuotation_SecurityAndBanking.SDPercentValue], T1.[Task_SalesQuotation_SecurityAndBanking.SDAmount], T1.[Task_SalesQuotation_SecurityAndBanking.SDAmount1], T1.[Task_SalesQuotation_SecurityAndBanking.SDAmount2], T1.[Task_SalesQuotation_SecurityAndBanking.SDReferenceNo], T1.[Task_SalesQuotation_SecurityAndBanking.SDRefundDate], T1.[Task_SalesQuotation_SecurityAndBanking.BGPercentValue], T1.[Task_SalesQuotation_SecurityAndBanking.BGAmount], T1.[Task_SalesQuotation_SecurityAndBanking.BGAmount1], T1.[Task_SalesQuotation_SecurityAndBanking.BGAmount2], T1.[Task_SalesQuotation_SecurityAndBanking.BGMarginAmount], T1.[Task_SalesQuotation_SecurityAndBanking.BGMarginAmount1], T1.[Task_SalesQuotation_SecurityAndBanking.BGMarginAmount2], T1.[Task_SalesQuotation_SecurityAndBanking.BankExpenseAmount], T1.[Task_SalesQuotation_SecurityAndBanking.BankExpenseAmount1], T1.[Task_SalesQuotation_SecurityAndBanking.BankExpenseAmount2], T1.[Task_SalesQuotation_SecurityAndBanking.BGNo], T1.[Task_SalesQuotation_SecurityAndBanking.BankId], T1.[Task_SalesQuotation_SecurityAndBanking.BGRefundDate])
    FROM (
        SELECT 
            T.SecurityAndBankingId AS [Task_SalesQuotation_SecurityAndBanking.SecurityAndBankingId], 
            T.QuotationId AS [Task_SalesQuotation_SecurityAndBanking.QuotationId], 
            T.EMPercentValue AS [Task_SalesQuotation_SecurityAndBanking.EMPercentValue], 
            T.EMAmount AS [Task_SalesQuotation_SecurityAndBanking.EMAmount], 
            T.EMAmount1 AS [Task_SalesQuotation_SecurityAndBanking.EMAmount1], 
            T.EMAmount2 AS [Task_SalesQuotation_SecurityAndBanking.EMAmount2], 
            T.EMReferenceNo AS [Task_SalesQuotation_SecurityAndBanking.EMReferenceNo], 
            T.EMRefundDate AS [Task_SalesQuotation_SecurityAndBanking.EMRefundDate], 
            T.SDPercentValue AS [Task_SalesQuotation_SecurityAndBanking.SDPercentValue], 
            T.SDAmount AS [Task_SalesQuotation_SecurityAndBanking.SDAmount], 
            T.SDAmount1 AS [Task_SalesQuotation_SecurityAndBanking.SDAmount1], 
            T.SDAmount2 AS [Task_SalesQuotation_SecurityAndBanking.SDAmount2], 
            T.SDReferenceNo AS [Task_SalesQuotation_SecurityAndBanking.SDReferenceNo], 
            T.SDRefundDate AS [Task_SalesQuotation_SecurityAndBanking.SDRefundDate], 
            T.BGPercentValue AS [Task_SalesQuotation_SecurityAndBanking.BGPercentValue], 
            T.BGAmount AS [Task_SalesQuotation_SecurityAndBanking.BGAmount], 
            T.BGAmount1 AS [Task_SalesQuotation_SecurityAndBanking.BGAmount1], 
            T.BGAmount2 AS [Task_SalesQuotation_SecurityAndBanking.BGAmount2], 
            T.BGMarginAmount AS [Task_SalesQuotation_SecurityAndBanking.BGMarginAmount], 
            T.BGMarginAmount1 AS [Task_SalesQuotation_SecurityAndBanking.BGMarginAmount1], 
            T.BGMarginAmount2 AS [Task_SalesQuotation_SecurityAndBanking.BGMarginAmount2], 
            T.BankExpenseAmount AS [Task_SalesQuotation_SecurityAndBanking.BankExpenseAmount], 
            T.BankExpenseAmount1 AS [Task_SalesQuotation_SecurityAndBanking.BankExpenseAmount1], 
            T.BankExpenseAmount2 AS [Task_SalesQuotation_SecurityAndBanking.BankExpenseAmount2], 
            T.BGNo AS [Task_SalesQuotation_SecurityAndBanking.BGNo], 
            T.BankId AS [Task_SalesQuotation_SecurityAndBanking.BankId], 
            T.BGRefundDate AS [Task_SalesQuotation_SecurityAndBanking.BGRefundDate], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_SalesQuotation_SecurityAndBanking AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_SalesQuotationDetail.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView424()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_SalesQuotationDetail
        [BTS_OPSModel.Task_SalesQuotationDetail](T1.[Task_SalesQuotationDetail.QuotaionDetailId], T1.[Task_SalesQuotationDetail.QuotationId], T1.[Task_SalesQuotationDetail.ProductId], T1.[Task_SalesQuotationDetail.ProductDimensionId], T1.[Task_SalesQuotationDetail.UnitTypeId], T1.[Task_SalesQuotationDetail.Quantity], T1.[Task_SalesQuotationDetail.OrderedQuantity], T1.[Task_SalesQuotationDetail.Price], T1.[Task_SalesQuotationDetail.Price1], T1.[Task_SalesQuotationDetail.Price2], T1.[Task_SalesQuotationDetail.DiscountType], T1.[Task_SalesQuotationDetail.DiscountValue], T1.[Task_SalesQuotationDetail.Discount1Value], T1.[Task_SalesQuotationDetail.Discount2Value], T1.[Task_SalesQuotationDetail.Discount], T1.[Task_SalesQuotationDetail.Discount1], T1.[Task_SalesQuotationDetail.Discount2], T1.[Task_SalesQuotationDetail.AdditionalDescription], T1.[Task_SalesQuotationDetail.IsSampleRequired], T1.[Task_SalesQuotationDetail.SampleProvidedBy], T1.[Task_SalesQuotationDetail.SampleProvidedDate], T1.[Task_SalesQuotationDetail.RequestedBy])
    FROM (
        SELECT 
            T.QuotaionDetailId AS [Task_SalesQuotationDetail.QuotaionDetailId], 
            T.QuotationId AS [Task_SalesQuotationDetail.QuotationId], 
            T.ProductId AS [Task_SalesQuotationDetail.ProductId], 
            T.ProductDimensionId AS [Task_SalesQuotationDetail.ProductDimensionId], 
            T.UnitTypeId AS [Task_SalesQuotationDetail.UnitTypeId], 
            T.Quantity AS [Task_SalesQuotationDetail.Quantity], 
            T.OrderedQuantity AS [Task_SalesQuotationDetail.OrderedQuantity], 
            T.Price AS [Task_SalesQuotationDetail.Price], 
            T.Price1 AS [Task_SalesQuotationDetail.Price1], 
            T.Price2 AS [Task_SalesQuotationDetail.Price2], 
            T.DiscountType AS [Task_SalesQuotationDetail.DiscountType], 
            T.DiscountValue AS [Task_SalesQuotationDetail.DiscountValue], 
            T.Discount1Value AS [Task_SalesQuotationDetail.Discount1Value], 
            T.Discount2Value AS [Task_SalesQuotationDetail.Discount2Value], 
            T.Discount AS [Task_SalesQuotationDetail.Discount], 
            T.Discount1 AS [Task_SalesQuotationDetail.Discount1], 
            T.Discount2 AS [Task_SalesQuotationDetail.Discount2], 
            T.AdditionalDescription AS [Task_SalesQuotationDetail.AdditionalDescription], 
            T.IsSampleRequired AS [Task_SalesQuotationDetail.IsSampleRequired], 
            T.SampleProvidedBy AS [Task_SalesQuotationDetail.SampleProvidedBy], 
            T.SampleProvidedDate AS [Task_SalesQuotationDetail.SampleProvidedDate], 
            T.RequestedBy AS [Task_SalesQuotationDetail.RequestedBy], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_SalesQuotationDetail AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_SalesQuotationDetail_GovtDuty.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView425()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_SalesQuotationDetail_GovtDuty
        [BTS_OPSModel.Task_SalesQuotationDetail_GovtDuty](T1.[Task_SalesQuotationDetail_GovtDuty.Id], T1.[Task_SalesQuotationDetail_GovtDuty.QuotaionDetailId], T1.[Task_SalesQuotationDetail_GovtDuty.GovtDutyId], T1.[Task_SalesQuotationDetail_GovtDuty.RateType], T1.[Task_SalesQuotationDetail_GovtDuty.RateValue], T1.[Task_SalesQuotationDetail_GovtDuty.RateValue1], T1.[Task_SalesQuotationDetail_GovtDuty.RateValue2], T1.[Task_SalesQuotationDetail_GovtDuty.RateAmount], T1.[Task_SalesQuotationDetail_GovtDuty.RateAmount1], T1.[Task_SalesQuotationDetail_GovtDuty.RateAmount2], T1.[Task_SalesQuotationDetail_GovtDuty.ExemptedType], T1.[Task_SalesQuotationDetail_GovtDuty.ExemptedValue], T1.[Task_SalesQuotationDetail_GovtDuty.ExemptedValue1], T1.[Task_SalesQuotationDetail_GovtDuty.ExemptedValue2], T1.[Task_SalesQuotationDetail_GovtDuty.ExemptedAmount], T1.[Task_SalesQuotationDetail_GovtDuty.ExemptedAmount1], T1.[Task_SalesQuotationDetail_GovtDuty.ExemptedAmount2])
    FROM (
        SELECT 
            T.Id AS [Task_SalesQuotationDetail_GovtDuty.Id], 
            T.QuotaionDetailId AS [Task_SalesQuotationDetail_GovtDuty.QuotaionDetailId], 
            T.GovtDutyId AS [Task_SalesQuotationDetail_GovtDuty.GovtDutyId], 
            T.RateType AS [Task_SalesQuotationDetail_GovtDuty.RateType], 
            T.RateValue AS [Task_SalesQuotationDetail_GovtDuty.RateValue], 
            T.RateValue1 AS [Task_SalesQuotationDetail_GovtDuty.RateValue1], 
            T.RateValue2 AS [Task_SalesQuotationDetail_GovtDuty.RateValue2], 
            T.RateAmount AS [Task_SalesQuotationDetail_GovtDuty.RateAmount], 
            T.RateAmount1 AS [Task_SalesQuotationDetail_GovtDuty.RateAmount1], 
            T.RateAmount2 AS [Task_SalesQuotationDetail_GovtDuty.RateAmount2], 
            T.ExemptedType AS [Task_SalesQuotationDetail_GovtDuty.ExemptedType], 
            T.ExemptedValue AS [Task_SalesQuotationDetail_GovtDuty.ExemptedValue], 
            T.ExemptedValue1 AS [Task_SalesQuotationDetail_GovtDuty.ExemptedValue1], 
            T.ExemptedValue2 AS [Task_SalesQuotationDetail_GovtDuty.ExemptedValue2], 
            T.ExemptedAmount AS [Task_SalesQuotationDetail_GovtDuty.ExemptedAmount], 
            T.ExemptedAmount1 AS [Task_SalesQuotationDetail_GovtDuty.ExemptedAmount1], 
            T.ExemptedAmount2 AS [Task_SalesQuotationDetail_GovtDuty.ExemptedAmount2], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_SalesQuotationDetail_GovtDuty AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_SalesQuotationNos.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView426()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_SalesQuotationNos
        [BTS_OPSModel.Task_SalesQuotationNos](T1.[Task_SalesQuotationNos.Id], T1.[Task_SalesQuotationNos.QuotationNo], T1.[Task_SalesQuotationNos.Year], T1.[Task_SalesQuotationNos.CompanyId])
    FROM (
        SELECT 
            T.Id AS [Task_SalesQuotationNos.Id], 
            T.QuotationNo AS [Task_SalesQuotationNos.QuotationNo], 
            T.Year AS [Task_SalesQuotationNos.Year], 
            T.CompanyId AS [Task_SalesQuotationNos.CompanyId], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_SalesQuotationNos AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_SalesReturn.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView427()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_SalesReturn
        [BTS_OPSModel.Task_SalesReturn](T1.[Task_SalesReturn.ReturnId], T1.[Task_SalesReturn.ReturnNo], T1.[Task_SalesReturn.ReturnDate], T1.[Task_SalesReturn.AgainstPreviousSales], T1.[Task_SalesReturn.CustomerId], T1.[Task_SalesReturn.SelectedCurrency], T1.[Task_SalesReturn.Currency1Rate], T1.[Task_SalesReturn.Currency2Rate], T1.[Task_SalesReturn.ReturnAmount], T1.[Task_SalesReturn.Return1Amount], T1.[Task_SalesReturn.Return2Amount], T1.[Task_SalesReturn.Approved], T1.[Task_SalesReturn.ApprovedBy], T1.[Task_SalesReturn.ApprovedDate], T1.[Task_SalesReturn.CancelReason], T1.[Task_SalesReturn.Remarks], T1.[Task_SalesReturn.Reason], T1.[Task_SalesReturn.VoucherId], T1.[Task_SalesReturn.LocationId], T1.[Task_SalesReturn.CompanyId], T1.[Task_SalesReturn.EntryBy], T1.[Task_SalesReturn.EntryDate])
    FROM (
        SELECT 
            T.ReturnId AS [Task_SalesReturn.ReturnId], 
            T.ReturnNo AS [Task_SalesReturn.ReturnNo], 
            T.ReturnDate AS [Task_SalesReturn.ReturnDate], 
            T.AgainstPreviousSales AS [Task_SalesReturn.AgainstPreviousSales], 
            T.CustomerId AS [Task_SalesReturn.CustomerId], 
            T.SelectedCurrency AS [Task_SalesReturn.SelectedCurrency], 
            T.Currency1Rate AS [Task_SalesReturn.Currency1Rate], 
            T.Currency2Rate AS [Task_SalesReturn.Currency2Rate], 
            T.ReturnAmount AS [Task_SalesReturn.ReturnAmount], 
            T.Return1Amount AS [Task_SalesReturn.Return1Amount], 
            T.Return2Amount AS [Task_SalesReturn.Return2Amount], 
            T.Approved AS [Task_SalesReturn.Approved], 
            T.ApprovedBy AS [Task_SalesReturn.ApprovedBy], 
            T.ApprovedDate AS [Task_SalesReturn.ApprovedDate], 
            T.CancelReason AS [Task_SalesReturn.CancelReason], 
            T.Remarks AS [Task_SalesReturn.Remarks], 
            T.Reason AS [Task_SalesReturn.Reason], 
            T.VoucherId AS [Task_SalesReturn.VoucherId], 
            T.LocationId AS [Task_SalesReturn.LocationId], 
            T.CompanyId AS [Task_SalesReturn.CompanyId], 
            T.EntryBy AS [Task_SalesReturn.EntryBy], 
            T.EntryDate AS [Task_SalesReturn.EntryDate], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_SalesReturn AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_SalesReturnDetail.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView428()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_SalesReturnDetail
        [BTS_OPSModel.Task_SalesReturnDetail](T1.[Task_SalesReturnDetail.ReturnDetailId], T1.[Task_SalesReturnDetail.ReturnId], T1.[Task_SalesReturnDetail.InvoiceId], T1.[Task_SalesReturnDetail.ProductId], T1.[Task_SalesReturnDetail.ProductDimensionId], T1.[Task_SalesReturnDetail.UnitTypeId], T1.[Task_SalesReturnDetail.Quantity], T1.[Task_SalesReturnDetail.Price], T1.[Task_SalesReturnDetail.Price1], T1.[Task_SalesReturnDetail.Price2], T1.[Task_SalesReturnDetail.SoldPrice], T1.[Task_SalesReturnDetail.SoldPrice1], T1.[Task_SalesReturnDetail.SoldPrice2], T1.[Task_SalesReturnDetail.DiscountAtSold], T1.[Task_SalesReturnDetail.Discount1AtSold], T1.[Task_SalesReturnDetail.Discount2AtSold], T1.[Task_SalesReturnDetail.InvoiceDiscountAtSold], T1.[Task_SalesReturnDetail.InvoiceDiscount1AtSold], T1.[Task_SalesReturnDetail.InvoiceDiscount2AtSold], T1.[Task_SalesReturnDetail.Cost], T1.[Task_SalesReturnDetail.Cost1], T1.[Task_SalesReturnDetail.Cost2], T1.[Task_SalesReturnDetail.LossOrGainAmount], T1.[Task_SalesReturnDetail.LossOrGainAmount1], T1.[Task_SalesReturnDetail.LossOrGainAmount2], T1.[Task_SalesReturnDetail.PrimaryUnitTypeId], T1.[Task_SalesReturnDetail.SecondaryUnitTypeId], T1.[Task_SalesReturnDetail.TertiaryUnitTypeId], T1.[Task_SalesReturnDetail.SecondaryConversionRatio], T1.[Task_SalesReturnDetail.TertiaryConversionRatio], T1.[Task_SalesReturnDetail.GoodsReceiveId], T1.[Task_SalesReturnDetail.ImportedStockInId], T1.[Task_SalesReturnDetail.SupplierId])
    FROM (
        SELECT 
            T.ReturnDetailId AS [Task_SalesReturnDetail.ReturnDetailId], 
            T.ReturnId AS [Task_SalesReturnDetail.ReturnId], 
            T.InvoiceId AS [Task_SalesReturnDetail.InvoiceId], 
            T.ProductId AS [Task_SalesReturnDetail.ProductId], 
            T.ProductDimensionId AS [Task_SalesReturnDetail.ProductDimensionId], 
            T.UnitTypeId AS [Task_SalesReturnDetail.UnitTypeId], 
            T.Quantity AS [Task_SalesReturnDetail.Quantity], 
            T.Price AS [Task_SalesReturnDetail.Price], 
            T.Price1 AS [Task_SalesReturnDetail.Price1], 
            T.Price2 AS [Task_SalesReturnDetail.Price2], 
            T.SoldPrice AS [Task_SalesReturnDetail.SoldPrice], 
            T.SoldPrice1 AS [Task_SalesReturnDetail.SoldPrice1], 
            T.SoldPrice2 AS [Task_SalesReturnDetail.SoldPrice2], 
            T.DiscountAtSold AS [Task_SalesReturnDetail.DiscountAtSold], 
            T.Discount1AtSold AS [Task_SalesReturnDetail.Discount1AtSold], 
            T.Discount2AtSold AS [Task_SalesReturnDetail.Discount2AtSold], 
            T.InvoiceDiscountAtSold AS [Task_SalesReturnDetail.InvoiceDiscountAtSold], 
            T.InvoiceDiscount1AtSold AS [Task_SalesReturnDetail.InvoiceDiscount1AtSold], 
            T.InvoiceDiscount2AtSold AS [Task_SalesReturnDetail.InvoiceDiscount2AtSold], 
            T.Cost AS [Task_SalesReturnDetail.Cost], 
            T.Cost1 AS [Task_SalesReturnDetail.Cost1], 
            T.Cost2 AS [Task_SalesReturnDetail.Cost2], 
            T.LossOrGainAmount AS [Task_SalesReturnDetail.LossOrGainAmount], 
            T.LossOrGainAmount1 AS [Task_SalesReturnDetail.LossOrGainAmount1], 
            T.LossOrGainAmount2 AS [Task_SalesReturnDetail.LossOrGainAmount2], 
            T.PrimaryUnitTypeId AS [Task_SalesReturnDetail.PrimaryUnitTypeId], 
            T.SecondaryUnitTypeId AS [Task_SalesReturnDetail.SecondaryUnitTypeId], 
            T.TertiaryUnitTypeId AS [Task_SalesReturnDetail.TertiaryUnitTypeId], 
            T.SecondaryConversionRatio AS [Task_SalesReturnDetail.SecondaryConversionRatio], 
            T.TertiaryConversionRatio AS [Task_SalesReturnDetail.TertiaryConversionRatio], 
            T.GoodsReceiveId AS [Task_SalesReturnDetail.GoodsReceiveId], 
            T.ImportedStockInId AS [Task_SalesReturnDetail.ImportedStockInId], 
            T.SupplierId AS [Task_SalesReturnDetail.SupplierId], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_SalesReturnDetail AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_SalesReturnDetailSerial.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView429()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_SalesReturnDetailSerial
        [BTS_OPSModel.Task_SalesReturnDetailSerial](T1.[Task_SalesReturnDetailSerial.ReturnDetailSerialId], T1.[Task_SalesReturnDetailSerial.ReturnDetailId], T1.[Task_SalesReturnDetailSerial.Serial], T1.[Task_SalesReturnDetailSerial.AdditionalSerial])
    FROM (
        SELECT 
            T.ReturnDetailSerialId AS [Task_SalesReturnDetailSerial.ReturnDetailSerialId], 
            T.ReturnDetailId AS [Task_SalesReturnDetailSerial.ReturnDetailId], 
            T.Serial AS [Task_SalesReturnDetailSerial.Serial], 
            T.AdditionalSerial AS [Task_SalesReturnDetailSerial.AdditionalSerial], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_SalesReturnDetailSerial AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_SalesReturnNos.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView430()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_SalesReturnNos
        [BTS_OPSModel.Task_SalesReturnNos](T1.[Task_SalesReturnNos.Id], T1.[Task_SalesReturnNos.ReturnNo], T1.[Task_SalesReturnNos.Year], T1.[Task_SalesReturnNos.CompanyId])
    FROM (
        SELECT 
            T.Id AS [Task_SalesReturnNos.Id], 
            T.ReturnNo AS [Task_SalesReturnNos.ReturnNo], 
            T.Year AS [Task_SalesReturnNos.Year], 
            T.CompanyId AS [Task_SalesReturnNos.CompanyId], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_SalesReturnNos AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_StockAdjustment.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView431()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_StockAdjustment
        [BTS_OPSModel.Task_StockAdjustment](T1.[Task_StockAdjustment.AdjustmentId], T1.[Task_StockAdjustment.AdjustmentNo], T1.[Task_StockAdjustment.AdjustmentDate], T1.[Task_StockAdjustment.RequestedBy], T1.[Task_StockAdjustment.SelectedCurrency], T1.[Task_StockAdjustment.Currency1Rate], T1.[Task_StockAdjustment.Currency2Rate], T1.[Task_StockAdjustment.Approved], T1.[Task_StockAdjustment.ApprovedBy], T1.[Task_StockAdjustment.ApprovedDate], T1.[Task_StockAdjustment.CancelReason], T1.[Task_StockAdjustment.Remarks], T1.[Task_StockAdjustment.LocationId], T1.[Task_StockAdjustment.CompanyId], T1.[Task_StockAdjustment.EntryBy], T1.[Task_StockAdjustment.EntryDate])
    FROM (
        SELECT 
            T.AdjustmentId AS [Task_StockAdjustment.AdjustmentId], 
            T.AdjustmentNo AS [Task_StockAdjustment.AdjustmentNo], 
            T.AdjustmentDate AS [Task_StockAdjustment.AdjustmentDate], 
            T.RequestedBy AS [Task_StockAdjustment.RequestedBy], 
            T.SelectedCurrency AS [Task_StockAdjustment.SelectedCurrency], 
            T.Currency1Rate AS [Task_StockAdjustment.Currency1Rate], 
            T.Currency2Rate AS [Task_StockAdjustment.Currency2Rate], 
            T.Approved AS [Task_StockAdjustment.Approved], 
            T.ApprovedBy AS [Task_StockAdjustment.ApprovedBy], 
            T.ApprovedDate AS [Task_StockAdjustment.ApprovedDate], 
            T.CancelReason AS [Task_StockAdjustment.CancelReason], 
            T.Remarks AS [Task_StockAdjustment.Remarks], 
            T.LocationId AS [Task_StockAdjustment.LocationId], 
            T.CompanyId AS [Task_StockAdjustment.CompanyId], 
            T.EntryBy AS [Task_StockAdjustment.EntryBy], 
            T.EntryDate AS [Task_StockAdjustment.EntryDate], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_StockAdjustment AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_StockAdjustmentDetail.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView432()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_StockAdjustmentDetail
        [BTS_OPSModel.Task_StockAdjustmentDetail](T1.[Task_StockAdjustmentDetail.AdjustmentDetailId], T1.[Task_StockAdjustmentDetail.AdjustmentId], T1.[Task_StockAdjustmentDetail.ProductId], T1.[Task_StockAdjustmentDetail.ProductDimensionId], T1.[Task_StockAdjustmentDetail.UnitTypeId], T1.[Task_StockAdjustmentDetail.Quantity], T1.[Task_StockAdjustmentDetail.IncreaseDecrease], T1.[Task_StockAdjustmentDetail.Cost], T1.[Task_StockAdjustmentDetail.Cost1], T1.[Task_StockAdjustmentDetail.Cost2], T1.[Task_StockAdjustmentDetail.WareHouseId], T1.[Task_StockAdjustmentDetail.PrimaryUnitTypeId], T1.[Task_StockAdjustmentDetail.SecondaryUnitTypeId], T1.[Task_StockAdjustmentDetail.TertiaryUnitTypeId], T1.[Task_StockAdjustmentDetail.SecondaryConversionRatio], T1.[Task_StockAdjustmentDetail.TertiaryConversionRatio])
    FROM (
        SELECT 
            T.AdjustmentDetailId AS [Task_StockAdjustmentDetail.AdjustmentDetailId], 
            T.AdjustmentId AS [Task_StockAdjustmentDetail.AdjustmentId], 
            T.ProductId AS [Task_StockAdjustmentDetail.ProductId], 
            T.ProductDimensionId AS [Task_StockAdjustmentDetail.ProductDimensionId], 
            T.UnitTypeId AS [Task_StockAdjustmentDetail.UnitTypeId], 
            T.Quantity AS [Task_StockAdjustmentDetail.Quantity], 
            T.IncreaseDecrease AS [Task_StockAdjustmentDetail.IncreaseDecrease], 
            T.Cost AS [Task_StockAdjustmentDetail.Cost], 
            T.Cost1 AS [Task_StockAdjustmentDetail.Cost1], 
            T.Cost2 AS [Task_StockAdjustmentDetail.Cost2], 
            T.WareHouseId AS [Task_StockAdjustmentDetail.WareHouseId], 
            T.PrimaryUnitTypeId AS [Task_StockAdjustmentDetail.PrimaryUnitTypeId], 
            T.SecondaryUnitTypeId AS [Task_StockAdjustmentDetail.SecondaryUnitTypeId], 
            T.TertiaryUnitTypeId AS [Task_StockAdjustmentDetail.TertiaryUnitTypeId], 
            T.SecondaryConversionRatio AS [Task_StockAdjustmentDetail.SecondaryConversionRatio], 
            T.TertiaryConversionRatio AS [Task_StockAdjustmentDetail.TertiaryConversionRatio], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_StockAdjustmentDetail AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_StockAdjustmentDetailSerial.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView433()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_StockAdjustmentDetailSerial
        [BTS_OPSModel.Task_StockAdjustmentDetailSerial](T1.[Task_StockAdjustmentDetailSerial.AdjustmentDetailSerialId], T1.[Task_StockAdjustmentDetailSerial.AdjustmentDetailId], T1.[Task_StockAdjustmentDetailSerial.Serial], T1.[Task_StockAdjustmentDetailSerial.AdditionalSerial])
    FROM (
        SELECT 
            T.AdjustmentDetailSerialId AS [Task_StockAdjustmentDetailSerial.AdjustmentDetailSerialId], 
            T.AdjustmentDetailId AS [Task_StockAdjustmentDetailSerial.AdjustmentDetailId], 
            T.Serial AS [Task_StockAdjustmentDetailSerial.Serial], 
            T.AdditionalSerial AS [Task_StockAdjustmentDetailSerial.AdditionalSerial], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_StockAdjustmentDetailSerial AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_StockAdjustmentNos.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView434()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_StockAdjustmentNos
        [BTS_OPSModel.Task_StockAdjustmentNos](T1.[Task_StockAdjustmentNos.Id], T1.[Task_StockAdjustmentNos.AdjustmentNo], T1.[Task_StockAdjustmentNos.Year], T1.[Task_StockAdjustmentNos.CompanyId])
    FROM (
        SELECT 
            T.Id AS [Task_StockAdjustmentNos.Id], 
            T.AdjustmentNo AS [Task_StockAdjustmentNos.AdjustmentNo], 
            T.Year AS [Task_StockAdjustmentNos.Year], 
            T.CompanyId AS [Task_StockAdjustmentNos.CompanyId], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_StockAdjustmentNos AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_TransferChallan.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView435()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_TransferChallan
        [BTS_OPSModel.Task_TransferChallan](T1.[Task_TransferChallan.ChallanId], T1.[Task_TransferChallan.ChallanNo], T1.[Task_TransferChallan.ChallanDate], T1.[Task_TransferChallan.TransferOperationType], T1.[Task_TransferChallan.TransferFromStockType], T1.[Task_TransferChallan.TransferToId], T1.[Task_TransferChallan.TransferToStockType], T1.[Task_TransferChallan.IsSettledByReceive], T1.[Task_TransferChallan.Approved], T1.[Task_TransferChallan.ApprovedBy], T1.[Task_TransferChallan.ApprovedDate], T1.[Task_TransferChallan.CancelReason], T1.[Task_TransferChallan.DeliveryPlace], T1.[Task_TransferChallan.ContactPerson], T1.[Task_TransferChallan.ContactPersonNo], T1.[Task_TransferChallan.TransportId], T1.[Task_TransferChallan.TransportTypeId], T1.[Task_TransferChallan.VehicleNo], T1.[Task_TransferChallan.DriverName], T1.[Task_TransferChallan.DriverContactNo], T1.[Task_TransferChallan.LocationId], T1.[Task_TransferChallan.CompanyId], T1.[Task_TransferChallan.EntryBy], T1.[Task_TransferChallan.EntryDate])
    FROM (
        SELECT 
            T.ChallanId AS [Task_TransferChallan.ChallanId], 
            T.ChallanNo AS [Task_TransferChallan.ChallanNo], 
            T.ChallanDate AS [Task_TransferChallan.ChallanDate], 
            T.TransferOperationType AS [Task_TransferChallan.TransferOperationType], 
            T.TransferFromStockType AS [Task_TransferChallan.TransferFromStockType], 
            T.TransferToId AS [Task_TransferChallan.TransferToId], 
            T.TransferToStockType AS [Task_TransferChallan.TransferToStockType], 
            T.IsSettledByReceive AS [Task_TransferChallan.IsSettledByReceive], 
            T.Approved AS [Task_TransferChallan.Approved], 
            T.ApprovedBy AS [Task_TransferChallan.ApprovedBy], 
            T.ApprovedDate AS [Task_TransferChallan.ApprovedDate], 
            T.CancelReason AS [Task_TransferChallan.CancelReason], 
            T.DeliveryPlace AS [Task_TransferChallan.DeliveryPlace], 
            T.ContactPerson AS [Task_TransferChallan.ContactPerson], 
            T.ContactPersonNo AS [Task_TransferChallan.ContactPersonNo], 
            T.TransportId AS [Task_TransferChallan.TransportId], 
            T.TransportTypeId AS [Task_TransferChallan.TransportTypeId], 
            T.VehicleNo AS [Task_TransferChallan.VehicleNo], 
            T.DriverName AS [Task_TransferChallan.DriverName], 
            T.DriverContactNo AS [Task_TransferChallan.DriverContactNo], 
            T.LocationId AS [Task_TransferChallan.LocationId], 
            T.CompanyId AS [Task_TransferChallan.CompanyId], 
            T.EntryBy AS [Task_TransferChallan.EntryBy], 
            T.EntryDate AS [Task_TransferChallan.EntryDate], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_TransferChallan AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_TransferChallanDetail.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView436()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_TransferChallanDetail
        [BTS_OPSModel.Task_TransferChallanDetail](T1.[Task_TransferChallanDetail.ChallanDetailId], T1.[Task_TransferChallanDetail.ChallanId], T1.[Task_TransferChallanDetail.OrderId], T1.[Task_TransferChallanDetail.ProductId], T1.[Task_TransferChallanDetail.ProductDimensionId], T1.[Task_TransferChallanDetail.UnitTypeId], T1.[Task_TransferChallanDetail.Quantity], T1.[Task_TransferChallanDetail.ReceivedQuantity], T1.[Task_TransferChallanDetail.Cost], T1.[Task_TransferChallanDetail.Cost1], T1.[Task_TransferChallanDetail.Cost2], T1.[Task_TransferChallanDetail.PrimaryUnitTypeId], T1.[Task_TransferChallanDetail.SecondaryUnitTypeId], T1.[Task_TransferChallanDetail.TertiaryUnitTypeId], T1.[Task_TransferChallanDetail.SecondaryConversionRatio], T1.[Task_TransferChallanDetail.TertiaryConversionRatio], T1.[Task_TransferChallanDetail.WareHouseId], T1.[Task_TransferChallanDetail.ToWareHouseId], T1.[Task_TransferChallanDetail.GoodsReceiveId], T1.[Task_TransferChallanDetail.ImportedStockInId], T1.[Task_TransferChallanDetail.SupplierId], T1.[Task_TransferChallanDetail.CurrentBadRMAStockId], T1.[Task_TransferChallanDetail.PrimaryQuantity])
    FROM (
        SELECT 
            T.ChallanDetailId AS [Task_TransferChallanDetail.ChallanDetailId], 
            T.ChallanId AS [Task_TransferChallanDetail.ChallanId], 
            T.OrderId AS [Task_TransferChallanDetail.OrderId], 
            T.ProductId AS [Task_TransferChallanDetail.ProductId], 
            T.ProductDimensionId AS [Task_TransferChallanDetail.ProductDimensionId], 
            T.UnitTypeId AS [Task_TransferChallanDetail.UnitTypeId], 
            T.Quantity AS [Task_TransferChallanDetail.Quantity], 
            T.ReceivedQuantity AS [Task_TransferChallanDetail.ReceivedQuantity], 
            T.Cost AS [Task_TransferChallanDetail.Cost], 
            T.Cost1 AS [Task_TransferChallanDetail.Cost1], 
            T.Cost2 AS [Task_TransferChallanDetail.Cost2], 
            T.PrimaryUnitTypeId AS [Task_TransferChallanDetail.PrimaryUnitTypeId], 
            T.SecondaryUnitTypeId AS [Task_TransferChallanDetail.SecondaryUnitTypeId], 
            T.TertiaryUnitTypeId AS [Task_TransferChallanDetail.TertiaryUnitTypeId], 
            T.SecondaryConversionRatio AS [Task_TransferChallanDetail.SecondaryConversionRatio], 
            T.TertiaryConversionRatio AS [Task_TransferChallanDetail.TertiaryConversionRatio], 
            T.WareHouseId AS [Task_TransferChallanDetail.WareHouseId], 
            T.ToWareHouseId AS [Task_TransferChallanDetail.ToWareHouseId], 
            T.GoodsReceiveId AS [Task_TransferChallanDetail.GoodsReceiveId], 
            T.ImportedStockInId AS [Task_TransferChallanDetail.ImportedStockInId], 
            T.SupplierId AS [Task_TransferChallanDetail.SupplierId], 
            T.CurrentBadRMAStockId AS [Task_TransferChallanDetail.CurrentBadRMAStockId], 
            T.PrimaryQuantity AS [Task_TransferChallanDetail.PrimaryQuantity], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_TransferChallanDetail AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_TransferChallanDetailSerial.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView437()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_TransferChallanDetailSerial
        [BTS_OPSModel.Task_TransferChallanDetailSerial](T1.[Task_TransferChallanDetailSerial.ChallanDetailSerialId], T1.[Task_TransferChallanDetailSerial.ChallanDetailId], T1.[Task_TransferChallanDetailSerial.Serial], T1.[Task_TransferChallanDetailSerial.AdditionalSerial])
    FROM (
        SELECT 
            T.ChallanDetailSerialId AS [Task_TransferChallanDetailSerial.ChallanDetailSerialId], 
            T.ChallanDetailId AS [Task_TransferChallanDetailSerial.ChallanDetailId], 
            T.Serial AS [Task_TransferChallanDetailSerial.Serial], 
            T.AdditionalSerial AS [Task_TransferChallanDetailSerial.AdditionalSerial], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_TransferChallanDetailSerial AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_TransferChallanNos.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView438()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_TransferChallanNos
        [BTS_OPSModel.Task_TransferChallanNos](T1.[Task_TransferChallanNos.Id], T1.[Task_TransferChallanNos.ChallanNo], T1.[Task_TransferChallanNos.Year], T1.[Task_TransferChallanNos.CompanyId])
    FROM (
        SELECT 
            T.Id AS [Task_TransferChallanNos.Id], 
            T.ChallanNo AS [Task_TransferChallanNos.ChallanNo], 
            T.Year AS [Task_TransferChallanNos.Year], 
            T.CompanyId AS [Task_TransferChallanNos.CompanyId], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_TransferChallanNos AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_TransferOrder.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView439()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_TransferOrder
        [BTS_OPSModel.Task_TransferOrder](T1.[Task_TransferOrder.OrderId], T1.[Task_TransferOrder.OrderNo], T1.[Task_TransferOrder.OrderDate], T1.[Task_TransferOrder.OrderBy], T1.[Task_TransferOrder.TransferToId], T1.[Task_TransferOrder.TransferToStockType], T1.[Task_TransferOrder.TransferFromId], T1.[Task_TransferOrder.TransferFromStockType], T1.[Task_TransferOrder.Remarks], T1.[Task_TransferOrder.IsSettledByChallan], T1.[Task_TransferOrder.Approved], T1.[Task_TransferOrder.ApprovedBy], T1.[Task_TransferOrder.ApprovedDate], T1.[Task_TransferOrder.CancelReason], T1.[Task_TransferOrder.LocationId], T1.[Task_TransferOrder.CompanyId], T1.[Task_TransferOrder.EntryBy], T1.[Task_TransferOrder.EntryDate])
    FROM (
        SELECT 
            T.OrderId AS [Task_TransferOrder.OrderId], 
            T.OrderNo AS [Task_TransferOrder.OrderNo], 
            T.OrderDate AS [Task_TransferOrder.OrderDate], 
            T.OrderBy AS [Task_TransferOrder.OrderBy], 
            T.TransferToId AS [Task_TransferOrder.TransferToId], 
            T.TransferToStockType AS [Task_TransferOrder.TransferToStockType], 
            T.TransferFromId AS [Task_TransferOrder.TransferFromId], 
            T.TransferFromStockType AS [Task_TransferOrder.TransferFromStockType], 
            T.Remarks AS [Task_TransferOrder.Remarks], 
            T.IsSettledByChallan AS [Task_TransferOrder.IsSettledByChallan], 
            T.Approved AS [Task_TransferOrder.Approved], 
            T.ApprovedBy AS [Task_TransferOrder.ApprovedBy], 
            T.ApprovedDate AS [Task_TransferOrder.ApprovedDate], 
            T.CancelReason AS [Task_TransferOrder.CancelReason], 
            T.LocationId AS [Task_TransferOrder.LocationId], 
            T.CompanyId AS [Task_TransferOrder.CompanyId], 
            T.EntryBy AS [Task_TransferOrder.EntryBy], 
            T.EntryDate AS [Task_TransferOrder.EntryDate], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_TransferOrder AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_TransferOrderDetail.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView440()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_TransferOrderDetail
        [BTS_OPSModel.Task_TransferOrderDetail](T1.[Task_TransferOrderDetail.OrderDetailId], T1.[Task_TransferOrderDetail.OrderId], T1.[Task_TransferOrderDetail.RequisitionId], T1.[Task_TransferOrderDetail.ProductId], T1.[Task_TransferOrderDetail.ProductDimensionId], T1.[Task_TransferOrderDetail.UnitTypeId], T1.[Task_TransferOrderDetail.Quantity], T1.[Task_TransferOrderDetail.ChallanQuantity])
    FROM (
        SELECT 
            T.OrderDetailId AS [Task_TransferOrderDetail.OrderDetailId], 
            T.OrderId AS [Task_TransferOrderDetail.OrderId], 
            T.RequisitionId AS [Task_TransferOrderDetail.RequisitionId], 
            T.ProductId AS [Task_TransferOrderDetail.ProductId], 
            T.ProductDimensionId AS [Task_TransferOrderDetail.ProductDimensionId], 
            T.UnitTypeId AS [Task_TransferOrderDetail.UnitTypeId], 
            T.Quantity AS [Task_TransferOrderDetail.Quantity], 
            T.ChallanQuantity AS [Task_TransferOrderDetail.ChallanQuantity], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_TransferOrderDetail AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_TransferOrderNos.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView441()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_TransferOrderNos
        [BTS_OPSModel.Task_TransferOrderNos](T1.[Task_TransferOrderNos.Id], T1.[Task_TransferOrderNos.OrderNo], T1.[Task_TransferOrderNos.Year], T1.[Task_TransferOrderNos.CompanyId])
    FROM (
        SELECT 
            T.Id AS [Task_TransferOrderNos.Id], 
            T.OrderNo AS [Task_TransferOrderNos.OrderNo], 
            T.Year AS [Task_TransferOrderNos.Year], 
            T.CompanyId AS [Task_TransferOrderNos.CompanyId], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_TransferOrderNos AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_TransferReceive.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView442()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_TransferReceive
        [BTS_OPSModel.Task_TransferReceive](T1.[Task_TransferReceive.ReceiveId], T1.[Task_TransferReceive.ReceiveNo], T1.[Task_TransferReceive.ReceiveDate], T1.[Task_TransferReceive.TransferChallanId], T1.[Task_TransferReceive.ReceivedBy], T1.[Task_TransferReceive.Remarks], T1.[Task_TransferReceive.Approved], T1.[Task_TransferReceive.ApprovedBy], T1.[Task_TransferReceive.ApprovedDate], T1.[Task_TransferReceive.CancelReason], T1.[Task_TransferReceive.LocationId], T1.[Task_TransferReceive.CompanyId], T1.[Task_TransferReceive.EntryBy], T1.[Task_TransferReceive.EntryDate])
    FROM (
        SELECT 
            T.ReceiveId AS [Task_TransferReceive.ReceiveId], 
            T.ReceiveNo AS [Task_TransferReceive.ReceiveNo], 
            T.ReceiveDate AS [Task_TransferReceive.ReceiveDate], 
            T.TransferChallanId AS [Task_TransferReceive.TransferChallanId], 
            T.ReceivedBy AS [Task_TransferReceive.ReceivedBy], 
            T.Remarks AS [Task_TransferReceive.Remarks], 
            T.Approved AS [Task_TransferReceive.Approved], 
            T.ApprovedBy AS [Task_TransferReceive.ApprovedBy], 
            T.ApprovedDate AS [Task_TransferReceive.ApprovedDate], 
            T.CancelReason AS [Task_TransferReceive.CancelReason], 
            T.LocationId AS [Task_TransferReceive.LocationId], 
            T.CompanyId AS [Task_TransferReceive.CompanyId], 
            T.EntryBy AS [Task_TransferReceive.EntryBy], 
            T.EntryDate AS [Task_TransferReceive.EntryDate], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_TransferReceive AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_TransferReceiveDetail.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView443()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_TransferReceiveDetail
        [BTS_OPSModel.Task_TransferReceiveDetail](T1.[Task_TransferReceiveDetail.ReceiveDetailId], T1.[Task_TransferReceiveDetail.ReceiveId], T1.[Task_TransferReceiveDetail.ProductId], T1.[Task_TransferReceiveDetail.ProductDimensionId], T1.[Task_TransferReceiveDetail.UnitTypeId], T1.[Task_TransferReceiveDetail.Quantity], T1.[Task_TransferReceiveDetail.Cost], T1.[Task_TransferReceiveDetail.Cost1], T1.[Task_TransferReceiveDetail.Cost2], T1.[Task_TransferReceiveDetail.PrimaryUnitTypeId], T1.[Task_TransferReceiveDetail.SecondaryUnitTypeId], T1.[Task_TransferReceiveDetail.TertiaryUnitTypeId], T1.[Task_TransferReceiveDetail.SecondaryConversionRatio], T1.[Task_TransferReceiveDetail.TertiaryConversionRatio], T1.[Task_TransferReceiveDetail.ReceivedWareHouseId], T1.[Task_TransferReceiveDetail.TranFromWareHouseId], T1.[Task_TransferReceiveDetail.GoodsReceiveId], T1.[Task_TransferReceiveDetail.ImportedStockInId], T1.[Task_TransferReceiveDetail.SupplierId])
    FROM (
        SELECT 
            T.ReceiveDetailId AS [Task_TransferReceiveDetail.ReceiveDetailId], 
            T.ReceiveId AS [Task_TransferReceiveDetail.ReceiveId], 
            T.ProductId AS [Task_TransferReceiveDetail.ProductId], 
            T.ProductDimensionId AS [Task_TransferReceiveDetail.ProductDimensionId], 
            T.UnitTypeId AS [Task_TransferReceiveDetail.UnitTypeId], 
            T.Quantity AS [Task_TransferReceiveDetail.Quantity], 
            T.Cost AS [Task_TransferReceiveDetail.Cost], 
            T.Cost1 AS [Task_TransferReceiveDetail.Cost1], 
            T.Cost2 AS [Task_TransferReceiveDetail.Cost2], 
            T.PrimaryUnitTypeId AS [Task_TransferReceiveDetail.PrimaryUnitTypeId], 
            T.SecondaryUnitTypeId AS [Task_TransferReceiveDetail.SecondaryUnitTypeId], 
            T.TertiaryUnitTypeId AS [Task_TransferReceiveDetail.TertiaryUnitTypeId], 
            T.SecondaryConversionRatio AS [Task_TransferReceiveDetail.SecondaryConversionRatio], 
            T.TertiaryConversionRatio AS [Task_TransferReceiveDetail.TertiaryConversionRatio], 
            T.ReceivedWareHouseId AS [Task_TransferReceiveDetail.ReceivedWareHouseId], 
            T.TranFromWareHouseId AS [Task_TransferReceiveDetail.TranFromWareHouseId], 
            T.GoodsReceiveId AS [Task_TransferReceiveDetail.GoodsReceiveId], 
            T.ImportedStockInId AS [Task_TransferReceiveDetail.ImportedStockInId], 
            T.SupplierId AS [Task_TransferReceiveDetail.SupplierId], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_TransferReceiveDetail AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_TransferReceiveDetailSerial.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView444()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_TransferReceiveDetailSerial
        [BTS_OPSModel.Task_TransferReceiveDetailSerial](T1.[Task_TransferReceiveDetailSerial.ReceiveDetailSerialId], T1.[Task_TransferReceiveDetailSerial.ReceiveDetailId], T1.[Task_TransferReceiveDetailSerial.Serial], T1.[Task_TransferReceiveDetailSerial.AdditionalSerial])
    FROM (
        SELECT 
            T.ReceiveDetailSerialId AS [Task_TransferReceiveDetailSerial.ReceiveDetailSerialId], 
            T.ReceiveDetailId AS [Task_TransferReceiveDetailSerial.ReceiveDetailId], 
            T.Serial AS [Task_TransferReceiveDetailSerial.Serial], 
            T.AdditionalSerial AS [Task_TransferReceiveDetailSerial.AdditionalSerial], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_TransferReceiveDetailSerial AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_TransferReceiveNos.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView445()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_TransferReceiveNos
        [BTS_OPSModel.Task_TransferReceiveNos](T1.[Task_TransferReceiveNos.Id], T1.[Task_TransferReceiveNos.ReceiveNo], T1.[Task_TransferReceiveNos.Year], T1.[Task_TransferReceiveNos.CompanyId])
    FROM (
        SELECT 
            T.Id AS [Task_TransferReceiveNos.Id], 
            T.ReceiveNo AS [Task_TransferReceiveNos.ReceiveNo], 
            T.Year AS [Task_TransferReceiveNos.Year], 
            T.CompanyId AS [Task_TransferReceiveNos.CompanyId], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_TransferReceiveNos AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_TransferRequisitionFinalize.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView446()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_TransferRequisitionFinalize
        [BTS_OPSModel.Task_TransferRequisitionFinalize](T1.[Task_TransferRequisitionFinalize.RequisitionId], T1.[Task_TransferRequisitionFinalize.RequisitionNo], T1.[Task_TransferRequisitionFinalize.RequisitionDate], T1.[Task_TransferRequisitionFinalize.RequisitionBy], T1.[Task_TransferRequisitionFinalize.ReqToLocationId], T1.[Task_TransferRequisitionFinalize.StockType], T1.[Task_TransferRequisitionFinalize.Remarks], T1.[Task_TransferRequisitionFinalize.IsSettled], T1.[Task_TransferRequisitionFinalize.Approved], T1.[Task_TransferRequisitionFinalize.ApprovedBy], T1.[Task_TransferRequisitionFinalize.ApprovedDate], T1.[Task_TransferRequisitionFinalize.CancelReason], T1.[Task_TransferRequisitionFinalize.LocationId], T1.[Task_TransferRequisitionFinalize.CompanyId], T1.[Task_TransferRequisitionFinalize.EntryBy], T1.[Task_TransferRequisitionFinalize.EntryDate])
    FROM (
        SELECT 
            T.RequisitionId AS [Task_TransferRequisitionFinalize.RequisitionId], 
            T.RequisitionNo AS [Task_TransferRequisitionFinalize.RequisitionNo], 
            T.RequisitionDate AS [Task_TransferRequisitionFinalize.RequisitionDate], 
            T.RequisitionBy AS [Task_TransferRequisitionFinalize.RequisitionBy], 
            T.ReqToLocationId AS [Task_TransferRequisitionFinalize.ReqToLocationId], 
            T.StockType AS [Task_TransferRequisitionFinalize.StockType], 
            T.Remarks AS [Task_TransferRequisitionFinalize.Remarks], 
            T.IsSettled AS [Task_TransferRequisitionFinalize.IsSettled], 
            T.Approved AS [Task_TransferRequisitionFinalize.Approved], 
            T.ApprovedBy AS [Task_TransferRequisitionFinalize.ApprovedBy], 
            T.ApprovedDate AS [Task_TransferRequisitionFinalize.ApprovedDate], 
            T.CancelReason AS [Task_TransferRequisitionFinalize.CancelReason], 
            T.LocationId AS [Task_TransferRequisitionFinalize.LocationId], 
            T.CompanyId AS [Task_TransferRequisitionFinalize.CompanyId], 
            T.EntryBy AS [Task_TransferRequisitionFinalize.EntryBy], 
            T.EntryDate AS [Task_TransferRequisitionFinalize.EntryDate], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_TransferRequisitionFinalize AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_TransferRequisitionFinalizeDetail.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView447()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_TransferRequisitionFinalizeDetail
        [BTS_OPSModel.Task_TransferRequisitionFinalizeDetail](T1.[Task_TransferRequisitionFinalizeDetail.RequisitionDetailId], T1.[Task_TransferRequisitionFinalizeDetail.RequisitionId], T1.[Task_TransferRequisitionFinalizeDetail.ItemRequisitionId], T1.[Task_TransferRequisitionFinalizeDetail.ProductId], T1.[Task_TransferRequisitionFinalizeDetail.ProductDimensionId], T1.[Task_TransferRequisitionFinalizeDetail.UnitTypeId], T1.[Task_TransferRequisitionFinalizeDetail.Quantity], T1.[Task_TransferRequisitionFinalizeDetail.OrderedQuantity])
    FROM (
        SELECT 
            T.RequisitionDetailId AS [Task_TransferRequisitionFinalizeDetail.RequisitionDetailId], 
            T.RequisitionId AS [Task_TransferRequisitionFinalizeDetail.RequisitionId], 
            T.ItemRequisitionId AS [Task_TransferRequisitionFinalizeDetail.ItemRequisitionId], 
            T.ProductId AS [Task_TransferRequisitionFinalizeDetail.ProductId], 
            T.ProductDimensionId AS [Task_TransferRequisitionFinalizeDetail.ProductDimensionId], 
            T.UnitTypeId AS [Task_TransferRequisitionFinalizeDetail.UnitTypeId], 
            T.Quantity AS [Task_TransferRequisitionFinalizeDetail.Quantity], 
            T.OrderedQuantity AS [Task_TransferRequisitionFinalizeDetail.OrderedQuantity], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_TransferRequisitionFinalizeDetail AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_TransferRequisitionFinalizeNos.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView448()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_TransferRequisitionFinalizeNos
        [BTS_OPSModel.Task_TransferRequisitionFinalizeNos](T1.[Task_TransferRequisitionFinalizeNos.Id], T1.[Task_TransferRequisitionFinalizeNos.RequisitionNo], T1.[Task_TransferRequisitionFinalizeNos.Year], T1.[Task_TransferRequisitionFinalizeNos.CompanyId])
    FROM (
        SELECT 
            T.Id AS [Task_TransferRequisitionFinalizeNos.Id], 
            T.RequisitionNo AS [Task_TransferRequisitionFinalizeNos.RequisitionNo], 
            T.Year AS [Task_TransferRequisitionFinalizeNos.Year], 
            T.CompanyId AS [Task_TransferRequisitionFinalizeNos.CompanyId], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_TransferRequisitionFinalizeNos AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_Voucher.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView449()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_Voucher
        [BTS_OPSModel.Task_Voucher](T1.[Task_Voucher.VoucherId], T1.[Task_Voucher.VoucherNo], T1.[Task_Voucher.Date], T1.[Task_Voucher.VoucherType], T1.[Task_Voucher.OperationType], T1.[Task_Voucher.Description], T1.[Task_Voucher.SelectedCurrency], T1.[Task_Voucher.Approved], T1.[Task_Voucher.ApprovedBy], T1.[Task_Voucher.ApprovedDate], T1.[Task_Voucher.CancelReason], T1.[Task_Voucher.Posted], T1.[Task_Voucher.PostedBy], T1.[Task_Voucher.PostedDate], T1.[Task_Voucher.OperationalEventId], T1.[Task_Voucher.LocationId], T1.[Task_Voucher.CompanyId], T1.[Task_Voucher.EntryBy], T1.[Task_Voucher.EntryDate], T1.[Task_Voucher.EditedBy], T1.[Task_Voucher.EditedDate])
    FROM (
        SELECT 
            T.VoucherId AS [Task_Voucher.VoucherId], 
            T.VoucherNo AS [Task_Voucher.VoucherNo], 
            T.Date AS [Task_Voucher.Date], 
            T.VoucherType AS [Task_Voucher.VoucherType], 
            T.OperationType AS [Task_Voucher.OperationType], 
            T.Description AS [Task_Voucher.Description], 
            T.SelectedCurrency AS [Task_Voucher.SelectedCurrency], 
            T.Approved AS [Task_Voucher.Approved], 
            T.ApprovedBy AS [Task_Voucher.ApprovedBy], 
            T.ApprovedDate AS [Task_Voucher.ApprovedDate], 
            T.CancelReason AS [Task_Voucher.CancelReason], 
            T.Posted AS [Task_Voucher.Posted], 
            T.PostedBy AS [Task_Voucher.PostedBy], 
            T.PostedDate AS [Task_Voucher.PostedDate], 
            T.OperationalEventId AS [Task_Voucher.OperationalEventId], 
            T.LocationId AS [Task_Voucher.LocationId], 
            T.CompanyId AS [Task_Voucher.CompanyId], 
            T.EntryBy AS [Task_Voucher.EntryBy], 
            T.EntryDate AS [Task_Voucher.EntryDate], 
            T.EditedBy AS [Task_Voucher.EditedBy], 
            T.EditedDate AS [Task_Voucher.EditedDate], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_Voucher AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_VoucherDetail.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView450()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_VoucherDetail
        [BTS_OPSModel.Task_VoucherDetail](T1.[Task_VoucherDetail.VoucherDetailId], T1.[Task_VoucherDetail.VoucherId], T1.[Task_VoucherDetail.AccountsId], T1.[Task_VoucherDetail.ProjectId], T1.[Task_VoucherDetail.Particulars], T1.[Task_VoucherDetail.Debit], T1.[Task_VoucherDetail.Credit], T1.[Task_VoucherDetail.Currency1Rate], T1.[Task_VoucherDetail.Currency1Debit], T1.[Task_VoucherDetail.Currency1Credit], T1.[Task_VoucherDetail.Currency2Rate], T1.[Task_VoucherDetail.Currency2Debit], T1.[Task_VoucherDetail.Currency2Credit])
    FROM (
        SELECT 
            T.VoucherDetailId AS [Task_VoucherDetail.VoucherDetailId], 
            T.VoucherId AS [Task_VoucherDetail.VoucherId], 
            T.AccountsId AS [Task_VoucherDetail.AccountsId], 
            T.ProjectId AS [Task_VoucherDetail.ProjectId], 
            T.Particulars AS [Task_VoucherDetail.Particulars], 
            T.Debit AS [Task_VoucherDetail.Debit], 
            T.Credit AS [Task_VoucherDetail.Credit], 
            T.Currency1Rate AS [Task_VoucherDetail.Currency1Rate], 
            T.Currency1Debit AS [Task_VoucherDetail.Currency1Debit], 
            T.Currency1Credit AS [Task_VoucherDetail.Currency1Credit], 
            T.Currency2Rate AS [Task_VoucherDetail.Currency2Rate], 
            T.Currency2Debit AS [Task_VoucherDetail.Currency2Debit], 
            T.Currency2Credit AS [Task_VoucherDetail.Currency2Credit], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_VoucherDetail AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Task_VoucherNos.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView451()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Task_VoucherNos
        [BTS_OPSModel.Task_VoucherNos](T1.[Task_VoucherNos.Id], T1.[Task_VoucherNos.VoucherNo], T1.[Task_VoucherNos.Year], T1.[Task_VoucherNos.CompanyId])
    FROM (
        SELECT 
            T.Id AS [Task_VoucherNos.Id], 
            T.VoucherNo AS [Task_VoucherNos.VoucherNo], 
            T.Year AS [Task_VoucherNos.Year], 
            T.CompanyId AS [Task_VoucherNos.CompanyId], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Task_VoucherNos AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Temp_AccountsLedgerDetail.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView452()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Temp_AccountsLedgerDetail
        [BTS_OPSModel.Temp_AccountsLedgerDetail](T1.[Temp_AccountsLedgerDetail.TempDetailId], T1.[Temp_AccountsLedgerDetail.TempId], T1.[Temp_AccountsLedgerDetail.AccountsName], T1.[Temp_AccountsLedgerDetail.DrAmount], T1.[Temp_AccountsLedgerDetail.CrAmount])
    FROM (
        SELECT 
            T.TempDetailId AS [Temp_AccountsLedgerDetail.TempDetailId], 
            T.TempId AS [Temp_AccountsLedgerDetail.TempId], 
            T.AccountsName AS [Temp_AccountsLedgerDetail.AccountsName], 
            T.DrAmount AS [Temp_AccountsLedgerDetail.DrAmount], 
            T.CrAmount AS [Temp_AccountsLedgerDetail.CrAmount], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Temp_AccountsLedgerDetail AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Temp_AccountsLedgerOrProvisionalLedger.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView453()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Temp_AccountsLedgerOrProvisionalLedger
        [BTS_OPSModel.Temp_AccountsLedgerOrProvisionalLedger](T1.[Temp_AccountsLedgerOrProvisionalLedger.TempId], T1.[Temp_AccountsLedgerOrProvisionalLedger.LedgerOrProvisional], T1.[Temp_AccountsLedgerOrProvisionalLedger.Date], T1.[Temp_AccountsLedgerOrProvisionalLedger.VoucherNo], T1.[Temp_AccountsLedgerOrProvisionalLedger.VoucherDescription], T1.[Temp_AccountsLedgerOrProvisionalLedger.DrAmount], T1.[Temp_AccountsLedgerOrProvisionalLedger.CrAmount], T1.[Temp_AccountsLedgerOrProvisionalLedger.CompanyId], T1.[Temp_AccountsLedgerOrProvisionalLedger.EntryBy])
    FROM (
        SELECT 
            T.TempId AS [Temp_AccountsLedgerOrProvisionalLedger.TempId], 
            T.LedgerOrProvisional AS [Temp_AccountsLedgerOrProvisionalLedger.LedgerOrProvisional], 
            T.Date AS [Temp_AccountsLedgerOrProvisionalLedger.Date], 
            T.VoucherNo AS [Temp_AccountsLedgerOrProvisionalLedger.VoucherNo], 
            T.VoucherDescription AS [Temp_AccountsLedgerOrProvisionalLedger.VoucherDescription], 
            T.DrAmount AS [Temp_AccountsLedgerOrProvisionalLedger.DrAmount], 
            T.CrAmount AS [Temp_AccountsLedgerOrProvisionalLedger.CrAmount], 
            T.CompanyId AS [Temp_AccountsLedgerOrProvisionalLedger.CompanyId], 
            T.EntryBy AS [Temp_AccountsLedgerOrProvisionalLedger.EntryBy], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Temp_AccountsLedgerOrProvisionalLedger AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Temp_ChequeInfo.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView454()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Temp_ChequeInfo
        [BTS_OPSModel.Temp_ChequeInfo](T1.[Temp_ChequeInfo.ChequeInfoId], T1.[Temp_ChequeInfo.CollectionDetailId], T1.[Temp_ChequeInfo.BankId], T1.[Temp_ChequeInfo.ChequeNo], T1.[Temp_ChequeInfo.ChequeDate], T1.[Temp_ChequeInfo.Amount], T1.[Temp_ChequeInfo.Amount1], T1.[Temp_ChequeInfo.Amount2])
    FROM (
        SELECT 
            T.ChequeInfoId AS [Temp_ChequeInfo.ChequeInfoId], 
            T.CollectionDetailId AS [Temp_ChequeInfo.CollectionDetailId], 
            T.BankId AS [Temp_ChequeInfo.BankId], 
            T.ChequeNo AS [Temp_ChequeInfo.ChequeNo], 
            T.ChequeDate AS [Temp_ChequeInfo.ChequeDate], 
            T.Amount AS [Temp_ChequeInfo.Amount], 
            T.Amount1 AS [Temp_ChequeInfo.Amount1], 
            T.Amount2 AS [Temp_ChequeInfo.Amount2], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Temp_ChequeInfo AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Temp_Collection.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView455()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Temp_Collection
        [BTS_OPSModel.Temp_Collection](T1.[Temp_Collection.CollectionId], T1.[Temp_Collection.CollectionNo], T1.[Temp_Collection.CollectionDate], T1.[Temp_Collection.SelectedCurrency], T1.[Temp_Collection.Currency1Rate], T1.[Temp_Collection.Currency2Rate], T1.[Temp_Collection.CollectedAmount], T1.[Temp_Collection.CollectedAmount1], T1.[Temp_Collection.CollectedAmount2], T1.[Temp_Collection.CustomerId], T1.[Temp_Collection.SalesPersonId], T1.[Temp_Collection.CollectedBy], T1.[Temp_Collection.MRNo], T1.[Temp_Collection.Remarks], T1.[Temp_Collection.OperationTypeId], T1.[Temp_Collection.OperationalEventId], T1.[Temp_Collection.SecurityDeposit], T1.[Temp_Collection.SecurityDeposit1], T1.[Temp_Collection.SecurityDeposit2], T1.[Temp_Collection.RecoveryDate], T1.[Temp_Collection.OthersAdjustment], T1.[Temp_Collection.OthersAdjustment1], T1.[Temp_Collection.OthersAdjustment2], T1.[Temp_Collection.Approved], T1.[Temp_Collection.ApprovedBy], T1.[Temp_Collection.ApprovedDate], T1.[Temp_Collection.CancelReason], T1.[Temp_Collection.LocationId], T1.[Temp_Collection.CompanyId], T1.[Temp_Collection.EntryBy], T1.[Temp_Collection.EntryDate])
    FROM (
        SELECT 
            T.CollectionId AS [Temp_Collection.CollectionId], 
            T.CollectionNo AS [Temp_Collection.CollectionNo], 
            T.CollectionDate AS [Temp_Collection.CollectionDate], 
            T.SelectedCurrency AS [Temp_Collection.SelectedCurrency], 
            T.Currency1Rate AS [Temp_Collection.Currency1Rate], 
            T.Currency2Rate AS [Temp_Collection.Currency2Rate], 
            T.CollectedAmount AS [Temp_Collection.CollectedAmount], 
            T.CollectedAmount1 AS [Temp_Collection.CollectedAmount1], 
            T.CollectedAmount2 AS [Temp_Collection.CollectedAmount2], 
            T.CustomerId AS [Temp_Collection.CustomerId], 
            T.SalesPersonId AS [Temp_Collection.SalesPersonId], 
            T.CollectedBy AS [Temp_Collection.CollectedBy], 
            T.MRNo AS [Temp_Collection.MRNo], 
            T.Remarks AS [Temp_Collection.Remarks], 
            T.OperationTypeId AS [Temp_Collection.OperationTypeId], 
            T.OperationalEventId AS [Temp_Collection.OperationalEventId], 
            T.SecurityDeposit AS [Temp_Collection.SecurityDeposit], 
            T.SecurityDeposit1 AS [Temp_Collection.SecurityDeposit1], 
            T.SecurityDeposit2 AS [Temp_Collection.SecurityDeposit2], 
            T.RecoveryDate AS [Temp_Collection.RecoveryDate], 
            T.OthersAdjustment AS [Temp_Collection.OthersAdjustment], 
            T.OthersAdjustment1 AS [Temp_Collection.OthersAdjustment1], 
            T.OthersAdjustment2 AS [Temp_Collection.OthersAdjustment2], 
            T.Approved AS [Temp_Collection.Approved], 
            T.ApprovedBy AS [Temp_Collection.ApprovedBy], 
            T.ApprovedDate AS [Temp_Collection.ApprovedDate], 
            T.CancelReason AS [Temp_Collection.CancelReason], 
            T.LocationId AS [Temp_Collection.LocationId], 
            T.CompanyId AS [Temp_Collection.CompanyId], 
            T.EntryBy AS [Temp_Collection.EntryBy], 
            T.EntryDate AS [Temp_Collection.EntryDate], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Temp_Collection AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Temp_CollectionDetail.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView456()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Temp_CollectionDetail
        [BTS_OPSModel.Temp_CollectionDetail](T1.[Temp_CollectionDetail.CollectionDetailId], T1.[Temp_CollectionDetail.CollectionId], T1.[Temp_CollectionDetail.PaymentModeId], T1.[Temp_CollectionDetail.Amount], T1.[Temp_CollectionDetail.Amount1], T1.[Temp_CollectionDetail.Amount2])
    FROM (
        SELECT 
            T.CollectionDetailId AS [Temp_CollectionDetail.CollectionDetailId], 
            T.CollectionId AS [Temp_CollectionDetail.CollectionId], 
            T.PaymentModeId AS [Temp_CollectionDetail.PaymentModeId], 
            T.Amount AS [Temp_CollectionDetail.Amount], 
            T.Amount1 AS [Temp_CollectionDetail.Amount1], 
            T.Amount2 AS [Temp_CollectionDetail.Amount2], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Temp_CollectionDetail AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Temp_CollectionMapping.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView457()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Temp_CollectionMapping
        [BTS_OPSModel.Temp_CollectionMapping](T1.[Temp_CollectionMapping.MappingId], T1.[Temp_CollectionMapping.CollectionId], T1.[Temp_CollectionMapping.InvoiceId], T1.[Temp_CollectionMapping.Amount], T1.[Temp_CollectionMapping.Amount1], T1.[Temp_CollectionMapping.Amount2])
    FROM (
        SELECT 
            T.MappingId AS [Temp_CollectionMapping.MappingId], 
            T.CollectionId AS [Temp_CollectionMapping.CollectionId], 
            T.InvoiceId AS [Temp_CollectionMapping.InvoiceId], 
            T.Amount AS [Temp_CollectionMapping.Amount], 
            T.Amount1 AS [Temp_CollectionMapping.Amount1], 
            T.Amount2 AS [Temp_CollectionMapping.Amount2], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Temp_CollectionMapping AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Temp_CustomerSupplierOutstanding.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView458()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Temp_CustomerSupplierOutstanding
        [BTS_OPSModel.Temp_CustomerSupplierOutstanding](T1.[Temp_CustomerSupplierOutstanding.TempId], T1.[Temp_CustomerSupplierOutstanding.ReportFor], T1.[Temp_CustomerSupplierOutstanding.Group], T1.[Temp_CustomerSupplierOutstanding.CustomerId], T1.[Temp_CustomerSupplierOutstanding.SupplierId], T1.[Temp_CustomerSupplierOutstanding.Code], T1.[Temp_CustomerSupplierOutstanding.Name], T1.[Temp_CustomerSupplierOutstanding.SalesPerson], T1.[Temp_CustomerSupplierOutstanding.LedgerEndingBalance], T1.[Temp_CustomerSupplierOutstanding.ReceivedChequeNotTreatedAmount], T1.[Temp_CustomerSupplierOutstanding.ReceivedDishonourChequeAmount], T1.[Temp_CustomerSupplierOutstanding.IssuedChequeNotTreatedAmount], T1.[Temp_CustomerSupplierOutstanding.IssuedDishonourChequeAmount], T1.[Temp_CustomerSupplierOutstanding.CompanyId], T1.[Temp_CustomerSupplierOutstanding.EntryBy])
    FROM (
        SELECT 
            T.TempId AS [Temp_CustomerSupplierOutstanding.TempId], 
            T.ReportFor AS [Temp_CustomerSupplierOutstanding.ReportFor], 
            T.[Group] AS [Temp_CustomerSupplierOutstanding.Group], 
            T.CustomerId AS [Temp_CustomerSupplierOutstanding.CustomerId], 
            T.SupplierId AS [Temp_CustomerSupplierOutstanding.SupplierId], 
            T.Code AS [Temp_CustomerSupplierOutstanding.Code], 
            T.Name AS [Temp_CustomerSupplierOutstanding.Name], 
            T.SalesPerson AS [Temp_CustomerSupplierOutstanding.SalesPerson], 
            T.LedgerEndingBalance AS [Temp_CustomerSupplierOutstanding.LedgerEndingBalance], 
            T.ReceivedChequeNotTreatedAmount AS [Temp_CustomerSupplierOutstanding.ReceivedChequeNotTreatedAmount], 
            T.ReceivedDishonourChequeAmount AS [Temp_CustomerSupplierOutstanding.ReceivedDishonourChequeAmount], 
            T.IssuedChequeNotTreatedAmount AS [Temp_CustomerSupplierOutstanding.IssuedChequeNotTreatedAmount], 
            T.IssuedDishonourChequeAmount AS [Temp_CustomerSupplierOutstanding.IssuedDishonourChequeAmount], 
            T.CompanyId AS [Temp_CustomerSupplierOutstanding.CompanyId], 
            T.EntryBy AS [Temp_CustomerSupplierOutstanding.EntryBy], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Temp_CustomerSupplierOutstanding AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Temp_PartyLedger.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView459()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Temp_PartyLedger
        [BTS_OPSModel.Temp_PartyLedger](T1.[Temp_PartyLedger.TempId], T1.[Temp_PartyLedger.Date], T1.[Temp_PartyLedger.Type], T1.[Temp_PartyLedger.OperationType], T1.[Temp_PartyLedger.Particular], T1.[Temp_PartyLedger.Particular1], T1.[Temp_PartyLedger.DrAmount], T1.[Temp_PartyLedger.CrAmount], T1.[Temp_PartyLedger.CustomerId], T1.[Temp_PartyLedger.SupplierId], T1.[Temp_PartyLedger.CompanyId], T1.[Temp_PartyLedger.EntryBy])
    FROM (
        SELECT 
            T.TempId AS [Temp_PartyLedger.TempId], 
            T.Date AS [Temp_PartyLedger.Date], 
            T.Type AS [Temp_PartyLedger.Type], 
            T.OperationType AS [Temp_PartyLedger.OperationType], 
            T.Particular AS [Temp_PartyLedger.Particular], 
            T.Particular1 AS [Temp_PartyLedger.Particular1], 
            T.DrAmount AS [Temp_PartyLedger.DrAmount], 
            T.CrAmount AS [Temp_PartyLedger.CrAmount], 
            T.CustomerId AS [Temp_PartyLedger.CustomerId], 
            T.SupplierId AS [Temp_PartyLedger.SupplierId], 
            T.CompanyId AS [Temp_PartyLedger.CompanyId], 
            T.EntryBy AS [Temp_PartyLedger.EntryBy], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Temp_PartyLedger AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Temp_SalesInvoice.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView460()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Temp_SalesInvoice
        [BTS_OPSModel.Temp_SalesInvoice](T1.[Temp_SalesInvoice.InvoiceId], T1.[Temp_SalesInvoice.InvoiceNo], T1.[Temp_SalesInvoice.InvoiceDate], T1.[Temp_SalesInvoice.CustomerId], T1.[Temp_SalesInvoice.CustomerDetail], T1.[Temp_SalesInvoice.BuyerId], T1.[Temp_SalesInvoice.SelectedCurrency], T1.[Temp_SalesInvoice.Currency1Rate], T1.[Temp_SalesInvoice.Currency2Rate], T1.[Temp_SalesInvoice.InvoiceDiscountType], T1.[Temp_SalesInvoice.InvoiceDiscountValue], T1.[Temp_SalesInvoice.InvoiceDiscount1Value], T1.[Temp_SalesInvoice.InvoiceDiscount2Value], T1.[Temp_SalesInvoice.InvoiceDiscount], T1.[Temp_SalesInvoice.Invoice1Discount], T1.[Temp_SalesInvoice.Invoice2Discount], T1.[Temp_SalesInvoice.InvoiceAmount], T1.[Temp_SalesInvoice.Invoice1Amount], T1.[Temp_SalesInvoice.Invoice2Amount], T1.[Temp_SalesInvoice.CommissionType], T1.[Temp_SalesInvoice.CommissionValue], T1.[Temp_SalesInvoice.Commission1Value], T1.[Temp_SalesInvoice.Commission2Value], T1.[Temp_SalesInvoice.CommissionAmount], T1.[Temp_SalesInvoice.Commission1Amount], T1.[Temp_SalesInvoice.Commission2Amount], T1.[Temp_SalesInvoice.GovtDutyAmount], T1.[Temp_SalesInvoice.GovtDuty1Amount], T1.[Temp_SalesInvoice.GovtDuty2Amount], T1.[Temp_SalesInvoice.TotalChargeAmount], T1.[Temp_SalesInvoice.TotalChargeAmount1], T1.[Temp_SalesInvoice.TotalChargeAmount2], T1.[Temp_SalesInvoice.CollectedAmount], T1.[Temp_SalesInvoice.Collected1Amount], T1.[Temp_SalesInvoice.Collected2Amount], T1.[Temp_SalesInvoice.Approved], T1.[Temp_SalesInvoice.ApprovedBy], T1.[Temp_SalesInvoice.ApprovedDate], T1.[Temp_SalesInvoice.CancelReason], T1.[Temp_SalesInvoice.InvoiceOperationType], T1.[Temp_SalesInvoice.TermsAndConditionsId], T1.[Temp_SalesInvoice.TermsAndConditionsDetail], T1.[Temp_SalesInvoice.ReferenceNo], T1.[Temp_SalesInvoice.ReferenceDate], T1.[Temp_SalesInvoice.Remarks], T1.[Temp_SalesInvoice.TransactionFrom], T1.[Temp_SalesInvoice.IsSalesModeCash], T1.[Temp_SalesInvoice.IsSettledByCollection], T1.[Temp_SalesInvoice.GovtDutyChallanNo], T1.[Temp_SalesInvoice.DeliveryPlace], T1.[Temp_SalesInvoice.ContactPerson], T1.[Temp_SalesInvoice.ContactPersonNo], T1.[Temp_SalesInvoice.TransportId], T1.[Temp_SalesInvoice.TransportTypeId], T1.[Temp_SalesInvoice.VehicleNo], T1.[Temp_SalesInvoice.DriverName], T1.[Temp_SalesInvoice.DriverContactNo], T1.[Temp_SalesInvoice.LocationId], T1.[Temp_SalesInvoice.CompanyId], T1.[Temp_SalesInvoice.EntryBy], T1.[Temp_SalesInvoice.EntryDate])
    FROM (
        SELECT 
            T.InvoiceId AS [Temp_SalesInvoice.InvoiceId], 
            T.InvoiceNo AS [Temp_SalesInvoice.InvoiceNo], 
            T.InvoiceDate AS [Temp_SalesInvoice.InvoiceDate], 
            T.CustomerId AS [Temp_SalesInvoice.CustomerId], 
            T.CustomerDetail AS [Temp_SalesInvoice.CustomerDetail], 
            T.BuyerId AS [Temp_SalesInvoice.BuyerId], 
            T.SelectedCurrency AS [Temp_SalesInvoice.SelectedCurrency], 
            T.Currency1Rate AS [Temp_SalesInvoice.Currency1Rate], 
            T.Currency2Rate AS [Temp_SalesInvoice.Currency2Rate], 
            T.InvoiceDiscountType AS [Temp_SalesInvoice.InvoiceDiscountType], 
            T.InvoiceDiscountValue AS [Temp_SalesInvoice.InvoiceDiscountValue], 
            T.InvoiceDiscount1Value AS [Temp_SalesInvoice.InvoiceDiscount1Value], 
            T.InvoiceDiscount2Value AS [Temp_SalesInvoice.InvoiceDiscount2Value], 
            T.InvoiceDiscount AS [Temp_SalesInvoice.InvoiceDiscount], 
            T.Invoice1Discount AS [Temp_SalesInvoice.Invoice1Discount], 
            T.Invoice2Discount AS [Temp_SalesInvoice.Invoice2Discount], 
            T.InvoiceAmount AS [Temp_SalesInvoice.InvoiceAmount], 
            T.Invoice1Amount AS [Temp_SalesInvoice.Invoice1Amount], 
            T.Invoice2Amount AS [Temp_SalesInvoice.Invoice2Amount], 
            T.CommissionType AS [Temp_SalesInvoice.CommissionType], 
            T.CommissionValue AS [Temp_SalesInvoice.CommissionValue], 
            T.Commission1Value AS [Temp_SalesInvoice.Commission1Value], 
            T.Commission2Value AS [Temp_SalesInvoice.Commission2Value], 
            T.CommissionAmount AS [Temp_SalesInvoice.CommissionAmount], 
            T.Commission1Amount AS [Temp_SalesInvoice.Commission1Amount], 
            T.Commission2Amount AS [Temp_SalesInvoice.Commission2Amount], 
            T.GovtDutyAmount AS [Temp_SalesInvoice.GovtDutyAmount], 
            T.GovtDuty1Amount AS [Temp_SalesInvoice.GovtDuty1Amount], 
            T.GovtDuty2Amount AS [Temp_SalesInvoice.GovtDuty2Amount], 
            T.TotalChargeAmount AS [Temp_SalesInvoice.TotalChargeAmount], 
            T.TotalChargeAmount1 AS [Temp_SalesInvoice.TotalChargeAmount1], 
            T.TotalChargeAmount2 AS [Temp_SalesInvoice.TotalChargeAmount2], 
            T.CollectedAmount AS [Temp_SalesInvoice.CollectedAmount], 
            T.Collected1Amount AS [Temp_SalesInvoice.Collected1Amount], 
            T.Collected2Amount AS [Temp_SalesInvoice.Collected2Amount], 
            T.Approved AS [Temp_SalesInvoice.Approved], 
            T.ApprovedBy AS [Temp_SalesInvoice.ApprovedBy], 
            T.ApprovedDate AS [Temp_SalesInvoice.ApprovedDate], 
            T.CancelReason AS [Temp_SalesInvoice.CancelReason], 
            T.InvoiceOperationType AS [Temp_SalesInvoice.InvoiceOperationType], 
            T.TermsAndConditionsId AS [Temp_SalesInvoice.TermsAndConditionsId], 
            T.TermsAndConditionsDetail AS [Temp_SalesInvoice.TermsAndConditionsDetail], 
            T.ReferenceNo AS [Temp_SalesInvoice.ReferenceNo], 
            T.ReferenceDate AS [Temp_SalesInvoice.ReferenceDate], 
            T.Remarks AS [Temp_SalesInvoice.Remarks], 
            T.TransactionFrom AS [Temp_SalesInvoice.TransactionFrom], 
            T.IsSalesModeCash AS [Temp_SalesInvoice.IsSalesModeCash], 
            T.IsSettledByCollection AS [Temp_SalesInvoice.IsSettledByCollection], 
            T.GovtDutyChallanNo AS [Temp_SalesInvoice.GovtDutyChallanNo], 
            T.DeliveryPlace AS [Temp_SalesInvoice.DeliveryPlace], 
            T.ContactPerson AS [Temp_SalesInvoice.ContactPerson], 
            T.ContactPersonNo AS [Temp_SalesInvoice.ContactPersonNo], 
            T.TransportId AS [Temp_SalesInvoice.TransportId], 
            T.TransportTypeId AS [Temp_SalesInvoice.TransportTypeId], 
            T.VehicleNo AS [Temp_SalesInvoice.VehicleNo], 
            T.DriverName AS [Temp_SalesInvoice.DriverName], 
            T.DriverContactNo AS [Temp_SalesInvoice.DriverContactNo], 
            T.LocationId AS [Temp_SalesInvoice.LocationId], 
            T.CompanyId AS [Temp_SalesInvoice.CompanyId], 
            T.EntryBy AS [Temp_SalesInvoice.EntryBy], 
            T.EntryDate AS [Temp_SalesInvoice.EntryDate], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Temp_SalesInvoice AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Temp_SalesInvoice_Charge.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView461()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Temp_SalesInvoice_Charge
        [BTS_OPSModel.Temp_SalesInvoice_Charge](T1.[Temp_SalesInvoice_Charge.SalesInvoiceChargeId], T1.[Temp_SalesInvoice_Charge.InvoiceId], T1.[Temp_SalesInvoice_Charge.ChargeEventId], T1.[Temp_SalesInvoice_Charge.ChargeAmount], T1.[Temp_SalesInvoice_Charge.Charge1Amount], T1.[Temp_SalesInvoice_Charge.Charge2Amount])
    FROM (
        SELECT 
            T.SalesInvoiceChargeId AS [Temp_SalesInvoice_Charge.SalesInvoiceChargeId], 
            T.InvoiceId AS [Temp_SalesInvoice_Charge.InvoiceId], 
            T.ChargeEventId AS [Temp_SalesInvoice_Charge.ChargeEventId], 
            T.ChargeAmount AS [Temp_SalesInvoice_Charge.ChargeAmount], 
            T.Charge1Amount AS [Temp_SalesInvoice_Charge.Charge1Amount], 
            T.Charge2Amount AS [Temp_SalesInvoice_Charge.Charge2Amount], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Temp_SalesInvoice_Charge AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Temp_SalesInvoiceDetail.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView462()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Temp_SalesInvoiceDetail
        [BTS_OPSModel.Temp_SalesInvoiceDetail](T1.[Temp_SalesInvoiceDetail.InvoiceDetailId], T1.[Temp_SalesInvoiceDetail.InvoiceId], T1.[Temp_SalesInvoiceDetail.ChallanNo], T1.[Temp_SalesInvoiceDetail.ProductEntrySequence], T1.[Temp_SalesInvoiceDetail.ProductId], T1.[Temp_SalesInvoiceDetail.ProductDimensionId], T1.[Temp_SalesInvoiceDetail.UnitTypeId], T1.[Temp_SalesInvoiceDetail.Quantity], T1.[Temp_SalesInvoiceDetail.Price], T1.[Temp_SalesInvoiceDetail.Price1], T1.[Temp_SalesInvoiceDetail.Price2], T1.[Temp_SalesInvoiceDetail.DiscountType], T1.[Temp_SalesInvoiceDetail.DiscountValue], T1.[Temp_SalesInvoiceDetail.Discount1Value], T1.[Temp_SalesInvoiceDetail.Discount2Value], T1.[Temp_SalesInvoiceDetail.Discount], T1.[Temp_SalesInvoiceDetail.Discount1], T1.[Temp_SalesInvoiceDetail.Discount2], T1.[Temp_SalesInvoiceDetail.InvoiceDiscount], T1.[Temp_SalesInvoiceDetail.InvoiceDiscount1], T1.[Temp_SalesInvoiceDetail.InvoiceDiscount2], T1.[Temp_SalesInvoiceDetail.Cost], T1.[Temp_SalesInvoiceDetail.Cost1], T1.[Temp_SalesInvoiceDetail.Cost2], T1.[Temp_SalesInvoiceDetail.WareHouseId], T1.[Temp_SalesInvoiceDetail.IsIncludingGovtDuty], T1.[Temp_SalesInvoiceDetail.ShortSpecification], T1.[Temp_SalesInvoiceDetail.IsWarrantyAvailable], T1.[Temp_SalesInvoiceDetail.WarrantyDays], T1.[Temp_SalesInvoiceDetail.IsServiceWarranty], T1.[Temp_SalesInvoiceDetail.ServiceWarrantyDays])
    FROM (
        SELECT 
            T.InvoiceDetailId AS [Temp_SalesInvoiceDetail.InvoiceDetailId], 
            T.InvoiceId AS [Temp_SalesInvoiceDetail.InvoiceId], 
            T.ChallanNo AS [Temp_SalesInvoiceDetail.ChallanNo], 
            T.ProductEntrySequence AS [Temp_SalesInvoiceDetail.ProductEntrySequence], 
            T.ProductId AS [Temp_SalesInvoiceDetail.ProductId], 
            T.ProductDimensionId AS [Temp_SalesInvoiceDetail.ProductDimensionId], 
            T.UnitTypeId AS [Temp_SalesInvoiceDetail.UnitTypeId], 
            T.Quantity AS [Temp_SalesInvoiceDetail.Quantity], 
            T.Price AS [Temp_SalesInvoiceDetail.Price], 
            T.Price1 AS [Temp_SalesInvoiceDetail.Price1], 
            T.Price2 AS [Temp_SalesInvoiceDetail.Price2], 
            T.DiscountType AS [Temp_SalesInvoiceDetail.DiscountType], 
            T.DiscountValue AS [Temp_SalesInvoiceDetail.DiscountValue], 
            T.Discount1Value AS [Temp_SalesInvoiceDetail.Discount1Value], 
            T.Discount2Value AS [Temp_SalesInvoiceDetail.Discount2Value], 
            T.Discount AS [Temp_SalesInvoiceDetail.Discount], 
            T.Discount1 AS [Temp_SalesInvoiceDetail.Discount1], 
            T.Discount2 AS [Temp_SalesInvoiceDetail.Discount2], 
            T.InvoiceDiscount AS [Temp_SalesInvoiceDetail.InvoiceDiscount], 
            T.InvoiceDiscount1 AS [Temp_SalesInvoiceDetail.InvoiceDiscount1], 
            T.InvoiceDiscount2 AS [Temp_SalesInvoiceDetail.InvoiceDiscount2], 
            T.Cost AS [Temp_SalesInvoiceDetail.Cost], 
            T.Cost1 AS [Temp_SalesInvoiceDetail.Cost1], 
            T.Cost2 AS [Temp_SalesInvoiceDetail.Cost2], 
            T.WareHouseId AS [Temp_SalesInvoiceDetail.WareHouseId], 
            T.IsIncludingGovtDuty AS [Temp_SalesInvoiceDetail.IsIncludingGovtDuty], 
            T.ShortSpecification AS [Temp_SalesInvoiceDetail.ShortSpecification], 
            T.IsWarrantyAvailable AS [Temp_SalesInvoiceDetail.IsWarrantyAvailable], 
            T.WarrantyDays AS [Temp_SalesInvoiceDetail.WarrantyDays], 
            T.IsServiceWarranty AS [Temp_SalesInvoiceDetail.IsServiceWarranty], 
            T.ServiceWarrantyDays AS [Temp_SalesInvoiceDetail.ServiceWarrantyDays], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Temp_SalesInvoiceDetail AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Temp_SalesInvoiceDetail_GovtDuty.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView463()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Temp_SalesInvoiceDetail_GovtDuty
        [BTS_OPSModel.Temp_SalesInvoiceDetail_GovtDuty](T1.[Temp_SalesInvoiceDetail_GovtDuty.Id], T1.[Temp_SalesInvoiceDetail_GovtDuty.InvoiceDetailId], T1.[Temp_SalesInvoiceDetail_GovtDuty.GovtDutyId], T1.[Temp_SalesInvoiceDetail_GovtDuty.RateType], T1.[Temp_SalesInvoiceDetail_GovtDuty.RateValue], T1.[Temp_SalesInvoiceDetail_GovtDuty.RateValue1], T1.[Temp_SalesInvoiceDetail_GovtDuty.RateValue2], T1.[Temp_SalesInvoiceDetail_GovtDuty.RateAmount], T1.[Temp_SalesInvoiceDetail_GovtDuty.RateAmount1], T1.[Temp_SalesInvoiceDetail_GovtDuty.RateAmount2], T1.[Temp_SalesInvoiceDetail_GovtDuty.ExemptedType], T1.[Temp_SalesInvoiceDetail_GovtDuty.ExemptedValue], T1.[Temp_SalesInvoiceDetail_GovtDuty.ExemptedValue1], T1.[Temp_SalesInvoiceDetail_GovtDuty.ExemptedValue2], T1.[Temp_SalesInvoiceDetail_GovtDuty.ExemptedAmount], T1.[Temp_SalesInvoiceDetail_GovtDuty.ExemptedAmount1], T1.[Temp_SalesInvoiceDetail_GovtDuty.ExemptedAmount2])
    FROM (
        SELECT 
            T.Id AS [Temp_SalesInvoiceDetail_GovtDuty.Id], 
            T.InvoiceDetailId AS [Temp_SalesInvoiceDetail_GovtDuty.InvoiceDetailId], 
            T.GovtDutyId AS [Temp_SalesInvoiceDetail_GovtDuty.GovtDutyId], 
            T.RateType AS [Temp_SalesInvoiceDetail_GovtDuty.RateType], 
            T.RateValue AS [Temp_SalesInvoiceDetail_GovtDuty.RateValue], 
            T.RateValue1 AS [Temp_SalesInvoiceDetail_GovtDuty.RateValue1], 
            T.RateValue2 AS [Temp_SalesInvoiceDetail_GovtDuty.RateValue2], 
            T.RateAmount AS [Temp_SalesInvoiceDetail_GovtDuty.RateAmount], 
            T.RateAmount1 AS [Temp_SalesInvoiceDetail_GovtDuty.RateAmount1], 
            T.RateAmount2 AS [Temp_SalesInvoiceDetail_GovtDuty.RateAmount2], 
            T.ExemptedType AS [Temp_SalesInvoiceDetail_GovtDuty.ExemptedType], 
            T.ExemptedValue AS [Temp_SalesInvoiceDetail_GovtDuty.ExemptedValue], 
            T.ExemptedValue1 AS [Temp_SalesInvoiceDetail_GovtDuty.ExemptedValue1], 
            T.ExemptedValue2 AS [Temp_SalesInvoiceDetail_GovtDuty.ExemptedValue2], 
            T.ExemptedAmount AS [Temp_SalesInvoiceDetail_GovtDuty.ExemptedAmount], 
            T.ExemptedAmount1 AS [Temp_SalesInvoiceDetail_GovtDuty.ExemptedAmount1], 
            T.ExemptedAmount2 AS [Temp_SalesInvoiceDetail_GovtDuty.ExemptedAmount2], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Temp_SalesInvoiceDetail_GovtDuty AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Temp_SalesInvoiceDetailSerial.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView464()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Temp_SalesInvoiceDetailSerial
        [BTS_OPSModel.Temp_SalesInvoiceDetailSerial](T1.[Temp_SalesInvoiceDetailSerial.InvoiceDetailSerialId], T1.[Temp_SalesInvoiceDetailSerial.InvoiceDetailId], T1.[Temp_SalesInvoiceDetailSerial.Serial], T1.[Temp_SalesInvoiceDetailSerial.AdditionalSerial])
    FROM (
        SELECT 
            T.InvoiceDetailSerialId AS [Temp_SalesInvoiceDetailSerial.InvoiceDetailSerialId], 
            T.InvoiceDetailId AS [Temp_SalesInvoiceDetailSerial.InvoiceDetailId], 
            T.Serial AS [Temp_SalesInvoiceDetailSerial.Serial], 
            T.AdditionalSerial AS [Temp_SalesInvoiceDetailSerial.AdditionalSerial], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Temp_SalesInvoiceDetailSerial AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Temp_TrialBalance.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView465()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Temp_TrialBalance
        [BTS_OPSModel.Temp_TrialBalance](T1.[Temp_TrialBalance.TempId], T1.[Temp_TrialBalance.ReportType], T1.[Temp_TrialBalance.AccountsId], T1.[Temp_TrialBalance.OpeningDr], T1.[Temp_TrialBalance.OpeningCr], T1.[Temp_TrialBalance.TransactionDr], T1.[Temp_TrialBalance.TransactionCr], T1.[Temp_TrialBalance.CompanyId], T1.[Temp_TrialBalance.EntryBy])
    FROM (
        SELECT 
            T.TempId AS [Temp_TrialBalance.TempId], 
            T.ReportType AS [Temp_TrialBalance.ReportType], 
            T.AccountsId AS [Temp_TrialBalance.AccountsId], 
            T.OpeningDr AS [Temp_TrialBalance.OpeningDr], 
            T.OpeningCr AS [Temp_TrialBalance.OpeningCr], 
            T.TransactionDr AS [Temp_TrialBalance.TransactionDr], 
            T.TransactionCr AS [Temp_TrialBalance.TransactionCr], 
            T.CompanyId AS [Temp_TrialBalance.CompanyId], 
            T.EntryBy AS [Temp_TrialBalance.EntryBy], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Temp_TrialBalance AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Configuration_FormattingTag.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView466()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Configuration_FormattingTag
        [BTS_OPSModel.Store.Configuration_FormattingTag](T1.[Configuration_FormattingTag.Id], T1.[Configuration_FormattingTag.TagName], T1.[Configuration_FormattingTag.Type], T1.[Configuration_FormattingTag.DataSource])
    FROM (
        SELECT 
            T.Id AS [Configuration_FormattingTag.Id], 
            T.TagName AS [Configuration_FormattingTag.TagName], 
            T.Type AS [Configuration_FormattingTag.Type], 
            T.DataSource AS [Configuration_FormattingTag.DataSource], 
            True AS _from0
        FROM Inventory360Entities.Configuration_FormattingTag AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Configuration_FormattingTag.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView467()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Configuration_FormattingTag
        [BTS_OPSModel.Configuration_FormattingTag](T1.[Configuration_FormattingTag.Id], T1.[Configuration_FormattingTag.TagName], T1.[Configuration_FormattingTag.Type], T1.[Configuration_FormattingTag.DataSource])
    FROM (
        SELECT 
            T.Id AS [Configuration_FormattingTag.Id], 
            T.TagName AS [Configuration_FormattingTag.TagName], 
            T.Type AS [Configuration_FormattingTag.Type], 
            T.DataSource AS [Configuration_FormattingTag.DataSource], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Configuration_FormattingTag AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.Others_Report.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView468()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Others_Report
        [BTS_OPSModel.Store.Others_Report](T1.[Others_Report.Id], T1.[Others_Report.ReportFor], T1.[Others_Report.ReportName])
    FROM (
        SELECT 
            T.Id AS [Others_Report.Id], 
            T.ReportFor AS [Others_Report.ReportFor], 
            T.ReportName AS [Others_Report.ReportName], 
            True AS _from0
        FROM Inventory360Entities.Others_Report AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.Others_Report.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView469()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Others_Report
        [BTS_OPSModel.Others_Report](T1.[Others_Report.Id], T1.[Others_Report.ReportFor], T1.[Others_Report.ReportName])
    FROM (
        SELECT 
            T.Id AS [Others_Report.Id], 
            T.ReportFor AS [Others_Report.ReportFor], 
            T.ReportName AS [Others_Report.ReportName], 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.Others_Report AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BTS_OPSModelStoreContainer.TempCustomerOrSupplierWiseChequePerformance.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView470()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing TempCustomerOrSupplierWiseChequePerformance
        [BTS_OPSModel.Store.TempCustomerOrSupplierWiseChequePerformance](T1.TempCustomerOrSupplierWiseChequePerformance_CustomerOrSupplierId, T1.TempCustomerOrSupplierWiseChequePerformance_CustomerOrSupplierName, T1.TempCustomerOrSupplierWiseChequePerformance_CustomerOrSupplierCode, T1.TempCustomerOrSupplierWiseChequePerformance_CustomerOrSupplierAddress, T1.TempCustomerOrSupplierWiseChequePerformance_CustomerOrSupplierPhoneNo, T1.TempCustomerOrSupplierWiseChequePerformance_NoOfCheque, T1.TempCustomerOrSupplierWiseChequePerformance_ChequeAmount, T1.TempCustomerOrSupplierWiseChequePerformance_NoOfDisHonerCheque, T1.TempCustomerOrSupplierWiseChequePerformance_DisHonerChequeAmount, T1.TempCustomerOrSupplierWiseChequePerformance_DisHonerChequePercentageAmount, T1.TempCustomerOrSupplierWiseChequePerformance_NoOfBalanceAdjustedCheque, T1.TempCustomerOrSupplierWiseChequePerformance_BalanceAdjustedChequeAmount, T1.TempCustomerOrSupplierWiseChequePerformance_BalanceAdjustedChequePercentageAmount, T1.TempCustomerOrSupplierWiseChequePerformance_CompanyId, T1.TempCustomerOrSupplierWiseChequePerformance_EntryBy, T1.TempCustomerOrSupplierWiseChequePerformance_DateFrom, T1.TempCustomerOrSupplierWiseChequePerformance_DateTo, T1.TempCustomerOrSupplierWiseChequePerformance_CompanyName, T1.TempCustomerOrSupplierWiseChequePerformance_CompanyAddress, T1.TempCustomerOrSupplierWiseChequePerformance_CompanyContact, T1.TempCustomerOrSupplierWiseChequePerformance_LocationName, T1.TempCustomerOrSupplierWiseChequePerformance_NoOfPurelyHonoredCheque, T1.TempCustomerOrSupplierWiseChequePerformance_PurelyHonoredChequeAmount, T1.TempCustomerOrSupplierWiseChequePerformance_PurelyHonoredChequePercentageAmount)
    FROM (
        SELECT 
            T.CustomerOrSupplierId AS TempCustomerOrSupplierWiseChequePerformance_CustomerOrSupplierId, 
            T.CustomerOrSupplierName AS TempCustomerOrSupplierWiseChequePerformance_CustomerOrSupplierName, 
            T.CustomerOrSupplierCode AS TempCustomerOrSupplierWiseChequePerformance_CustomerOrSupplierCode, 
            T.CustomerOrSupplierAddress AS TempCustomerOrSupplierWiseChequePerformance_CustomerOrSupplierAddress, 
            T.CustomerOrSupplierPhoneNo AS TempCustomerOrSupplierWiseChequePerformance_CustomerOrSupplierPhoneNo, 
            T.NoOfCheque AS TempCustomerOrSupplierWiseChequePerformance_NoOfCheque, 
            T.ChequeAmount AS TempCustomerOrSupplierWiseChequePerformance_ChequeAmount, 
            T.NoOfDisHonerCheque AS TempCustomerOrSupplierWiseChequePerformance_NoOfDisHonerCheque, 
            T.DisHonerChequeAmount AS TempCustomerOrSupplierWiseChequePerformance_DisHonerChequeAmount, 
            T.DisHonerChequePercentageAmount AS TempCustomerOrSupplierWiseChequePerformance_DisHonerChequePercentageAmount, 
            T.NoOfBalanceAdjustedCheque AS TempCustomerOrSupplierWiseChequePerformance_NoOfBalanceAdjustedCheque, 
            T.BalanceAdjustedChequeAmount AS TempCustomerOrSupplierWiseChequePerformance_BalanceAdjustedChequeAmount, 
            T.BalanceAdjustedChequePercentageAmount AS TempCustomerOrSupplierWiseChequePerformance_BalanceAdjustedChequePercentageAmount, 
            T.CompanyId AS TempCustomerOrSupplierWiseChequePerformance_CompanyId, 
            T.EntryBy AS TempCustomerOrSupplierWiseChequePerformance_EntryBy, 
            T.DateFrom AS TempCustomerOrSupplierWiseChequePerformance_DateFrom, 
            T.DateTo AS TempCustomerOrSupplierWiseChequePerformance_DateTo, 
            T.CompanyName AS TempCustomerOrSupplierWiseChequePerformance_CompanyName, 
            T.CompanyAddress AS TempCustomerOrSupplierWiseChequePerformance_CompanyAddress, 
            T.CompanyContact AS TempCustomerOrSupplierWiseChequePerformance_CompanyContact, 
            T.LocationName AS TempCustomerOrSupplierWiseChequePerformance_LocationName, 
            T.NoOfPurelyHonoredCheque AS TempCustomerOrSupplierWiseChequePerformance_NoOfPurelyHonoredCheque, 
            T.PurelyHonoredChequeAmount AS TempCustomerOrSupplierWiseChequePerformance_PurelyHonoredChequeAmount, 
            T.PurelyHonoredChequePercentageAmount AS TempCustomerOrSupplierWiseChequePerformance_PurelyHonoredChequePercentageAmount, 
            True AS _from0
        FROM Inventory360Entities.TempCustomerOrSupplierWiseChequePerformances AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Inventory360Entities.TempCustomerOrSupplierWiseChequePerformances.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView471()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing TempCustomerOrSupplierWiseChequePerformances
        [BTS_OPSModel.TempCustomerOrSupplierWiseChequePerformance](T1.TempCustomerOrSupplierWiseChequePerformance_CustomerOrSupplierId, T1.TempCustomerOrSupplierWiseChequePerformance_CustomerOrSupplierName, T1.TempCustomerOrSupplierWiseChequePerformance_CustomerOrSupplierCode, T1.TempCustomerOrSupplierWiseChequePerformance_CustomerOrSupplierAddress, T1.TempCustomerOrSupplierWiseChequePerformance_CustomerOrSupplierPhoneNo, T1.TempCustomerOrSupplierWiseChequePerformance_NoOfCheque, T1.TempCustomerOrSupplierWiseChequePerformance_ChequeAmount, T1.TempCustomerOrSupplierWiseChequePerformance_NoOfDisHonerCheque, T1.TempCustomerOrSupplierWiseChequePerformance_DisHonerChequeAmount, T1.TempCustomerOrSupplierWiseChequePerformance_DisHonerChequePercentageAmount, T1.TempCustomerOrSupplierWiseChequePerformance_NoOfBalanceAdjustedCheque, T1.TempCustomerOrSupplierWiseChequePerformance_BalanceAdjustedChequeAmount, T1.TempCustomerOrSupplierWiseChequePerformance_BalanceAdjustedChequePercentageAmount, T1.TempCustomerOrSupplierWiseChequePerformance_CompanyId, T1.TempCustomerOrSupplierWiseChequePerformance_EntryBy, T1.TempCustomerOrSupplierWiseChequePerformance_DateFrom, T1.TempCustomerOrSupplierWiseChequePerformance_DateTo, T1.TempCustomerOrSupplierWiseChequePerformance_CompanyName, T1.TempCustomerOrSupplierWiseChequePerformance_CompanyAddress, T1.TempCustomerOrSupplierWiseChequePerformance_CompanyContact, T1.TempCustomerOrSupplierWiseChequePerformance_LocationName, T1.TempCustomerOrSupplierWiseChequePerformance_NoOfPurelyHonoredCheque, T1.TempCustomerOrSupplierWiseChequePerformance_PurelyHonoredChequeAmount, T1.TempCustomerOrSupplierWiseChequePerformance_PurelyHonoredChequePercentageAmount)
    FROM (
        SELECT 
            T.CustomerOrSupplierId AS TempCustomerOrSupplierWiseChequePerformance_CustomerOrSupplierId, 
            T.CustomerOrSupplierName AS TempCustomerOrSupplierWiseChequePerformance_CustomerOrSupplierName, 
            T.CustomerOrSupplierCode AS TempCustomerOrSupplierWiseChequePerformance_CustomerOrSupplierCode, 
            T.CustomerOrSupplierAddress AS TempCustomerOrSupplierWiseChequePerformance_CustomerOrSupplierAddress, 
            T.CustomerOrSupplierPhoneNo AS TempCustomerOrSupplierWiseChequePerformance_CustomerOrSupplierPhoneNo, 
            T.NoOfCheque AS TempCustomerOrSupplierWiseChequePerformance_NoOfCheque, 
            T.ChequeAmount AS TempCustomerOrSupplierWiseChequePerformance_ChequeAmount, 
            T.NoOfDisHonerCheque AS TempCustomerOrSupplierWiseChequePerformance_NoOfDisHonerCheque, 
            T.DisHonerChequeAmount AS TempCustomerOrSupplierWiseChequePerformance_DisHonerChequeAmount, 
            T.DisHonerChequePercentageAmount AS TempCustomerOrSupplierWiseChequePerformance_DisHonerChequePercentageAmount, 
            T.NoOfBalanceAdjustedCheque AS TempCustomerOrSupplierWiseChequePerformance_NoOfBalanceAdjustedCheque, 
            T.BalanceAdjustedChequeAmount AS TempCustomerOrSupplierWiseChequePerformance_BalanceAdjustedChequeAmount, 
            T.BalanceAdjustedChequePercentageAmount AS TempCustomerOrSupplierWiseChequePerformance_BalanceAdjustedChequePercentageAmount, 
            T.CompanyId AS TempCustomerOrSupplierWiseChequePerformance_CompanyId, 
            T.EntryBy AS TempCustomerOrSupplierWiseChequePerformance_EntryBy, 
            T.DateFrom AS TempCustomerOrSupplierWiseChequePerformance_DateFrom, 
            T.DateTo AS TempCustomerOrSupplierWiseChequePerformance_DateTo, 
            T.CompanyName AS TempCustomerOrSupplierWiseChequePerformance_CompanyName, 
            T.CompanyAddress AS TempCustomerOrSupplierWiseChequePerformance_CompanyAddress, 
            T.CompanyContact AS TempCustomerOrSupplierWiseChequePerformance_CompanyContact, 
            T.LocationName AS TempCustomerOrSupplierWiseChequePerformance_LocationName, 
            T.NoOfPurelyHonoredCheque AS TempCustomerOrSupplierWiseChequePerformance_NoOfPurelyHonoredCheque, 
            T.PurelyHonoredChequeAmount AS TempCustomerOrSupplierWiseChequePerformance_PurelyHonoredChequeAmount, 
            T.PurelyHonoredChequePercentageAmount AS TempCustomerOrSupplierWiseChequePerformance_PurelyHonoredChequePercentageAmount, 
            True AS _from0
        FROM BTS_OPSModelStoreContainer.TempCustomerOrSupplierWiseChequePerformance AS T
    ) AS T1");
        }
    }
}
