@using System.Globalization
@model Inventory360Web.Models.CommonReplacementReceiveAnalysisReport

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <link href="~/Content/Inventory360Report.css" rel="stylesheet" />
    <title>@Model.ReportName Report</title>
</head>
<body>
    <div style="font-size: 13px;">
        <br />
        <table style="width:100%; border: 1px solid black;border-collapse:collapse;">
            <tr style="vertical-align:top;">
                <td style="border-right: 1px solid black;">
                    <div class="companyHeader"><strong>@Model.CompanyName</strong></div>
                    <div class="addcon">@Model.CompanyAddress</div>
                    <div class="addcon">@Model.CompanyContact</div>
                </td>
                <td style="width:350px;">
                    <div class="reportTitle"><strong>@Model.ReportName Report</strong></div>
                    <table>
                        <tr>
                            <td style="padding-left:5px;">@Model.DateRange</td>
                        </tr>
                    </table>
                </td>
            </tr>
        </table>
        <br />
        @{
            string Problems = "";
            var replacementReceiveAnalysisLists = Model.ReplacementReceiveAnalysisLists.OrderBy(o => o.Location).Select(s => s.Location).Distinct().ToList();
            foreach (var indReplacementReceiveLocation in replacementReceiveAnalysisLists)
            {
                <table style="width:100%; border-collapse: collapse;">
                    @{
                        <tr style="font-weight:bold;">
                            <td colspan="14" style="text-align:center;vertical-align:top;padding-left:5px;padding-right:5px;border:1px solid black;">Location # @indReplacementReceiveLocation</td>
                        </tr>
                        var SupplierLists = Model.ReplacementReceiveAnalysisLists.Where(x => x.Location == indReplacementReceiveLocation).Select(s => s.Supplier).Distinct().ToList();
                        var locationWiseTotalAmount = Model.ReplacementReceiveAnalysisLists.Where(x => x.Location == indReplacementReceiveLocation).Sum(s => s.AdjustedAmount);
                        foreach (var indSupplier in SupplierLists)
                        {
                            <tr style="font-weight:bold;">
                                <td colspan="14" style="text-align:left;vertical-align:top;padding-left:5px;padding-right:5px;border:1px solid black;">Supplier # @indSupplier</td>
                            </tr>
                            <tr style="font-weight:bold; background-color:aqua;">
                                <td style="text-align:center;vertical-align:top;padding-left:5px;padding-right:5px;border:1px solid black;">Replacement Receive Number</td>
                                <td style="text-align:center;vertical-align:top;padding-left:5px;padding-right:5px;border:1px solid black;">Date</td>
                                <td style="text-align:center;vertical-align:top;padding-left:5px;padding-right:5px;border:1px solid black;">Received By</td>
                                <td style="text-align:center;vertical-align:top;padding-left:5px;padding-right:5px;border:1px solid black;">Received Type</td>
                                <td style="text-align:center;vertical-align:top;padding-left:5px;padding-right:5px;border:1px solid black;">Received Product</td>
                                <td style="text-align:center;vertical-align:top;padding-left:5px;padding-right:5px;border:1px solid black;">Serial</td>
                                <td style="text-align:center;vertical-align:top;padding-left:5px;padding-right:5px;border:1px solid black;">Claim Product</td>
                                <td style="text-align:center;vertical-align:top;padding-left:5px;padding-right:5px;border:1px solid black;">Claim Product Serial</td>
                                <td style="text-align:center;vertical-align:top;padding-left:5px;padding-right:5px;border:1px solid black;">Problem</td>
                                <td style="text-align:center;vertical-align:top;padding-left:5px;padding-right:5px;border:1px solid black;">Adjustment Amount</td>
                                <td style="text-align:center;vertical-align:top;padding-left:5px;padding-right:5px;border:1px solid black;">Total Amount</td>
                            </tr>
                            var dataLists = Model.ReplacementReceiveAnalysisLists.Where(x => x.Location == indReplacementReceiveLocation && x.Supplier.Equals(indSupplier))
                                            .GroupBy(g => new { g.ReceiveNo, g.ReceiveDate, g.ReceivedBy,g.ReceivedProductName,g.Serial,g.ClaimProductName,g.ClaimProductSerial, g.ProblemNames },
                                                           (key, g) => new
                                                           {
                                                               key.ReceiveNo,
                                                               key.ReceiveDate,
                                                               key.ReceivedBy,
                                                               key.ReceivedProductName,
                                                               key.Serial,
                                                               key.ProblemNames,
                                                               key.ClaimProductName,
                                                               key.ClaimProductSerial,
                                                               AdjustedAmount = g.Sum(s => s.AdjustedAmount)
                                                           })
                               .OrderBy(o => o.ReceiveNo)
                                                       .ToList();
                            var supplierWiseTotalAmount = Model.ReplacementReceiveAnalysisLists.Where(x => x.Location == indReplacementReceiveLocation && x.Supplier.Equals(indSupplier)).Sum(s => s.AdjustedAmount);

                            foreach (var indData in dataLists)
                            {
                                Problems = "";
                                foreach (var problem in indData.ProblemNames)
                                {
                                    Problems = Problems == "" ? "" + problem.Name : Problems + "," + problem.Name;
                                }
                                <tr>
                                    <td style="text-align:left;vertical-align:top;padding-left:5px;padding-right:5px;border:1px solid black;">@indData.ReceiveNo</td>
                                    <td style="text-align:left;vertical-align:top;padding-left:5px;padding-right:5px;border:1px solid black;">@indData.ReceiveDate.ToString("dd-MMM-yyyy")</td>
                                    <td style="text-align:left;vertical-align:top;padding-left:5px;padding-right:5px;border:1px solid black;">@indData.ReceivedBy</td>
                                    <td style="text-align:left;vertical-align:top;padding-left:5px;padding-right:5px;border:1px solid black;"></td>
                                    <td style="text-align:left;vertical-align:top;padding-left:5px;padding-right:5px;border:1px solid black;">@indData.ReceivedProductName</td>
                                    <td style="text-align:left;vertical-align:top;padding-left:5px;padding-right:5px;border:1px solid black;">@indData.Serial</td>
                                    <td style="text-align:left;vertical-align:top;padding-left:5px;padding-right:5px;border:1px solid black;">@indData.ClaimProductName</td>
                                    <td style="text-align:left;vertical-align:top;padding-left:5px;padding-right:5px;border:1px solid black;">@indData.ClaimProductSerial</td>
                                    <td style="text-align:left;vertical-align:top;padding-left:5px;padding-right:5px;border:1px solid black;">@Problems</td>
                                    <td style="text-align:right;vertical-align:top;padding-left:5px;padding-right:5px;border:1px solid black;">@indData.AdjustedAmount</td>
                                    <td style="text-align:right;vertical-align:top;padding-left:5px;padding-right:5px;border:1px solid black;">@indData.AdjustedAmount</td>
                                </tr>
                            }
                            <tr style="font-weight:bold;">
                                <td colspan="10" style="text-align:right;vertical-align:top;padding-left:5px;padding-right:5px;border:0px;">Supplier Wise Total (@Model.CurrencyType)</td>
                                <td style="text-align:right;vertical-align:top;padding-left:5px;padding-right:5px;border:1px solid black;">@supplierWiseTotalAmount.ToString("N", CultureInfo.CreateSpecificCulture(Model.CurrencyCultureInfo))</td>
                            </tr>
                        }
                        <tr style="font-weight:bold;">
                            <td colspan="10" style="text-align:right;vertical-align:top;padding-left:5px;padding-right:5px;border:0px;">Location (@Model.CurrencyType)</td>
                            <td style="text-align:right;vertical-align:top;padding-left:5px;padding-right:5px;border:1px solid black;">@locationWiseTotalAmount.ToString("N", CultureInfo.CreateSpecificCulture(Model.CurrencyCultureInfo))</td>
                        </tr>
                    }
                </table>
                <br />
                        }
                        <span style="font-weight:bold; float: right;">Grand Total (@Model.CurrencyType) # @Model.ReplacementReceiveAnalysisLists.Sum(s => s.AdjustedAmount).ToString("N", CultureInfo.CreateSpecificCulture(Model.CurrencyCultureInfo))</span>

        }
    </div>
</body>
</html>